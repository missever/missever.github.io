const int maxn = 205;
const LL INF = 1LL * mod * mod;
LL w[maxn][maxn];
LL lx[maxn], ly[maxn];
int linky[maxn], visy[maxn], pre[maxn];
LL slack[maxn];
int nx, ny;
void bfs(int k) {
    int px, py = 0, yy = 0;
    LL d;
    memset(pre, 0, sizeof(pre));
    for(int i = 1; i <= ny; i++) slack[i] = INF;
    linky[py] = k;
    do {
        px = linky[py], d = INF, visy[py] = 1;
        for(int i = 1; i <= ny; i++) {
            if(!visy[i]) {
                if(slack[i] > lx[px] + ly[i] - w[px][i])
                    slack[i] = lx[px] + ly[i] - w[px][i], pre[i] = py;
                if(slack[i] < d) d = slack[i], yy = i;
            }
        }
        for(int i = 0; i <= ny; i++) {
            if(visy[i]) lx[linky[i]] -= d, ly[i] += d;
            else slack[i] -= d;
        }
        py = yy;
    } while(linky[py] != 0);
    while(py) linky[py] = linky[pre[py]], py = pre[py];
}
LL KM() {
    memset(lx, 0, sizeof(lx));
    memset(ly, 0, sizeof(ly));
    memset(linky, 0, sizeof(linky));
    for(int i = 1; i <= nx; i++) {
        memset(visy, 0, sizeof(visy));
        bfs(i);
    }
    LL res = 0;
    for(int i = 1; i <= nx; i++) res += lx[i];
    for(int i = 1; i <= ny; i++) res += ly[i];
    return res;
}