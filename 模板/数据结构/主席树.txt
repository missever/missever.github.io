//created by missever

#include <iostream>
#include <vector>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <cstdlib>
#include <algorithm>
#define MAX 1000000007
using namespace std;

const int maxn = 100005;
struct node
{
    int l,r;
    int v;
} f[maxn*25];
int tot = 1;
int root[maxn];
vector<int>g,h;

void adddata(int t,int pos,int l,int r,int x)
{
    if(l == r)
    {
        f[t].v = f[pos].v + 1;
        return;
    }
    int mid;
    mid = (l + r) >> 1;
    if(x > mid)
    {
        f[t].l = f[pos].l;
        f[t].r = tot++;
        f[t].v = f[pos].v + 1;
        adddata(f[t].r,f[pos].r,mid+1,r,x);
    }
    else
    {
        f[t].r = f[pos].r;
        f[t].l = tot++;
        f[t].v = f[pos].v + 1;
        adddata(f[t].l,f[pos].l,l,mid,x);
    }
}

int getans(int a,int b,int l,int r,int k)
{
    if(l == r) return l;
    int mid,d;
    mid = (l + r) >> 1;
    d = f[f[b].l].v - f[f[a].l].v;
    if(d >= k) return getans(f[a].l,f[b].l,l,mid,k);
    else return getans(f[a].r,f[b].r,mid+1,r,k-d);
}

int ff(int x)
{
    return lower_bound(g.begin(),g.end(),x) - g.begin() + 1;
}

int main()
{
    int m,n,i,k;
    int l,r,x;
    scanf("%d%d",&n,&m);
    for(i = 0; i < n; i++)
    {
        scanf("%d",&k);
        g.push_back(k);
        h.push_back(k);
    }
    sort(g.begin(),g.end());//ÀëÉ¢»¯
    root[0] = 0;
    f[0].l = f[0].r = f[0].v = 0;
    for(i = 0; i < n; i++)
    {
        k = ff(h[i]);
        root[i+1] = tot++;
        adddata(root[i+1],root[i],1,n,k);//¼Ó±ß
    }
    for(i = 0;i < m; i++)
    {
        scanf("%d%d%d",&l,&r,&k);
        x = getans(root[l-1],root[r],1,n,k);//²éÕÒ
        printf("%d\n",g[x-1]);
    }
    return 0;
}
