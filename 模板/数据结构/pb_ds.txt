//优先队列
#include<ext/pb_ds/priority_queue.hpp>
using namespace __gnu_pbds;
__gnu_pbds::priority_queue<type,cmp,tag> pq;
//tyge为变量类型，如int，char
//cmp为比较函数,如less<int>,greater<int>
//tag是堆类型，有配对堆（pairing_heap_tag）、二叉堆（binary_heap_tag）、二项堆（binomial_heap_tag）、冗余计数二项堆（rc_binomial_heap_tag）、经改良的斐波那契堆（thin_heap_tag）
//支持合并操作a.join(b)   修改值 a.modify(it,x),it为迭代器
//一般使用pairing_heap


//平衡树
#include<ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
 tree<key,value,cmp,tag,tree_order_statistics_node_update> bbt;
//key为变量类型，如int，char
//value为键值类型，同map、、若使用set，该处为null_type或null_mapped_type
//cmp为比较函数,如less<int>(从小到大),greater<LL>
//tag是堆类型，有红黑树（rb_tree_tag）、伸展树（splay_tree_tag）和排序向量树（oov_tree_tag）
//求kth（find_by_order）返回的是迭代器，求rank（order_of_key）返回的是值，两者都是从0开始计算的。
// insert() erase() size()