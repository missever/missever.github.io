<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[2018川大校赛补]]></title>
      <url>/2018/04/23/2018scu/</url>
      <content type="html"><![CDATA[<h1 id="SCU-4581"><a href="#SCU-4581" class="headerlink" title="SCU-4581"></a>SCU-4581</h1><p>由于内存限制,对$v &lt; 1e6$做普通背包,对$n &lt; 20$做容斥即可<br><del>想到了容斥居然想不出组合数公式</del><br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div></pre></td><td class="code"><pre><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">#define fi first</div><div class="line">#define se second</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line">typedef pair&lt;int, int&gt; P;</div><div class="line"></div><div class="line">const int BUFFER_MAX_SIZE = 100000;</div><div class="line">struct Quick_In &#123;</div><div class="line">    char buf[BUFFER_MAX_SIZE], *ps = buf, *pe = buf + 1;</div><div class="line">    inline void InNext() &#123;</div><div class="line">        if (++ps == pe)</div><div class="line">            pe = (ps = buf) + fread(buf, sizeof(char), sizeof(buf) / sizeof(char), stdin);</div><div class="line">    &#125;</div><div class="line">    template&lt;class T&gt;</div><div class="line">    inline bool operator()(T &amp;number) &#123;</div><div class="line">        number = 0;</div><div class="line">        T f = 1;</div><div class="line">        bool vis_point = 0;</div><div class="line">        if (ps == pe) return false; //EOF</div><div class="line">        do &#123;</div><div class="line">            InNext();</div><div class="line">            if (&apos;-&apos; == *ps) f = -1;</div><div class="line">        &#125; while (ps != pe &amp;&amp; !isdigit(*ps));</div><div class="line">        if (ps == pe) return false; //EOF</div><div class="line">        do &#123;</div><div class="line">            if((*ps) == &apos;.&apos;) vis_point = 1;</div><div class="line">            else &#123;</div><div class="line">                number = number * 10 + *ps - 48;</div><div class="line">                if(vis_point) f *= 0.1;</div><div class="line">            &#125;</div><div class="line">            InNext();</div><div class="line">        &#125; while (ps != pe &amp;&amp; (isdigit(*ps) || (*ps) == &apos;.&apos;));</div><div class="line">        number *= f;</div><div class="line">        return true;</div><div class="line">    &#125;</div><div class="line">&#125; In;</div><div class="line"></div><div class="line">const int maxn = 2e5 + 5;</div><div class="line">const int mod = 1e9 + 7;</div><div class="line"></div><div class="line">int add(int x, int y) &#123;</div><div class="line">    x += y;</div><div class="line">    if(x &gt;= mod) x -= mod;</div><div class="line">    return x;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int mul(int x, int y) &#123;</div><div class="line">    LL z = 1LL * x * y;</div><div class="line">    return z - z / mod * mod;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int powt(int x, int y) &#123;</div><div class="line">    int r = 1;</div><div class="line">    while(y) &#123;</div><div class="line">        if(y &amp; 1) r = mul(r, x);</div><div class="line">        x = mul(x, x);</div><div class="line">        y &gt;&gt;= 1;</div><div class="line">    &#125;</div><div class="line">    return r;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int f[maxn], a[20];</div><div class="line"></div><div class="line">int C(int n, int m) &#123;</div><div class="line">    if(m &gt; n) return 0;</div><div class="line">    int res = 1;</div><div class="line">    for(int i = 0;i &lt; m; i++) res = mul(res, mul(n - i, powt(i + 1, mod - 2)));</div><div class="line">    return res;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void solve() &#123;</div><div class="line">    int  n, v, w, c, i, j, res;</div><div class="line">    In(n);</div><div class="line">    In(v);</div><div class="line">    if(v &lt; maxn) &#123;</div><div class="line">        for(i = 0; i &lt;= v; i++) f[v] = 0;</div><div class="line">        f[0] = 1;</div><div class="line">        for(i = 0; i &lt; n; i++) &#123;</div><div class="line">            In(c);</div><div class="line">            for(j = v - c + 1, res = 0; j &lt;= v; j++) res = add(res, f[j]);</div><div class="line">            for(j = v; j &gt; 0; j--) &#123;</div><div class="line">                res = add(res, mod - f[j]);</div><div class="line">                if(j &gt;= c) res = add(res, f[j - c]);</div><div class="line">                f[j] = add(f[j], res);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        printf(&quot;%d\n&quot;, f[v]);</div><div class="line">    &#125; else &#123;</div><div class="line">        for(i = 0;i &lt; n; i++) In(a[i]);</div><div class="line">        for(i = res = 0;i &lt; (1 &lt;&lt; n); i++) &#123;</div><div class="line">            for(j = c = 0, w = v;j &lt; n; j++) &#123;</div><div class="line">                if((i &gt;&gt; j) &amp; 1) &#123;</div><div class="line">                    w -= a[j] + 1;</div><div class="line">                    c++;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            if(c &amp; 1) res = add(res, mod - C(w + n - 1, n - 1));</div><div class="line">            else res = add(res, C(w + n - 1, n - 1));</div><div class="line">        &#125;</div><div class="line">        printf(&quot;%d\n&quot;, res);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">#ifdef CX_TEST</div><div class="line">    //freopen(&quot;E:\\program--GG\\test_in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">#endif</div><div class="line">    int t;</div><div class="line">    scanf(&quot;%d&quot;, &amp;t);</div><div class="line">    while(t--) solve();</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="SCU-4589"><a href="#SCU-4589" class="headerlink" title="SCU-4589"></a>SCU-4589</h1><p>题意:求质数的$k$次方前缀和<br>一种类似欧拉筛法的基本应用吧<br>复杂度是$O(k * n^{3/4}/logn)$的<br><del>这个手写$k$次方自然数前缀和真恶心</del><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div></pre></td><td class="code"><pre><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">#define fi first</div><div class="line">#define se second</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line">typedef pair&lt;int, int&gt; P;</div><div class="line"></div><div class="line">const int maxn = 1e5 + 5;</div><div class="line">int mod, k;</div><div class="line"></div><div class="line">int add(int x, int y) &#123;</div><div class="line">    x += y;</div><div class="line">    if(x &gt;= mod) x -= mod;</div><div class="line">    return x;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int mul(int x, int y) &#123;</div><div class="line">    LL z = 1LL * x * y;</div><div class="line">    return z - z / mod * mod;</div><div class="line">&#125;</div><div class="line"></div><div class="line">LL mul(LL a, LL b, LL m) &#123;</div><div class="line">    LL r = (a * b - (LL)(((long double)a * b) / m) * m);</div><div class="line">    r = r - r / m * m;</div><div class="line">    if(r &lt; 0) r += m;</div><div class="line">    return r;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int powt(int x, int y) &#123;</div><div class="line">    int r = 1;</div><div class="line">    while(y) &#123;</div><div class="line">        if(y &amp; 1) r = mul(r, x);</div><div class="line">        x = mul(x, x);</div><div class="line">        y &gt;&gt;= 1;</div><div class="line">    &#125;</div><div class="line">    return r;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int fg[maxn], pri[maxn];</div><div class="line">LL sum[maxn];</div><div class="line">int cnt = 0;</div><div class="line"></div><div class="line">void GetPrime() &#123;</div><div class="line">    for (int i = 2; i &lt; maxn; ++i) &#123;</div><div class="line">        if (!fg[i]) pri[cnt++] = i;</div><div class="line">        for (int j = 0; j &lt; cnt &amp;&amp; pri[j] * i &lt; maxn; ++j) &#123;</div><div class="line">            fg[pri[j] * i] = 1;</div><div class="line">            if (i % pri[j] == 0) break;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int S(int n) &#123;</div><div class="line">    int res;</div><div class="line">    if(k == 0) res = n % mod;</div><div class="line">    else if(k == 1) res =  1LL * n * (n + 1) / 2 % mod;</div><div class="line">    else if(k == 2) &#123;</div><div class="line">        LL m = 1LL * mod * 6;</div><div class="line">        res = mul(mul(n, n + 1, m), 2 * n + 1, m) / 6;</div><div class="line">    &#125; else if(k == 3) &#123;</div><div class="line">        LL m = 1LL * mod * 4;</div><div class="line">        res = mul(mul(n, n + 1, m), mul(n, n + 1, m), m) / 4;</div><div class="line">    &#125; else if(k == 4) &#123;</div><div class="line">        LL m = 1LL * mod * 30;</div><div class="line">        LL d = mul(6LL * n + 9, n, m);</div><div class="line">        d = mul(d + 1, n, m) + m - 1;</div><div class="line">        res = mul(d, mul(n, n + 1, m), m) / 30;</div><div class="line">    &#125; else if(k == 5) &#123;</div><div class="line">        LL m = 1LL * mod * 12;</div><div class="line">        LL d = mul(2LL * n + 4, n, m);</div><div class="line">        d = mul(d + 1, n, m) + m - 1;</div><div class="line">        res = mul(d, mul(mul(n, n, m), n + 1, m), m) / 12;</div><div class="line">    &#125; else if(k == 6) &#123;</div><div class="line">        LL m = 1LL * mod * 42;</div><div class="line">        LL d = mul(6LL * n + 15, n, m);</div><div class="line">        d = mul(d + 6, n, m);</div><div class="line">        d = mul(d + m - 6, n, m);</div><div class="line">        d = mul(d + m - 1, n, m) + 1;</div><div class="line">        res = mul(d, mul(n, n + 1, m), m) / 42;</div><div class="line">    &#125; else if(k == 7) &#123;</div><div class="line">        LL m = 1LL * mod * 24;</div><div class="line">        LL d = mul(3LL * n + 9, n, m);</div><div class="line">        d = mul(d + 5, n, m);</div><div class="line">        d = mul(d + m - 5, n, m);</div><div class="line">        d = mul(d + m - 2, n, m) + 2;</div><div class="line">        res = mul(d, mul(mul(n, n, m), n + 1, m), m) / 24;</div><div class="line">    &#125; else if(k == 8) &#123;</div><div class="line">        LL m = 1LL * mod * 90;</div><div class="line">        LL d = mul(10LL * n + 35, n, m);</div><div class="line">        d = mul(d + 25, n, m);</div><div class="line">        d = mul(d + m - 25, n, m);</div><div class="line">        d = mul(d + m - 17, n, m);</div><div class="line">        d = mul(d + 17, n, m);</div><div class="line">        d = mul(d + 3, n, m) + m - 3;</div><div class="line">        res = mul(d, mul(n, n + 1, m), m) / 90;</div><div class="line">    &#125; else if(k == 9) &#123;</div><div class="line">        LL m = 1LL * mod * 20;</div><div class="line">        LL d = mul(2LL * n + 8, n, m);</div><div class="line">        d = mul(d + 7, n, m);</div><div class="line">        d = mul(d + m - 7, n, m);</div><div class="line">        d = mul(d + m - 7, n, m);</div><div class="line">        d = mul(d + 7, n, m);</div><div class="line">        d = mul(d + 3, n, m) + m - 3;</div><div class="line">        res = mul(d, mul(mul(n, n, m), n + 1, m), m) / 20;</div><div class="line">    &#125; else &#123;</div><div class="line">        LL m = 1LL * mod * 66;</div><div class="line">        LL d = mul(6LL * n + 27, n, m);</div><div class="line">        d = mul(d + 28, n, m);</div><div class="line">        d = mul(d + m - 28, n, m);</div><div class="line">        d = mul(d + m - 38, n, m);</div><div class="line">        d = mul(d + 38, n, m);</div><div class="line">        d = mul(d + 28, n, m);</div><div class="line">        d = mul(d + m - 28, n, m);</div><div class="line">        d = mul(d + m - 5, n, m) + 5;</div><div class="line">        res = mul(d, mul(n, n + 1, m), m) / 66;</div><div class="line">    &#125;</div><div class="line">    return add(res, mod - 1);</div><div class="line">&#125;</div><div class="line"></div><div class="line">LL fa[maxn], fb[maxn];</div><div class="line"></div><div class="line">void solve() &#123;</div><div class="line">    LL i, r, n;</div><div class="line">    scanf(&quot;%lld%d%d&quot;, &amp;n, &amp;k, &amp;mod);</div><div class="line">    for(r = 1; 1LL * r * r &lt;= n; r++) fa[r] = S(r);</div><div class="line">    for(i = 1; i &lt; r; i++) fb[i] = S(n / i);</div><div class="line">    for(LL p = 2; p &lt; r; p++) &#123;</div><div class="line">        if(!fg[p]) &#123;</div><div class="line">            int pw = powt(p, k);</div><div class="line">            for(i = 1; i &lt;= min(r - 1, n / p / p); i++) &#123;</div><div class="line">                if(p * i &lt; r) fb[i] = add(fb[i], mod - mul(pw, add(fb[i * p], mod - fa[p - 1])));</div><div class="line">                else fb[i] = add(fb[i], mod - mul(pw, add(fa[n / p / i], mod - fa[p - 1])));</div><div class="line">            &#125;</div><div class="line">            for(i = r - 1; i &gt;= p * p; i--) fa[i] = add(fa[i], mod - mul(pw, add(fa[i / p], mod - fa[p - 1])));</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    printf(&quot;%lld\n&quot;, fb[1]);</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">#ifdef CX_TEST</div><div class="line">    freopen(&quot;E:\\program--GG\\test_in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">#endif</div><div class="line">    int t;</div><div class="line">    GetPrime();</div><div class="line">    scanf(&quot;%d&quot;, &amp;t);</div><div class="line">    while(t--) solve();</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> ACM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[CDOJ 1825 柱爷搞搞搞搞搞xxxxoooorrrrr]]></title>
      <url>/2018/02/27/CDOJ%201825/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.uestc.edu.cn/#/problem/show/1825" target="_blank" rel="external">题面传送门</a><br><a id="more"></a><br>类似数位DP的思想,<br>考虑对于这$n$个数的前$i$位,我们对每个数的前$i$位选的都是它的上界(最大值),那么这前$i$位的异或和结果只有一种,然后我们考虑它们的第$i + 1$位存在一些数选的不是上界,假设第一个没有选上界的数为第$j$个,那么存在其它数随便选后,第$j$个数最后总能选择一个数使得最后的异或和为给定值.(因为第$j$个数能选择的数的范围是一个全集)<br>我们可以$O(n)$的DP出前$i$位都选上界,第$i + 1$位存在一些数选的不是上界的情况下产生的方案数.<br>按位枚举,总复杂度就是$nlog_{2}1e9$<br>整体思想类似DP套DP</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">#define fi first</div><div class="line">#define se second</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line">typedef pair&lt;int, int&gt; P;</div><div class="line"></div><div class="line">const int maxn = 1e5 + 5;</div><div class="line">const int mod = 1e9 + 7;</div><div class="line"></div><div class="line">void add(int &amp;x, int y) &#123;</div><div class="line">    x += y;</div><div class="line">    if(x &gt;= mod) x -= mod;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int mul(int x, int y) &#123;</div><div class="line">    LL z = 1LL * x * y;</div><div class="line">    return z - z / mod * mod;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int f[maxn][2][2], a[maxn];</div><div class="line"></div><div class="line">int solve(int n, int k, int e) &#123;</div><div class="line">    int i, j, res = (1 &lt;&lt; k) - 1;</div><div class="line">    memset(f, 0, sizeof(f));</div><div class="line">    f[0][0][0] = 1;</div><div class="line">    for(i = 0; i &lt; n; i++) &#123;</div><div class="line">        j = (a[i] &amp; res) + 1;</div><div class="line">        if((a[i] &gt;&gt; k) &amp; 1) &#123;</div><div class="line">            add(f[i + 1][0][1], f[i][0][0]);</div><div class="line">            add(f[i + 1][1][1], f[i][1][0]);</div><div class="line"></div><div class="line">            add(f[i + 1][0][1], mul(f[i][0][1], 1 &lt;&lt; k));</div><div class="line">            add(f[i + 1][1][1], mul(f[i][1][1], 1 &lt;&lt; k));</div><div class="line">            add(f[i + 1][1][0], mul(f[i][0][0], j));</div><div class="line">            add(f[i + 1][0][0], mul(f[i][1][0], j));</div><div class="line">            add(f[i + 1][1][1], mul(f[i][0][1], j));</div><div class="line">            add(f[i + 1][0][1], mul(f[i][1][1], j));</div><div class="line">        &#125; else &#123;</div><div class="line">            f[i + 1][0][0] = mul(f[i][0][0], j);</div><div class="line">            f[i + 1][0][1] = mul(f[i][0][1], j);</div><div class="line">            f[i + 1][1][0] = mul(f[i][1][0], j);</div><div class="line">            f[i + 1][1][1] = mul(f[i][1][1], j);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return f[n][e][1];</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">#ifdef CX_TEST</div><div class="line">    freopen(&quot;E:\\program--GG\\test_in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">#endif</div><div class="line">    int n, i, k, sum = 0, ans = 0;</div><div class="line">    scanf(&quot;%d%d&quot;, &amp;n, &amp;k);</div><div class="line">    for(i = 0; i &lt; n; i++) &#123;</div><div class="line">        scanf(&quot;%d&quot;, &amp;a[i]);</div><div class="line">        sum ^= a[i];</div><div class="line">    &#125;</div><div class="line">    for(i = 30; i &gt;= 0; i--) &#123;</div><div class="line">        add(ans, solve(n, i, (k &gt;&gt; i) &amp; 1));</div><div class="line">        if((sum &gt;&gt; i) != (k &gt;&gt; i)) break;</div><div class="line">    &#125;</div><div class="line">    if(sum == k) add(ans, 1);</div><div class="line">    printf(&quot;%d\n&quot;, ans);</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> ACM </category>
            
        </categories>
        
        
        <tags>
            
            <tag> DP </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hdu5848 Easy Homework]]></title>
      <url>/2018/01/23/hdu5848/</url>
      <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5848" target="_blank" rel="external">题面传送门</a><br><a id="more"></a><br>感觉非常恶心的数学题…………<br>首先我们需要先发现这个等式$f_{n}^{2}-f_{n-1}f_{n+1}=(-1)^{n}$<br>证明的话把通项公式代入,再联系该数列的特征方程并利用韦达定理就行了<br>对$n$分奇偶性讨论,<br>然后令$f_{n} = x,f_{n - 1} = y$的话就是一个关于$y$的一元二次方程了<br>利用二次剩余解出$y$,没有二次剩余就无解<br>有了$x,y$就相当于有了终状态$B$<br>构造转移矩阵$A$求$A^{k}=B\%p$的解,可以用BSGS实现<br>另一个难点可能是BSGS的范围……<br>我们知道这个数列在模$p$意义下是有循环节的,对于这道题,循环节规模在$O(p)$量级,可以利用通用的矩阵的循环节公式求得最小循环节……这个循环节大小就是BSGS的范围<br>有点卡常数……需要手写hash表才行……<br><del>或许是我写得太挫了</del><br>update:那个转移矩阵可以只用两个元素表示……似乎可减少一半的常数？<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div></pre></td><td class="code"><pre><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">#define fi first</div><div class="line">#define se second</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line">typedef pair&lt;int, int&gt; P;</div><div class="line"></div><div class="line">const int maxn = 1e5 + 5;</div><div class="line">int mod, wf;</div><div class="line">default_random_engine generator(time(NULL));</div><div class="line">uniform_int_distribution&lt;LL&gt; df(1, 1e18);</div><div class="line"></div><div class="line">int add(int x, int y) &#123;</div><div class="line">    x += y;</div><div class="line">    if(x &gt;= mod) x -= mod;</div><div class="line">    return x;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int mul(int x, int y) &#123;</div><div class="line">    LL z = 1LL * x * y;</div><div class="line">    return z - z / mod * mod;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int powt(int a, int b) &#123;</div><div class="line">    int r = 1;</div><div class="line">    while(b) &#123;</div><div class="line">        if(b &amp; 1) r = mul(r, a);</div><div class="line">        a = mul(a, a);</div><div class="line">        b &gt;&gt;= 1;</div><div class="line">    &#125;</div><div class="line">    return r;</div><div class="line">&#125;</div><div class="line"></div><div class="line">template&lt;typename T, typename U&gt;</div><div class="line">struct HashMap &#123;</div><div class="line">    static const int M = 333331;</div><div class="line">    int chk[M], cn;</div><div class="line">    int q[M], qn;</div><div class="line">    vector&lt;T&gt; a;</div><div class="line">    vector&lt;U&gt; b;</div><div class="line">    int fst[M], m;</div><div class="line">    vector&lt;int&gt; nxt;</div><div class="line">    HashMap() &#123;</div><div class="line">        memset(fst, -1, sizeof fst);</div><div class="line">        cn++;</div><div class="line">    &#125;</div><div class="line">    void clear() &#123;</div><div class="line">        for (int i = 0; i &lt; qn; i++) fst[q[i]] = -1;</div><div class="line">        cn++;</div><div class="line">        qn = m = 0;</div><div class="line">        a.clear(), b.clear(), nxt.clear();</div><div class="line">    &#125;</div><div class="line">    U&amp; operator[](T x) &#123;</div><div class="line">        int r = (x % M + M) % M;</div><div class="line">        for (int e = fst[r]; ~e; e = nxt[e]) &#123;</div><div class="line">            if (a[e] == x) &#123;</div><div class="line">                return b[e];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        if (chk[r] != cn) &#123;</div><div class="line">            chk[r] = cn;</div><div class="line">            q[qn++] = r;</div><div class="line">        &#125;</div><div class="line">        a.push_back(x), b.push_back(U());</div><div class="line">        nxt.push_back(fst[r]), fst[r] = m++;</div><div class="line">        return b.back();</div><div class="line">    &#125;</div><div class="line">    bool count(T x) &#123;</div><div class="line">        int r = (x % M + M) % M;</div><div class="line">        for (int e = fst[r]; ~e; e = nxt[e]) &#123;</div><div class="line">            if (a[e] == x) &#123;</div><div class="line">                return 1;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return 0;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">const int msize = 2;</div><div class="line">struct matrix &#123;</div><div class="line">    int a[msize][msize];</div><div class="line">    void clear() &#123;</div><div class="line">        memset(a, 0, sizeof(a));</div><div class="line">    &#125;</div><div class="line">    matrix operator *(const matrix &amp;b) const &#123;</div><div class="line">        matrix tmp;</div><div class="line">        tmp.clear();</div><div class="line">        for(int i = 0; i &lt; msize; i++) &#123;</div><div class="line">            for(int j = 0; j &lt; msize; j++) &#123;</div><div class="line">                for(int k = 0; k &lt; msize; k++) &#123;</div><div class="line">                    tmp.a[i][j] = add(tmp.a[i][j], mul(a[i][k], b.a[k][j]));</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return tmp;</div><div class="line">    &#125;</div><div class="line">    bool operator ==(const matrix &amp;b) const &#123;</div><div class="line">        for(int i = 0; i &lt; msize; i++) &#123;</div><div class="line">            for(int j = 0; j &lt; msize; j++) &#123;</div><div class="line">                if(a[i][j] != b.a[i][j]) return false;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return true;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">matrix powt(matrix a, LL b) &#123;</div><div class="line">    matrix r = &#123;1, 0, 0, 1&#125;;</div><div class="line">    while(b) &#123;</div><div class="line">        if(b &amp; 1) r = r * a;</div><div class="line">        a = a * a;</div><div class="line">        b &gt;&gt;= 1;</div><div class="line">    &#125;</div><div class="line">    return r;</div><div class="line">&#125;</div><div class="line"></div><div class="line">struct node &#123;</div><div class="line">    int p, d;</div><div class="line">    node operator * (const node &amp;b) const &#123;</div><div class="line">        node r;</div><div class="line">        r.p = add(mul(p, b.p), mul(mul(d, b.d), wf));</div><div class="line">        r.d = add(mul(p, b.d), mul(d, b.p));</div><div class="line">        return r;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line">node powt(node a, int b) &#123;</div><div class="line">    node r = node&#123;1, 0&#125;;</div><div class="line">    while(b) &#123;</div><div class="line">        if(b &amp; 1) r = r * a;</div><div class="line">        a = a * a;</div><div class="line">        b &gt;&gt;= 1;</div><div class="line">    &#125;</div><div class="line">    return r;</div><div class="line">&#125;</div><div class="line">int Legendre(int a) &#123;</div><div class="line">    return powt(a, (mod - 1) &gt;&gt; 1);</div><div class="line">&#125;</div><div class="line">int get_ans(int x) &#123;</div><div class="line">    if(x == 0) return 0;</div><div class="line">    if(powt(x, (mod - 1) &gt;&gt; 1) + 1 == mod) return -1;</div><div class="line">    int a;</div><div class="line">    while(true) &#123;</div><div class="line">        a = df(generator) % mod;</div><div class="line">        wf = add(mul(a, a), mod - x);</div><div class="line">        if(Legendre(wf) + 1 == mod) break;</div><div class="line">    &#125;</div><div class="line">    node tmp = node&#123;a, 1&#125;;</div><div class="line">    return powt(tmp, (mod + 1) &gt;&gt; 1).p;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int pri[maxn], cnt = 0;</div><div class="line">void GetPrime() &#123;</div><div class="line">    for (int i = 2; i &lt; maxn; ++i) &#123;</div><div class="line">        if (!pri[i]) pri[cnt++] = i;</div><div class="line">        for (int j = 0; j &lt; cnt &amp;&amp; pri[j] * i &lt; maxn; ++j) &#123;</div><div class="line">            pri[pri[j] * i] = 1;</div><div class="line">            if (i % pri[j] == 0) break;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">vector&lt;int&gt; fac;</div><div class="line">void get_fac(int x) &#123;</div><div class="line">    for(int i = 0; pri[i] * pri[i] &lt;= x; i++) &#123;</div><div class="line">        while(x % pri[i] == 0) &#123;</div><div class="line">            fac.push_back(pri[i]);</div><div class="line">            x /= pri[i];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    if(x &gt; 1) fac.push_back(x);</div><div class="line">&#125;</div><div class="line"></div><div class="line">LL get_cycle(int a) &#123;</div><div class="line">    matrix r = &#123;a, 1, 1, 0&#125;;</div><div class="line">    matrix u = &#123;1, 0, 0, 1&#125;;</div><div class="line">    fac.clear();</div><div class="line">    get_fac(mod - 1);</div><div class="line">    //get_fac(mod - 1);</div><div class="line">    get_fac(mod + 1);</div><div class="line">    fac.push_back(mod);</div><div class="line">    int n = fac.size();</div><div class="line">    LL d = 1;</div><div class="line">    for(int i = 0; i &lt; n; i++) &#123;</div><div class="line">        matrix v = r;</div><div class="line">        for(int j = i + 1; j &lt; n; j++) v = powt(v, fac[j]);</div><div class="line">        if(u == v) continue;</div><div class="line">        d *= fac[i];</div><div class="line">        r = powt(r, fac[i]);</div><div class="line">    &#125;</div><div class="line">    return d;</div><div class="line">&#125;</div><div class="line"></div><div class="line">HashMap &lt;LL, int&gt; q;</div><div class="line">LL solve(int fa, int a, int b, LL len, LL l, LL r, int k) &#123;</div><div class="line">    int i, j, m = ceil(sqrt(1.0 * len));</div><div class="line">    LL x, dl, dr, ans = 0;</div><div class="line">    matrix v = &#123;fa, 1, 1, 0&#125;;</div><div class="line">    matrix u = &#123;add(mul(fa, b), a), b, b, a&#125;;</div><div class="line">    q.clear();</div><div class="line">    for(i = 0; i &lt; m; i++) &#123;</div><div class="line">        q[1LL * u.a[0][0] * mod + u.a[1][0]] = i;</div><div class="line">        u = u * v;</div><div class="line">    &#125;</div><div class="line">    u = v = powt(v, m);</div><div class="line">    for(i = 1; i &lt;= m; i++) &#123;</div><div class="line">        if(q.count(1LL * u.a[0][0] * mod + u.a[1][0])) &#123;</div><div class="line">            j = q[1LL * u.a[0][0] * mod + u.a[1][0]];</div><div class="line">            x = 1LL * i * m - j;</div><div class="line">            if(x &lt;= len) &#123;</div><div class="line">                dl = (l - 1) / len;</div><div class="line">                dr = r / len;</div><div class="line">                if((l - 1) % len &gt;= x) dl++;</div><div class="line">                if(r % len &gt;= x) dr++;</div><div class="line">                if(len &amp; 1) &#123;</div><div class="line">                    if(((x + dl * len) &amp; 1) == k) ans += (dr - dl + 1) / 2;</div><div class="line">                    else ans += (dr - dl) / 2;</div><div class="line">                &#125; else &#123;</div><div class="line">                    if((x &amp; 1) == k) ans += dr - dl;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            break;</div><div class="line">        &#125;</div><div class="line">        u = u * v;</div><div class="line">    &#125;</div><div class="line">    return ans;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void solve() &#123;</div><div class="line">    int a, x, u, d, y1, y2, inv;</div><div class="line">    LL l, r, ans = 0;</div><div class="line">    scanf(&quot;%d%d%d%lld%lld&quot;, &amp;a, &amp;mod, &amp;x, &amp;l, &amp;r);</div><div class="line">    LL len = get_cycle(a);</div><div class="line">    inv  = (mod + 1) &gt;&gt; 1;</div><div class="line">    d = mul(a, x);</div><div class="line">    d = add(mul(d, d), mul(4, mul(x, x)));</div><div class="line">    u = get_ans(add(d, mul(4, mod - 1)));</div><div class="line">    if(u &gt; 0) &#123;</div><div class="line">        y1 = mul(add(u, mod - mul(a, x)), inv);</div><div class="line">        y2 = mul(mod - add(u, mul(a, x)), inv);</div><div class="line">        ans += solve(a, y1, x, len, l, r, 1);</div><div class="line">        ans += solve(a, y2, x, len, l, r, 1);</div><div class="line">    &#125;</div><div class="line">    u = get_ans(add(d, 4));</div><div class="line">    if(u &gt; 0) &#123;</div><div class="line">        y1 = mul(add(u, mod - mul(a, x)), inv);</div><div class="line">        y2 = mul(mod - add(u, mul(a, x)), inv);</div><div class="line">        ans += solve(a, y1, x, len, l, r, 0);</div><div class="line">        ans += solve(a, y2, x, len, l, r, 0);</div><div class="line">    &#125;</div><div class="line">    printf(&quot;%lld\n&quot;, ans);</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">#ifdef CX_TEST</div><div class="line">    freopen(&quot;E:\\program--GG\\test_in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">#endif</div><div class="line">    int t;</div><div class="line">    GetPrime();</div><div class="line">    scanf(&quot;%d&quot;, &amp;t);</div><div class="line">    while(t--) solve();</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> ACM </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数论 </tag>
            
            <tag> BSGS </tag>
            
            <tag> 二次剩余 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Power Substring]]></title>
      <url>/2018/01/17/CF_Hello2018_G/</url>
      <content type="html"><![CDATA[<p><a href="http://codeforces.com/contest/913/problem/G" target="_blank" rel="external">题目传送门</a><br><a id="more"></a><br>考虑求$a * 10 ^ {m} + x \equiv 2 ^ {k} \% 10 ^ {n + m}$,$n$是$a$在十进制下的位数<br>然后考虑中国剩余定理,先求一个满足$a*10^{m}+x \equiv 2^{k} \% 2^{n+m}$的解<br>令$k &gt; n + m,y = (a*10^{m}+x) \% 2^{n + m} + i * 2^{n + m}$,<br>因为对于$2^{k} \% 5^{n+m}$来说,$2$是模数的一个原根,只要保证$y \% 5 != 0$就可以保证存在$k$满足所有等式<br>然后转为求$(y / 2^{n + m}) \equiv 2 ^{k} \% 5 ^ {n + m}$的$k$的值<br>然后有个公式可以优化:<br>若$a ^ {k} \equiv c \% p^{i}$<br>则存在$0 \leq j \leq p - 1$满足$a ^ {k + j * \varphi(p^{i})} \equiv c \% p^{i+1}$<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line">//created by missever</div><div class="line"></div><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">#define fi first</div><div class="line">#define se second</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line">typedef pair&lt;int, int&gt; P;</div><div class="line"></div><div class="line">const int maxn = 1e5 + 5;</div><div class="line">LL mod;</div><div class="line"></div><div class="line">LL add(LL x, LL y) &#123;</div><div class="line">    x += y;</div><div class="line">    if(x &gt;= mod) x -= mod;</div><div class="line">    return x;</div><div class="line">&#125;</div><div class="line"></div><div class="line">LL mul(LL a, LL b) &#123;</div><div class="line">    LL r = (a * b - (LL)(((long double)a * b) / mod) * mod);</div><div class="line">    return add(r - r / mod * mod, mod);</div><div class="line">&#125;</div><div class="line"></div><div class="line">LL powt(LL a,LL b) &#123;</div><div class="line">    LL r = 1;</div><div class="line">    while(b &gt;= 1) &#123;</div><div class="line">        if(b &amp; 1) r = mul(r,a);</div><div class="line">        a = mul(a,a);</div><div class="line">        b &gt;&gt;= 1;</div><div class="line">    &#125;</div><div class="line">    return r;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int f[] = &#123; -1, 0, 1, 3, 2&#125;;</div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">#ifdef CX_TEST</div><div class="line">    freopen(&quot;E:\\program--GG\\test_in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">#endif</div><div class="line">    int t, n, m, i;</div><div class="line">    LL a, b, x, k, phi;</div><div class="line">    scanf(&quot;%d&quot;, &amp;t);</div><div class="line">    while(t--) &#123;</div><div class="line">        scanf(&quot;%lld&quot;, &amp;a);</div><div class="line">        n = to_string(a).size();</div><div class="line">        for(m = 0, b = 1; 1; m++, a *= 10, b *= 10) &#123;</div><div class="line">            x = a;</div><div class="line">            mod = 1LL &lt;&lt; (n + m);</div><div class="line">            if(x % mod) x += mod - x % mod;</div><div class="line">            if(x % 5 == 0) x += mod;</div><div class="line">            if(x % mod == 0 &amp;&amp; x % 5 &amp;&amp; x - a &lt; b) &#123;</div><div class="line">                x &gt;&gt;= n + m;</div><div class="line">                k = f[x % 5];</div><div class="line">                for(i = 1,phi = 4,mod = 25; i &lt; n + m; i++,mod *= 5,phi *= 5) &#123;</div><div class="line">                    while(powt(2,k) != x % mod) k += phi;</div><div class="line">                &#125;</div><div class="line">                printf(&quot;%lld\n&quot;,n + m + k);</div><div class="line">                break;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> ACM </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CF_GoodBye2017简单题解]]></title>
      <url>/2018/01/17/CF_goodbye2017/</url>
      <content type="html"><![CDATA[<p><a href="http://codeforces.com/contest/908" target="_blank" rel="external">题目传送门</a><br><a id="more"></a></p>
<h1 id="A-New-Year-and-Counting-Cards"><a href="#A-New-Year-and-Counting-Cards" class="headerlink" title="A.New Year and Counting Cards"></a>A.New Year and Counting Cards</h1><p>签到题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">char s[maxn];</div><div class="line"></div><div class="line">int main()&#123;</div><div class="line">#ifdef CX_TEST</div><div class="line">    freopen(&quot;E:\\program--GG\\test_in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">#endif</div><div class="line">    scanf(&quot;%s&quot;,s);</div><div class="line">    int n = strlen(s);</div><div class="line">    int t = 0;</div><div class="line">    for(int i = 0;i &lt; n; i++) &#123;</div><div class="line">        if(s[i] &gt;= &apos;a&apos; &amp;&amp; s[i] &lt;= &apos;z&apos;) &#123;</div><div class="line">            if(s[i] == &apos;a&apos; || s[i] == &apos;e&apos; || s[i] == &apos;i&apos; || s[i] == &apos;o&apos; || s[i] == &apos;u&apos;) t++;</div><div class="line">        &#125; else &#123;</div><div class="line">            if(s[i] == &apos;1&apos; || s[i] == &apos;3&apos; || s[i] == &apos;5&apos; || s[i] == &apos;7&apos; || s[i] == &apos;9&apos;) t++;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    printf(&quot;%d\n&quot;,t);</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="B-New-Year-and-Buggy-Bot"><a href="#B-New-Year-and-Buggy-Bot" class="headerlink" title="B.New Year and Buggy Bot"></a>B.New Year and Buggy Bot</h1><p>签到题……<del>手残打错一个小于号</del><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">char p[55][55];</div><div class="line">char s[maxn];</div><div class="line">int n,m,f[4],d[maxn];</div><div class="line"></div><div class="line">bool check(int w) &#123;</div><div class="line">    int i,j,k;</div><div class="line">    for(i = 0;i &lt; n; i++) &#123;</div><div class="line">        for(j = 0;j &lt; m; j++) &#123;</div><div class="line">            if(p[i][j] == &apos;S&apos;) break;</div><div class="line">        &#125;</div><div class="line">        if(j &lt; m) break;</div><div class="line">    &#125;</div><div class="line">    for(k = 0;k &lt; w; k++) &#123;</div><div class="line">        if(d[k] == 0) i++;</div><div class="line">        else if(d[k] == 1) i--;</div><div class="line">        else if(d[k] == 2) j++;</div><div class="line">        else j--;</div><div class="line">        if(i &lt; 0 || i == n || j &lt; 0 || j == m) return false;</div><div class="line">        if(p[i][j] == &apos;#&apos;) return false;</div><div class="line">        if(p[i][j] == &apos;E&apos;) return true;</div><div class="line">    &#125;</div><div class="line">    return false;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main()&#123;</div><div class="line">#ifdef CX_TEST</div><div class="line">    freopen(&quot;E:\\program--GG\\test_in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">#endif</div><div class="line">    int w,i,ans = 0;</div><div class="line">    scanf(&quot;%d%d&quot;,&amp;n,&amp;m);</div><div class="line">    for(i = 0;i &lt; n; i++) scanf(&quot;%s&quot;,p[i]);</div><div class="line">    scanf(&quot;%s&quot;,s);</div><div class="line">    w = strlen(s);</div><div class="line">    for(i = 0;i &lt; 4; i++) f[i] = i;</div><div class="line">    do &#123;</div><div class="line">        for(i = 0;i &lt; w; i++) d[i] = f[s[i] - &apos;0&apos;];</div><div class="line">        if(check(w)) ans++;</div><div class="line">    &#125; while(next_permutation(f,f + 4));</div><div class="line">    printf(&quot;%d\n&quot;,ans);</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="C-New-Year-and-Curling"><a href="#C-New-Year-and-Curling" class="headerlink" title="C.New Year and Curling"></a>C.New Year and Curling</h1><p>水题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">double fy[1005];</div><div class="line">int dx[1005];</div><div class="line"></div><div class="line">int main()&#123;</div><div class="line">#ifdef CX_TEST</div><div class="line">    freopen(&quot;E:\\program--GG\\test_in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">#endif</div><div class="line">    int n,r,i,j;</div><div class="line">    double y,yy;</div><div class="line">    scanf(&quot;%d%d&quot;,&amp;n,&amp;r);</div><div class="line">    for(i = 0;i &lt; n; i++) &#123;</div><div class="line">        scanf(&quot;%d&quot;,&amp;dx[i]);</div><div class="line">        y = r;</div><div class="line">        for(j = 0;j &lt; i; j++) &#123;</div><div class="line">            if(abs(dx[i] - dx[j]) &lt;= 2 * r) &#123;</div><div class="line">                yy = sqrt(4.0 * r * r - 1.0 * (dx[i] - dx[j]) * (dx[i] - dx[j]));</div><div class="line">                y = max(y,fy[j] + yy);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        fy[i] = y;</div><div class="line">    &#125;</div><div class="line">    for(i = 0;i &lt; n; i++) printf(&quot;%.10f &quot;,fy[i]);</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="D-New-Year-and-Arbitrary-Arrangement"><a href="#D-New-Year-and-Arbitrary-Arrangement" class="headerlink" title="D.New Year and Arbitrary Arrangement"></a>D.New Year and Arbitrary Arrangement</h1><p>$f[i][j]$表示有$i$个$a$字符并且当前已经有$j$个$ab$序列的概率<br>当$i+j &gt;= k$的时候,再加一个$b$字符就肯定结束,可以直接推出加一个$b$字符产生的期望贡献<br>所以$dp$总复杂度也就$k^{2}$<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line">//created by missever</div><div class="line"></div><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">#define fi first</div><div class="line">#define se second</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line">typedef pair&lt;int,int&gt; P;</div><div class="line"></div><div class="line">const int mod = 1e9 + 7;</div><div class="line">const int maxn = 1e5 + 5;</div><div class="line"></div><div class="line">int add(int x,int y) &#123;</div><div class="line">    x += y;</div><div class="line">    if(x &gt;= mod) x -= mod;</div><div class="line">    return x;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int mul(int x,int y) &#123;</div><div class="line">    LL z = 1LL * x * y;</div><div class="line">    return z - z / mod * mod;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int powt(int a,int b) &#123;</div><div class="line">    int r = 1;</div><div class="line">    while(b) &#123;</div><div class="line">        if(b &amp; 1) r=  mul(r,a);</div><div class="line">        a = mul(a,a);</div><div class="line">        b &gt;&gt;= 1;</div><div class="line">    &#125;</div><div class="line">    return r;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int f[2005][2005];</div><div class="line"></div><div class="line">int main()&#123;</div><div class="line">#ifdef CX_TEST</div><div class="line">    freopen(&quot;E:\\program--GG\\test_in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">#endif</div><div class="line">    int i,j,k,pa,pb,p,inv,w,ans = 0;</div><div class="line">    scanf(&quot;%d%d%d&quot;,&amp;k,&amp;pa,&amp;pb);</div><div class="line">    p = pa + pb;</div><div class="line">    inv = powt(p,mod - 2);</div><div class="line">    w = add(mul(p,powt(pb,mod - 2)),mod - 1);</div><div class="line">    f[1][0] = 1;</div><div class="line">    for(i = 1;i &lt;= 2000; i++) &#123;</div><div class="line">        for(j = 0;j &lt;= 2000; j++) &#123;</div><div class="line">            if(f[i][j]) &#123;</div><div class="line">                if(i + j &gt;= k) ans = add(ans,mul(f[i][j],add(i + j,w)));</div><div class="line">                else &#123;</div><div class="line">                    f[i + 1][j] = add(f[i + 1][j],mul(f[i][j],mul(pa,inv)));</div><div class="line">                    f[i][i + j] = add(f[i][i + j],mul(f[i][j],mul(pb,inv)));</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    printf(&quot;%d\n&quot;,ans);</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="E-New-Year-and-Entity-Enumeration"><a href="#E-New-Year-and-Entity-Enumeration" class="headerlink" title="E.New Year and Entity Enumeration"></a>E.New Year and Entity Enumeration</h1><p>把状态相同的列放到一组,每组的答案就是非空集合的划分方案数,即贝尔数<br>最后乘起来就好了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line">//created by missever</div><div class="line"></div><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">#define fi first</div><div class="line">#define se second</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line">typedef pair&lt;int, int&gt; P;</div><div class="line"></div><div class="line">const int mod = 1e9 + 7;</div><div class="line">const int maxn = 1e5 + 5;</div><div class="line"></div><div class="line">int add(int x, int y) &#123;</div><div class="line">    x += y;</div><div class="line">    if(x &gt;= mod) x -= mod;</div><div class="line">    return x;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int mul(int x, int y) &#123;</div><div class="line">    LL z = 1LL * x * y;</div><div class="line">    return z - z / mod * mod;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int powt(int a, int b) &#123;</div><div class="line">    int r = 1;</div><div class="line">    while(b) &#123;</div><div class="line">        if(b &amp; 1) r = mul(r, a);</div><div class="line">        a = mul(a, a);</div><div class="line">        b &gt;&gt;= 1;</div><div class="line">    &#125;</div><div class="line">    return r;</div><div class="line">&#125;</div><div class="line"></div><div class="line">char s[1005];</div><div class="line">char f[1005][55];</div><div class="line">int g[1005];</div><div class="line">int c[1005],b[1005];</div><div class="line"></div><div class="line">int C(int x,int y) &#123;</div><div class="line">    return mul(c[x],powt(mul(c[y],c[x - y]),mod - 2));</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">#ifdef CX_TEST</div><div class="line">    freopen(&quot;E:\\program--GG\\test_in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">#endif</div><div class="line">    int m, n, i, j;</div><div class="line">    scanf(&quot;%d%d&quot;, &amp;m, &amp;n);</div><div class="line">    c[0] = 1;</div><div class="line">    for(i = 1;i &lt;= m; i++) c[i] = mul(c[i - 1],i);</div><div class="line">    b[0] = 1;</div><div class="line">    for(i = 1;i &lt;= m; i++) &#123;</div><div class="line">        for(j = 0;j &lt; i; j++) b[i] = add(b[i],mul(b[j],C(i - 1,j)));</div><div class="line">    &#125;</div><div class="line">    for(i = 0; i &lt; n; i++) &#123;</div><div class="line">        scanf(&quot; %s&quot;, s);</div><div class="line">        for(j = 0; j &lt; m; j++) f[j][i] = s[j];</div><div class="line">    &#125;</div><div class="line">    for(i = 0; i &lt; m; i++) f[i][n] = 0;</div><div class="line">    for(i = 0; i &lt; m; i++) &#123;</div><div class="line">        for(j = 0; j &lt; i; j++) &#123;</div><div class="line">            if(strcmp(f[i], f[j]) == 0) break;</div><div class="line">        &#125;</div><div class="line">        g[j]++;</div><div class="line">    &#125;</div><div class="line">    int ans = 1;</div><div class="line">    for(i = 0;i &lt; m; i++) &#123;</div><div class="line">        ans = mul(ans,b[g[i]]);</div><div class="line">    &#125;</div><div class="line">    printf(&quot;%d\n&quot;, ans);</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="F-New-Year-and-Rainbow-Roads"><a href="#F-New-Year-and-Rainbow-Roads" class="headerlink" title="F.New Year and Rainbow Roads"></a>F.New Year and Rainbow Roads</h1><p>考虑每两个$G$相互独立,它们之间要么通过$B,R$相连,要么直接相连,两种情况讨论一下就行了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">int n, x, z, lr, lg, lb, mr, mb;</div><div class="line">char c;</div><div class="line">int main() &#123;</div><div class="line">#ifdef CX_TEST</div><div class="line">    //freopen(&quot;E:\\program--GG\\test_in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">#endif</div><div class="line">    scanf(&quot;%d&quot;, &amp;n);</div><div class="line">    for (int i = 0; i &lt; n; i++) &#123;</div><div class="line">        scanf(&quot;%d %c&quot;, &amp;x, &amp;c);</div><div class="line">        if (c == &apos;R&apos; || c == &apos;G&apos;) &#123;</div><div class="line">            if (lr &gt; 0) &#123;</div><div class="line">                z += x - lr;</div><div class="line">                mr = max(mr, x - lr);</div><div class="line">            &#125;</div><div class="line">            lr = x;</div><div class="line">        &#125;</div><div class="line">        if (c == &apos;B&apos; || c == &apos;G&apos;) &#123;</div><div class="line">            if (lb &gt; 0) &#123;</div><div class="line">                z += x - lb;</div><div class="line">                mb = max(mb, x - lb);</div><div class="line">            &#125;</div><div class="line">            lb = x;</div><div class="line">        &#125;</div><div class="line">        if (c == &apos;G&apos;) &#123;</div><div class="line">            if (lg &gt; 0 &amp;&amp; mr + mb &gt; x - lg) &#123;</div><div class="line">                z += x - lg - mr - mb;</div><div class="line">            &#125;</div><div class="line">            lg = x;</div><div class="line">            mr = mb = 0;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    printf(&quot;%d\n&quot;, z);</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="G-New-Year-and-Original-Order"><a href="#G-New-Year-and-Original-Order" class="headerlink" title="G.New Year and Original Order"></a>G.New Year and Original Order</h1><p>考虑求出比$k$小的数字的个数有$j$个的数字的个数为$f[j][k]$<br>把数字$k$的贡献拆成$k$个$1$<br>那么$f[j][k]$对答案的贡献就是$f[j][k] * g[n - j],g[i]$是$i$个$1$</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line">//created by missever</div><div class="line"></div><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">#define fi first</div><div class="line">#define se second</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line">typedef pair&lt;int, int&gt; P;</div><div class="line"></div><div class="line">const int mod = 1e9 + 7;</div><div class="line">const int maxn = 705;</div><div class="line"></div><div class="line">int add(int x, int y) &#123;</div><div class="line">    x += y;</div><div class="line">    if(x &gt;= mod) x -= mod;</div><div class="line">    return x;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int mul(int x, int y) &#123;</div><div class="line">    LL z = 1LL * x * y;</div><div class="line">    return z - z / mod * mod;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void update(int &amp;a, int b) &#123;</div><div class="line">    a += b;</div><div class="line">    if(a &gt;= mod) a -= mod;</div><div class="line">&#125;</div><div class="line"></div><div class="line">char s[maxn];</div><div class="line">int a[maxn],p[maxn],g[maxn];</div><div class="line">int f[maxn][maxn][10][2];</div><div class="line"></div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">#ifdef CX_TEST</div><div class="line">    freopen(&quot;E:\\program--GG\\test_in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">#endif</div><div class="line">    int n, i, j, k, l, ans = 0;</div><div class="line">    scanf(&quot; %s&quot;, s);</div><div class="line">    n = strlen(s);</div><div class="line">    for(i = p[0] = 1; i &lt; maxn; i++) p[i] = mul(p[i - 1], 10);</div><div class="line">    for(i = 1; i &lt; maxn; i++) g[i] = add(g[i - 1], p[i - 1]);</div><div class="line">    for(i = 0; i &lt; n; i++) a[i] = s[i] - &apos;0&apos;;</div><div class="line">    for(i = 1; i &lt; 10; i++) f[0][0][i][0] = 1;</div><div class="line">    for(i = 0; i &lt; n; i++) &#123;</div><div class="line">        for(j = 0; j &lt; n; j++) &#123;</div><div class="line">            for(k = 1; k &lt; 10; k++) &#123;</div><div class="line">                if(f[i][j][k][0]) &#123;</div><div class="line">                    for(l = 0; l &lt; a[i]; l++) update(f[i + 1][j + (l &lt; k)][k][1], f[i][j][k][0]);</div><div class="line">                    update(f[i + 1][j + (a[i] &lt; k)][k][0], f[i][j][k][0]);</div><div class="line">                &#125;</div><div class="line">                if(f[i][j][k][1]) &#123;</div><div class="line">                    for(l = 0; l &lt; 10; l++) update(f[i + 1][j + (l &lt; k)][k][1], f[i][j][k][1]);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    for(i = 0;i &lt; n; i++) &#123;</div><div class="line">        for(k = 1;k &lt; 10; k++) ans = add(ans,mul(g[n - i],add(f[n][i][k][0],f[n][i][k][1])));</div><div class="line">    &#125;</div><div class="line">    printf(&quot;%d\n&quot;, ans);</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="H-New-Year-and-Boolean-Bridges"><a href="#H-New-Year-and-Boolean-Bridges" class="headerlink" title="H.New Year and Boolean Bridges"></a>H.New Year and Boolean Bridges</h1><p>先连$A$,并查集维护,对于一个联通块,我们肯定要把它连成一个环<br>如果一个联通块中存在两点的关系为$X$,肯定无解<br>否则考虑把这些联通块合并一下,两个联通块之间的所有点对的关系都是$O$的话可以合并<br>转化成$n/2$个点的图求最小的完全子图划分<br>可以$fwt$维护<br>但是由于我们只需要关注一个值的情况<br>所以可以省去逆变换<br>不如……直接上容斥吧……<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div></pre></td><td class="code"><pre><div class="line">//created by missever</div><div class="line"></div><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">#define fi first</div><div class="line">#define se second</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line">typedef pair&lt;int, int&gt; P;</div><div class="line"></div><div class="line">const int mod = 1e9 + 7;</div><div class="line">const int maxn = 1 &lt;&lt; 23;</div><div class="line"></div><div class="line">int add(int x, int y) &#123;</div><div class="line">    x += y;</div><div class="line">    if(x &gt;= mod) x -= mod;</div><div class="line">    return x;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int mul(int x, int y) &#123;</div><div class="line">    LL z = 1LL * x * y;</div><div class="line">    return z - z / mod * mod;</div><div class="line">&#125;</div><div class="line"></div><div class="line">char s[55][55];</div><div class="line">int p[55], r[55], d[55], h[55], ans = 0;</div><div class="line">int f[maxn],g[maxn],bit[maxn];</div><div class="line"></div><div class="line">int ff(int x) &#123;</div><div class="line">    if(p[x] != x) p[x] = ff(p[x]);</div><div class="line">    return p[x];</div><div class="line">&#125;</div><div class="line"></div><div class="line">void funion(int x, int y) &#123;</div><div class="line">    x = ff(x);</div><div class="line">    y = ff(y);</div><div class="line">    if(x != y) p[y] = x;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">#ifdef CX_TEST</div><div class="line">    freopen(&quot;E:\\program--GG\\test_in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">#endif</div><div class="line">    int n, m, i, j;</div><div class="line">    scanf(&quot;%d&quot;, &amp;n);</div><div class="line">    for(i = 0; i &lt; n; i++) scanf(&quot; %s&quot;, s[i]);</div><div class="line">    for(i = 0; i &lt; n; i++) p[i] = i;</div><div class="line">    for(i = 0; i &lt; n; i++) &#123;</div><div class="line">        for(j = 0; j &lt; n; j++) &#123;</div><div class="line">            if(i == j) continue;</div><div class="line">            if(s[i][j] == &apos;A&apos;) funion(i, j);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    for(i = 0; i &lt; n; i++) d[ff(i)]++;</div><div class="line">    memset(h, -1, sizeof(h));</div><div class="line">    for(i = m = 0; i &lt; n; i++) &#123;</div><div class="line">        if(d[i] &gt; 1) h[i] = m++;</div><div class="line">    &#125;</div><div class="line">    for(i = 0; i &lt; n; i++) &#123;</div><div class="line">        for(j = 0; j &lt; n; j++) &#123;</div><div class="line">            if(i == j) continue;</div><div class="line">            if(s[i][j] == &apos;X&apos;) &#123;</div><div class="line">                if(ff(i) == ff(j)) &#123;</div><div class="line">                    return puts(&quot;-1&quot;), 0;</div><div class="line">                &#125;</div><div class="line">                if(d[ff(i)] &gt; 1 &amp;&amp; d[ff(j)] &gt; 1) &#123;</div><div class="line">                    r[h[ff(i)]] |= 1 &lt;&lt; h[ff(j)];</div><div class="line">                    r[h[ff(j)]] |= 1 &lt;&lt; h[ff(i)];</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    if(!m) &#123;</div><div class="line">        printf(&quot;%d\n&quot;,n - 1);</div><div class="line">        return 0;</div><div class="line">    &#125;</div><div class="line">    for(i = 0;i &lt; m; i++) r[i] ^= (1 &lt;&lt; m) - 1;</div><div class="line">    for(i = 0; i &lt; (1 &lt;&lt; m); i++) &#123;</div><div class="line">        if((i &amp; (-i)) == i) f[i] = 1;</div><div class="line">        else &#123;</div><div class="line">            j = i ^ (1 &lt;&lt; (__builtin_ffs(i) - 1));</div><div class="line">            if(f[j] &amp;&amp; (r[i] &amp; j) == j) f[i] = 1;</div><div class="line">        &#125;</div><div class="line">        g[i] = 1;</div><div class="line">        bit[i] = ((m - __builtin_popcount(i)) &amp; 1) ? mod - 1 : 1;</div><div class="line">    &#125;</div><div class="line">    for (i = 0; i &lt; m; i++) &#123;</div><div class="line">        for (j = 0; j &lt; (1 &lt;&lt; m); j++) &#123;</div><div class="line">            if ((j &gt;&gt; i) &amp; 1) f[j] += f[j ^ (1 &lt;&lt; i)];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    for(i = 0;i &lt; m; i++) &#123;</div><div class="line">        for(j = 0;j &lt; (1 &lt;&lt; m); j++) g[j] = mul(g[j],f[j]);</div><div class="line">        int x = 0;</div><div class="line">        for(j = 0;j &lt; (1 &lt;&lt; m); j++) x = add(x,mul(bit[j],g[j]));</div><div class="line">        if(x) break;</div><div class="line">    &#125;</div><div class="line">    printf(&quot;%d\n&quot;, n + i);</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> ACM </category>
            
        </categories>
        
        
        <tags>
            
            <tag> DP </tag>
            
            <tag> 数论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CF_Educational_Round_34_G]]></title>
      <url>/2017/12/13/CF_edu34_G/</url>
      <content type="html"><![CDATA[<h1 id="Yet-Another-Maxflow-Problem"><a href="#Yet-Another-Maxflow-Problem" class="headerlink" title="Yet Another Maxflow Problem"></a>Yet Another Maxflow Problem</h1><p><a href="http://codeforces.com/contest/903/problem/G" target="_blank" rel="external">题目传送门</a><br><a id="more"></a><br>对于点$A_{i}$,它的流量有两种,一种是通过横边流向$B$,一种是流向$A_{i + 1}$.<br>如果以$A_{i}$为分界点,那么答案就是$A$中$\leq i$的点通过横边流出的流量加上流向$A_{i + 1}$的流量.<br>对于每个$A_{i}$,我们假设它流向$A_{i + 1}$是满流,然后通过线段树维护出$A$中$\leq i$的点通过横边实际流出的最大流量,令这两部分和为$c_{i}$.<br>因为$A_{i}$实际流向$A_{i + 1}$的流量是$A_{i}-&gt;A_{i+1}$的边权和$A$中$&gt; i$的点通过横边流出的流量中的最小值,所以答案就是$min(c_{i})$<br>然后每次修改边权的时候只需要用线段树维护单点修改即可.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div></pre></td><td class="code"><pre><div class="line">//created by missever</div><div class="line"></div><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">#define fi first</div><div class="line">#define se second</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line">typedef pair&lt;int, int&gt; P;</div><div class="line"></div><div class="line">const int mod = 1e9 + 7;</div><div class="line">const int maxn = 2e5 + 5;</div><div class="line"></div><div class="line">int ca[maxn];</div><div class="line">LL f[maxn * 4], ly[maxn * 4], cb[maxn], cc[maxn];</div><div class="line">struct edge &#123;</div><div class="line">    int u, v, w;</div><div class="line">&#125; g[maxn];</div><div class="line">bool cmp(const edge &amp;a, const edge &amp;b) &#123;</div><div class="line">    return a.u &lt; b.u;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void push_down(int t) &#123;</div><div class="line">    if(ly[t]) &#123;</div><div class="line">        f[t &lt;&lt; 1] += ly[t];</div><div class="line">        ly[t &lt;&lt; 1] += ly[t];</div><div class="line">        f[t &lt;&lt; 1 | 1] += ly[t];</div><div class="line">        ly[t &lt;&lt; 1 | 1] += ly[t];</div><div class="line">        ly[t] = 0;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void build(int t, int l, int r, LL val[]) &#123;</div><div class="line">    ly[t] = 0;</div><div class="line">    if(l == r) &#123;</div><div class="line">        f[t] = val[l];</div><div class="line">        return;</div><div class="line">    &#125;</div><div class="line">    int mid = (l + r) &gt;&gt; 1;</div><div class="line">    build(t &lt;&lt; 1, l, mid, val);</div><div class="line">    build(t &lt;&lt; 1 | 1, mid + 1, r, val);</div><div class="line">    f[t] = min(f[t &lt;&lt; 1], f[t &lt;&lt; 1 | 1]);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void update(int t, int l, int r, int ll, int rr, LL v) &#123;</div><div class="line">    if(ll &lt;= l &amp;&amp; r &lt;= rr) &#123;</div><div class="line">        f[t] += v;</div><div class="line">        ly[t] += v;</div><div class="line">        return;</div><div class="line">    &#125;</div><div class="line">    int mid = (l + r) &gt;&gt; 1;</div><div class="line">    push_down(t);</div><div class="line">    if(ll &lt;= mid) update(t &lt;&lt; 1, l, mid, ll, rr, v);</div><div class="line">    if(rr &gt; mid) update(t &lt;&lt; 1 | 1, mid + 1, r, ll, rr, v);</div><div class="line">    f[t] = min(f[t &lt;&lt; 1], f[t &lt;&lt; 1 | 1]);</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">#ifdef CX_TEST</div><div class="line">    freopen(&quot;E:\\program--GG\\test_in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">#endif</div><div class="line">    int n, m, q, i, j;</div><div class="line">    scanf(&quot;%d%d%d&quot;, &amp;n, &amp;m, &amp;q);</div><div class="line">    for(i = 1; i &lt; n; i++) scanf(&quot;%d%lld&quot;, &amp;ca[i], &amp;cb[i + 1]);</div><div class="line">    build(1, 1, n, cb);</div><div class="line">    for(i = 0; i &lt; m; i++) scanf(&quot;%d%d%d&quot;, &amp;g[i].u, &amp;g[i].v, &amp;g[i].w);</div><div class="line">    sort(g, g + m, cmp);</div><div class="line">    for(i = 1, j = 0; i &lt;= n; i++) &#123;</div><div class="line">        while(j &lt; m &amp;&amp; g[j].u == i) &#123;</div><div class="line">            update(1, 1, n, 1, g[j].v, g[j].w);</div><div class="line">            j++;</div><div class="line">        &#125;</div><div class="line">        cc[i] = f[1] + ca[i];</div><div class="line">    &#125;</div><div class="line">    build(1, 1, n, cc);</div><div class="line">    printf(&quot;%lld\n&quot;, f[1]);</div><div class="line">    while(q--) &#123;</div><div class="line">        scanf(&quot;%d%d&quot;, &amp;i, &amp;j);</div><div class="line">        update(1, 1, n, i, i, j - ca[i]);</div><div class="line">        ca[i] = j;</div><div class="line">        printf(&quot;%lld\n&quot;, f[1]);</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> ACM </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[2017CCPC_final补]]></title>
      <url>/2017/12/12/2017ccpc-final/</url>
      <content type="html"><![CDATA[<p>划水划水划水……然后就挂了……<br><a id="more"></a></p>
<h1 id="D-Mr-Panda-and-Circles"><a href="#D-Mr-Panda-and-Circles" class="headerlink" title="D.Mr. Panda and Circles"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6246" target="_blank" rel="external">D.Mr. Panda and Circles</a></h1><p>分三种情况讨论:<br>两端都没有圆在线段外<br>一端有圆在线段外<br>两端都有圆在线段外<br>……然后就是各种前缀和优化组合数求方案了<br>第三种情况要用到任意模数的fft,然后还要写个前缀和减去自身卷积自身的情况……<br>因为组合数太大了,所以还需要考虑单独维护模数的幂……<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div></pre></td><td class="code"><pre><div class="line">//created by missever</div><div class="line"></div><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">#define fi first</div><div class="line">#define se second</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line">typedef pair&lt;int, int&gt; P;</div><div class="line"></div><div class="line">const int mod = 1e9 + 7;</div><div class="line">const int maxn = 1e5 + 5;</div><div class="line"></div><div class="line">int add(int x, int y) &#123;</div><div class="line">    x += y;</div><div class="line">    if(x &gt;= mod) x -= mod;</div><div class="line">    return x;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int fmod(LL x) &#123;</div><div class="line">    return x - x / mod * mod;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int mul(int x, int y) &#123;</div><div class="line">    return fmod(1LL * x * y);</div><div class="line">&#125;</div><div class="line"></div><div class="line">int powt(int a, int b) &#123;</div><div class="line">    int r = 1;</div><div class="line">    while(b) &#123;</div><div class="line">        if(b &amp; 1) r = mul(r, a);</div><div class="line">        a = mul(a, a);</div><div class="line">        b &gt;&gt;= 1;</div><div class="line">    &#125;</div><div class="line">    return r;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int sqr(int x) &#123;</div><div class="line">    return fmod(1LL * x * x);</div><div class="line">&#125;</div><div class="line"></div><div class="line">const int LN = 18;</div><div class="line">const int N = 1 &lt;&lt; LN;</div><div class="line">const double pi = acos(-1.0);</div><div class="line">int fa[N], fb[N];</div><div class="line"></div><div class="line">struct Complex &#123;</div><div class="line">    double r, i;</div><div class="line">    Complex(double r = 0.0, double i = 0.0): r(r), i(i) &#123;&#125;;</div><div class="line">    Complex operator + (const Complex &amp;rhs) &#123;</div><div class="line">        return Complex(r + rhs.r, i + rhs.i);</div><div class="line">    &#125;</div><div class="line">    Complex operator - (const Complex &amp;rhs) &#123;</div><div class="line">        return Complex(r - rhs.r, i - rhs.i);</div><div class="line">    &#125;</div><div class="line">    Complex operator * (const Complex &amp;rhs) &#123;</div><div class="line">        return Complex(r * rhs.r - i * rhs.i, i * rhs.r + r * rhs.i);</div><div class="line">    &#125;</div><div class="line">    Complex conj() &#123;</div><div class="line">        return Complex(r, -i);</div><div class="line">    &#125;</div><div class="line">&#125; wn[N];</div><div class="line">int bitrev[N];</div><div class="line"></div><div class="line">void fft_prepare() &#123;</div><div class="line">    for(int i = 0; i &lt; N; i++) bitrev[i] = bitrev[i &gt;&gt; 1] &gt;&gt; 1 | ((i &amp; 1) &lt;&lt; (LN - 1));</div><div class="line">    for(int i = 0; i &lt; N; i++) wn[i] = Complex(cos(2 * pi * i / N), sin(2 * pi * i / N));</div><div class="line">&#125;</div><div class="line"></div><div class="line">void FFT(Complex a[], int l, int op) &#123;</div><div class="line">    int d = 0;</div><div class="line">    while((1 &lt;&lt; d) * l != N) d++;</div><div class="line">    for(int i = 0; i &lt; l; i++) &#123;</div><div class="line">        if(i &lt; (bitrev[i] &gt;&gt; d)) swap(a[i], a[(bitrev[i] &gt;&gt; d)]);</div><div class="line">    &#125;</div><div class="line">    for (int i = 2; i &lt;= l; i &lt;&lt;= 1) &#123;</div><div class="line">        int lyc = N / i;</div><div class="line">        for (int j = 0; j &lt; l; j += i) &#123;</div><div class="line">            Complex *l = a + j, *r = a + j + (i &gt;&gt; 1), *p = wn;</div><div class="line">            for(int k = 0; k &lt; (i &gt;&gt; 1); k++) &#123;</div><div class="line">                Complex tmp = *r * *p;</div><div class="line">                *r = *l - tmp, *l = *l + tmp;</div><div class="line">                ++l, ++r, p += lyc;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    if(op == -1) &#123;</div><div class="line">        for(int i = 0; i &lt; l; i++) &#123;</div><div class="line">            a[i].r /= l;</div><div class="line">            a[i].i /= l;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">Complex va[N], vb[N], da[N], db[N], dd[N];</div><div class="line">void Conv(int fa[], int fc[], int l) &#123;</div><div class="line">    int i;</div><div class="line">    for(i = 0; i &lt; l; i++) va[i] = Complex(fa[i] &amp; 32767, fa[i] &gt;&gt; 15);</div><div class="line">    FFT(va, l, 1);</div><div class="line">    for(i = 0; i &lt; l; i++) &#123;</div><div class="line">        int j = (l - i) &amp; (l - 1);</div><div class="line">        Complex qa, qb, qc, qd;</div><div class="line">        qa = (va[i] + va[j].conj()) * Complex(0.5, 0.0);</div><div class="line">        qb = (va[i] - va[j].conj()) * Complex(0.0, -0.5);</div><div class="line">        da[j] = qa * qa;</div><div class="line">        db[j] = qa * qb;</div><div class="line">        dd[j] = qb * qb;</div><div class="line">    &#125;</div><div class="line">    for(i = 0; i &lt; l; i++) va[i] = da[i] + db[i] * Complex(0.0, 1.0);</div><div class="line">    for(i = 0; i &lt; l; i++) vb[i] = db[i] + dd[i] * Complex(0.0, 1.0);</div><div class="line">    FFT(va, l, -1);</div><div class="line">    FFT(vb, l, -1);</div><div class="line">    for(i = 0; i &lt; l; i++) &#123;</div><div class="line">        int wa = fmod(va[i].r + 0.5);</div><div class="line">        int wb = fmod(va[i].i + 0.5);</div><div class="line">        int wc = fmod(vb[i].r + 0.5);</div><div class="line">        int wd = fmod(vb[i].i + 0.5);</div><div class="line">        fc[i] = add(wa, add(fmod(((LL)add(wb, wc)) &lt;&lt; 15), fmod(((LL)wd) &lt;&lt; 30)));</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">struct node &#123;</div><div class="line">    int res, cnt;</div><div class="line">    void init(LL a, LL b) &#123;</div><div class="line">        res = 1;</div><div class="line">        cnt = 0;</div><div class="line">        while(a &lt;= b) &#123;</div><div class="line">            int c = fmod(a);</div><div class="line">            if(c == 0) cnt++;</div><div class="line">            else res = mul(res, c);</div><div class="line">            a++;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    int val() &#123;</div><div class="line">        return cnt ? 0 : res;</div><div class="line">    &#125;</div><div class="line">    void add(LL x) &#123;</div><div class="line">        x = fmod(x);</div><div class="line">        if(x == 0) cnt++;</div><div class="line">        else res = mul(res, x);</div><div class="line">    &#125;</div><div class="line">    void del(LL x) &#123;</div><div class="line">        x = fmod(x);</div><div class="line">        if(x == 0) cnt--;</div><div class="line">        else res = mul(res, powt(x, mod - 2));</div><div class="line">    &#125;</div><div class="line">&#125; fac;</div><div class="line"></div><div class="line">int a[maxn], r[maxn];</div><div class="line"></div><div class="line">int solve() &#123;</div><div class="line">    int n, i, x, y, l, rmax = 0, ans = 0;</div><div class="line">    P u;</div><div class="line">    LL m, d, s = 0;</div><div class="line">    scanf(&quot;%d%lld&quot;, &amp;n, &amp;m);</div><div class="line">    for(i = 0; i &lt; n; i++) &#123;</div><div class="line">        scanf(&quot;%d&quot;, &amp;a[i]);</div><div class="line">        s += a[i];</div><div class="line">        rmax = max(rmax, a[i]);</div><div class="line">    &#125;</div><div class="line">    s *= 2;</div><div class="line">    d = m - 1 - s;</div><div class="line">    // step1</div><div class="line">    if(d &gt; 0) &#123;</div><div class="line">        fac.init(d + 1, d + n);</div><div class="line">        ans = add(ans, mul(sqr(fmod(d)), fac.val()));</div><div class="line">    &#125;</div><div class="line">    // step2</div><div class="line">    memset(r, 0, sizeof(r));</div><div class="line">    for(i = 0; i &lt; n; i++) r[a[i]]++;</div><div class="line">    for(i = 100000; i &gt; 0; i--) r[i] += r[i + 1];</div><div class="line">    i = min(max(0LL, -d), 200000LL);</div><div class="line">    fac.init(d + i + 1, d + i + n - 1);</div><div class="line">    for(i = i + 1, y = 0; i &lt;= 100000; i++) &#123;</div><div class="line">        fac.add(d + i + n - 1);</div><div class="line">        fac.del(d + i);</div><div class="line">        if(r[i]) y = add(y, mul(r[i], mul(fac.val(), sqr(fmod(d + i)))));</div><div class="line">    &#125;</div><div class="line">    ans = add(ans, mul(y, 2));</div><div class="line">    // step3</div><div class="line">    if(n == 1) return ans;</div><div class="line">    for(l = 1; l &lt;= (rmax &lt;&lt; 1); l &lt;&lt;= 1);</div><div class="line">    memcpy(fa, r, sizeof(r));</div><div class="line">    if(l &gt; maxn) fill(fa + maxn,fa + l,0);</div><div class="line">    Conv(fa, fb, l);</div><div class="line">    memset(fa, 0, sizeof(fa));</div><div class="line">    for(i = 0; i &lt; n; i++) &#123;</div><div class="line">        fa[2]++;</div><div class="line">        fa[a[i] + 2] -= 2;</div><div class="line">        fa[(a[i] &lt;&lt; 1) + 2]++;</div><div class="line">    &#125;</div><div class="line">    for(x = y = i = 0; i &lt; l; i++) &#123;</div><div class="line">        x = add(x, mod + fa[i]);</div><div class="line">        y = add(x, y);</div><div class="line">        fb[i] = add(fb[i], mod - y);</div><div class="line">    &#125;</div><div class="line">    i = min(max(0LL, -d), 500000LL);</div><div class="line">    fac.init(d + i + 1, d + i + n - 2);</div><div class="line">    for(i = i + 1; i &lt; l; i++) &#123;</div><div class="line">        fac.add(d + i + n - 2);</div><div class="line">        fac.del(d + i);</div><div class="line">        if(fb[i]) ans = add(ans, mul(fb[i], mul(fac.val(), sqr(fmod(d + i)))));</div><div class="line">    &#125;</div><div class="line">    return ans;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">#ifdef CX_TEST</div><div class="line">    freopen(&quot;E:\\program--GG\\test_in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">#endif</div><div class="line">    int t, i;</div><div class="line">    fft_prepare();</div><div class="line">    scanf(&quot;%d&quot;, &amp;t);</div><div class="line">    for(i = 1; i &lt;= t; i++) printf(&quot;Case #%d: %d\n&quot;, i, solve());</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="F-Fair-Lottery"><a href="#F-Fair-Lottery" class="headerlink" title="F.Fair Lottery"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6248" target="_blank" rel="external">F.Fair Lottery</a></h1><p>把等式转化成不等式,直接线性规划莽……<br>不过这个单纯形的板子过不了<a href="http://uoj.ac/problem/179" target="_blank" rel="external">uoj179</a>的$hack$数据…………<del>似乎没有太大影响?</del><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div></pre></td><td class="code"><pre><div class="line">//created by missever</div><div class="line"></div><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">#define fi first</div><div class="line">#define se second</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line">typedef pair&lt;int, int&gt; P;</div><div class="line"></div><div class="line">const int maxn = 1050;</div><div class="line">const double eps = 1e-8;</div><div class="line">struct Simplex &#123;</div><div class="line">    int n, m;</div><div class="line">    int idx[maxn], idy[maxn];</div><div class="line">    double a[maxn][maxn], ans[maxn];</div><div class="line">    void init(int _n, int _m) &#123;</div><div class="line">        n = _n;</div><div class="line">        m =  _m;</div><div class="line">        for(int i = 0; i &lt;= n; i++) idx[i] = i;</div><div class="line">        for(int i = 1; i &lt;= m; i++) idy[i] = i + n;</div><div class="line">    &#125;</div><div class="line">    void pivot(int u, int v) &#123;</div><div class="line">        swap(idx[v], idy[u]);</div><div class="line">        double t = a[u][v];</div><div class="line">        a[u][v] = 1.0;</div><div class="line">        for(int i = 0; i &lt;= n; i++) a[u][i] /= t;</div><div class="line">        for(int i = 0; i &lt;= m; i++) &#123;</div><div class="line">            if(i == u || fabs(a[i][v]) &lt; eps) continue;</div><div class="line">            t = a[i][v];</div><div class="line">            a[i][v] = 0;</div><div class="line">            for(int j = 0; j &lt;= n; j++) a[i][j] -= a[u][j] * t;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    bool init_check() &#123;</div><div class="line">        while(true) &#123;</div><div class="line">            int u = 0, v = 0;</div><div class="line">            double mn = -eps;</div><div class="line">            for(int i = 1; i &lt;= m; i++) &#123;</div><div class="line">                if(a[i][0] &lt; mn &amp;&amp; (!u || (rand() &amp; 1))) &#123;</div><div class="line">                    mn = a[i][0];</div><div class="line">                    u = i;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            if(!u) return true;</div><div class="line">            mn = -eps;</div><div class="line">            for(int i = 1; i &lt;= n; i++) &#123;</div><div class="line">                if(a[u][i] &lt; mn &amp;&amp; (!v || (rand() &amp; 1))) &#123;</div><div class="line">                    mn = a[u][i];</div><div class="line">                    v = i;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            if(!v) return false;</div><div class="line">            pivot(u, v);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    bool do_simplex() &#123;</div><div class="line">        while(true) &#123;</div><div class="line">            int u = 0, v = 0;</div><div class="line">            double mn = 1e15, mx = eps;</div><div class="line">            for(int i = 1; i &lt;= n; i++) &#123;</div><div class="line">                if(a[0][i] &gt; mx &amp;&amp; (!v || (rand() &amp; 1))) &#123;</div><div class="line">                    mx = a[0][i];</div><div class="line">                    v = i;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            if(!v) return true;</div><div class="line">            for(int i = 1; i &lt;= m; i++) &#123;</div><div class="line">                if(a[i][v] &gt; eps &amp;&amp; a[i][0] / a[i][v] &lt; mn) &#123;</div><div class="line">                    mn = a[i][0] / a[i][v];</div><div class="line">                    u = i;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            if(!u) return false;</div><div class="line">            pivot(u, v);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    void get_ans() &#123;</div><div class="line">        memset(ans, 0, sizeof(ans));</div><div class="line">        ans[0] = -a[0][0];</div><div class="line">        for(int i = 1; i &lt;= m; i++) &#123;</div><div class="line">            if(idy[i] &lt;= n) ans[idy[i]] = a[i][0];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125; sf;</div><div class="line"></div><div class="line"></div><div class="line">int d[15], f[12][1050];</div><div class="line">double solve() &#123;</div><div class="line">    int n, m, i, j, x, tot = 0;</div><div class="line">    scanf(&quot;%d%d&quot;, &amp;n, &amp;m);</div><div class="line">    for(i = 0; i &lt; n; i++) scanf(&quot;%d&quot;, &amp;d[i]);</div><div class="line">    memset(f, 0, sizeof(f));</div><div class="line">    for(i = 0; i &lt; (1 &lt;&lt; n); i++) &#123;</div><div class="line">        for(j = x = 0; j &lt; n; j++) &#123;</div><div class="line">            if((i &gt;&gt; j) &amp; 1) x += d[j];</div><div class="line">        &#125;</div><div class="line">        if(x &lt;= m) &#123;</div><div class="line">            tot++;</div><div class="line">            for(j = 0; j &lt; n; j++) &#123;</div><div class="line">                if((i &gt;&gt; j) &amp; 1) f[j][tot] = 1;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    sf.init(tot, n + 2);</div><div class="line">    for(i = 0;i &lt;= tot; i++) sf.a[0][i] = f[0][i];</div><div class="line">    for(i = 1;i &lt; n; i++) &#123;</div><div class="line">        for(j = 0;j &lt;= tot; j++) sf.a[i][j] = f[i][j] - f[i - 1][j];</div><div class="line">    &#125;</div><div class="line">    for(j = 0;j &lt;= tot; j++) sf.a[n][j] = f[0][j] - f[n - 1][j];</div><div class="line">    for(j = 1;j &lt;= tot; j++) &#123;</div><div class="line">        sf.a[n + 1][j] = 1;</div><div class="line">        sf.a[n + 2][j] = -1;</div><div class="line">    &#125;</div><div class="line">    sf.a[n + 1][0] = 1;</div><div class="line">    sf.a[n + 2][0] = -1;</div><div class="line">    sf.init_check();</div><div class="line">    sf.do_simplex();</div><div class="line">    return -sf.a[0][0];</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">#ifdef CX_TEST</div><div class="line">    freopen(&quot;E:\\program--GG\\test_in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">#endif</div><div class="line">    srand(time(NULL));</div><div class="line">    int t, i;</div><div class="line">    scanf(&quot;%d&quot;, &amp;t);</div><div class="line">    for(i = 1; i &lt;= t; i++) printf(&quot;Case #%d: %.10f\n&quot;, i, solve());</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="H-Equidistance"><a href="#H-Equidistance" class="headerlink" title="H.Equidistance"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6250" target="_blank" rel="external">H.Equidistance</a></h1><p>先求出$m-1$个线性无关的基向量,然后随机一个向量尝试把这组基向量扩展到满秩即可……</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div></pre></td><td class="code"><pre><div class="line">//created by missever</div><div class="line"></div><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">#define fi first</div><div class="line">#define se second</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line">typedef pair&lt;int, int&gt; P;</div><div class="line"></div><div class="line">const double eps = 1e-8;</div><div class="line">inline sgn(double x) &#123;</div><div class="line">    if(x &lt; -eps) return -1;</div><div class="line">    else if(x &gt; eps) return 1;</div><div class="line">    else return 0;</div><div class="line">&#125;</div><div class="line">int n, m;</div><div class="line">struct Point &#123;</div><div class="line">    vector&lt;double&gt; a;</div><div class="line">    Point operator +(const Point &amp;b) const &#123;</div><div class="line">        Point c;</div><div class="line">        c.a.resize(n);</div><div class="line">        for(int i = 0; i &lt; n; i++) c.a[i] = a[i] + b.a[i];</div><div class="line">        return c;</div><div class="line">    &#125;</div><div class="line">    Point operator -(const Point &amp;b) const &#123;</div><div class="line">        Point c;</div><div class="line">        c.a.resize(n);</div><div class="line">        for(int i = 0; i &lt; n; i++) c.a[i] = a[i] - b.a[i];</div><div class="line">        return c;</div><div class="line">    &#125;</div><div class="line">    double operator *(const Point &amp;b) const &#123;</div><div class="line">        double res = 0;</div><div class="line">        for(int i = 0; i &lt; n; i++) res += a[i] * b.a[i];</div><div class="line">        return res;</div><div class="line">    &#125;</div><div class="line">    Point operator *(const double &amp;b) const &#123;</div><div class="line">        Point c = *this;</div><div class="line">        for(int i = 0; i &lt; n; i++) c.a[i] *= b;</div><div class="line">        return c;</div><div class="line">    &#125;</div><div class="line">&#125; p[105], f[105], s, us;</div><div class="line"></div><div class="line">uniform_real_distribution&lt;double&gt; df(-100, 100);</div><div class="line">default_random_engine gen(time(NULL));</div><div class="line"></div><div class="line">Point work() &#123;</div><div class="line">    Point x;</div><div class="line">    x.a.resize(n);</div><div class="line">    while(true) &#123;</div><div class="line">        for(int i = 0; i &lt; n; i++) x.a[i] = df(gen);</div><div class="line">        for(int i = 1; i &lt; m; i++) &#123;</div><div class="line">            double u = x * f[i];</div><div class="line">            x = x - f[i] * u;</div><div class="line">        &#125;</div><div class="line">        if((x * x) &gt; eps) return x;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void solve() &#123;</div><div class="line">    int i, j;</div><div class="line">    double u;</div><div class="line">    scanf(&quot;%d%d&quot;, &amp;n, &amp;m);</div><div class="line">    printf(&quot;%d\n&quot;, n + 1 - m);</div><div class="line">    s.a.clear();</div><div class="line">    s.a.resize(n,0);</div><div class="line">    for(i = 0; i &lt; m; i++) &#123;</div><div class="line">        p[i].a.resize(n);</div><div class="line">        for(j = 0; j &lt; n; j++) scanf(&quot;%lf&quot;, &amp;p[i].a[j]);</div><div class="line">        s = s + p[i];</div><div class="line">    &#125;</div><div class="line">    us = s * (1.0 / m);</div><div class="line">    for(i = 1; i &lt; m; i++) &#123;</div><div class="line">        f[i] = p[i] - us;</div><div class="line">        for(j = 1; j &lt; i; j++) &#123;</div><div class="line">            u = f[i] * f[j];</div><div class="line">            f[i] = f[i] - f[j] * u;</div><div class="line">        &#125;</div><div class="line">        u = sqrt(f[i] * f[i]);</div><div class="line">        f[i] = f[i] * (1.0 / u);</div><div class="line">    &#125;</div><div class="line">    while(m &lt; n + 1) &#123;</div><div class="line">        p[m] = work();</div><div class="line">        u = sqrt(p[m] * p[m]);</div><div class="line">        double v = sqrt(1.0 - (p[0] - us) * (p[0] - us));</div><div class="line">        p[m] = p[m] * (v / u) + us;</div><div class="line">        for(i = 0; i &lt; n; i++) printf(&quot;%.10f%c&quot;, p[m].a[i], &quot; \n&quot;[i + 1 == n]);</div><div class="line">        f[m] = p[m] - us;</div><div class="line">        u = sqrt(f[m] * f[m]);</div><div class="line">        f[m] = f[m] * (1.0 / u);</div><div class="line">        s = s + p[m];</div><div class="line">        us = s * (1.0 / (++m));</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">#ifdef CX_TEST</div><div class="line">    freopen(&quot;E:\\program--GG\\test_in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">#endif</div><div class="line">    int i, t;</div><div class="line">    scanf(&quot;%d&quot;, &amp;t);</div><div class="line">    for(i = 1; i &lt;= t; i++) &#123;</div><div class="line">        printf(&quot;Case #%d: &quot;, i);</div><div class="line">        solve();</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> ACM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[CF_#449(Div. 1)简单题解]]></title>
      <url>/2017/12/08/CF-449/</url>
      <content type="html"><![CDATA[<p><a href="http://codeforces.com/contest/896" target="_blank" rel="external">题目传送门</a><br><a id="more"></a></p>
<h1 id="A-Nephren-gives-a-riddle"><a href="#A-Nephren-gives-a-riddle" class="headerlink" title="A.Nephren gives a riddle"></a>A.Nephren gives a riddle</h1><p>水题……<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line">//created by missever</div><div class="line"></div><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line">typedef pair&lt;int,int&gt; P;</div><div class="line"></div><div class="line">const int mod = 1e9 + 7;</div><div class="line">const int maxn = 1e5 + 5;</div><div class="line"></div><div class="line">char s0[] = &quot;What are you doing at the end of the world? Are you busy? Will you save us?&quot;;</div><div class="line">char s1[] = &quot;What are you doing while sending \&quot;&quot;;</div><div class="line">char s2[] = &quot;\&quot;? Are you busy? Will you send \&quot;&quot;;</div><div class="line">char s3[] = &quot;\&quot;?&quot;;</div><div class="line"></div><div class="line">LL f[maxn],mm = 1e18 + 1e5;</div><div class="line"></div><div class="line">char solve(int n,LL k) &#123;</div><div class="line">    if(f[n] &lt; k) return &apos;.&apos;;</div><div class="line">    if(n == 0) return s0[k - 1];</div><div class="line">    if(k &lt;= strlen(s1)) return s1[k - 1];</div><div class="line">    k -= strlen(s1);</div><div class="line">    if(k &lt;= f[n - 1]) return solve(n - 1,k);</div><div class="line">    k -= f[n - 1];</div><div class="line">    if(k &lt;= strlen(s2)) return s2[k - 1];</div><div class="line">    k -= strlen(s2);</div><div class="line">    if(k &lt;= f[n - 1]) return solve(n - 1,k);</div><div class="line">    k -= f[n - 1];</div><div class="line">    return s3[k - 1];</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main()&#123;</div><div class="line">#ifdef CX_TEST</div><div class="line">    freopen(&quot;E:\\program--GG\\test_in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">#endif</div><div class="line">    int i,q,n;</div><div class="line">    LL k;</div><div class="line">    f[0] = strlen(s0);</div><div class="line">    for(i = 1;i &lt; maxn; i++) f[i] = min(mm,(LL)strlen(s1) + (LL)strlen(s2) + (LL)strlen(s3) + f[i - 1] * 2);</div><div class="line">    scanf(&quot;%d&quot;,&amp;q);</div><div class="line">    while(q--) &#123;</div><div class="line">        scanf(&quot;%d%lld&quot;,&amp;n,&amp;k);</div><div class="line">        printf(&quot;%c&quot;,solve(n,k));</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="B-Ithea-Plays-With-Chtholly"><a href="#B-Ithea-Plays-With-Chtholly" class="headerlink" title="B.Ithea Plays With Chtholly"></a>B.Ithea Plays With Chtholly</h1><p>从左到右和从右到左分别维护一个单调队列……<br>那么入队次数最多也就最多$\frac{nc}{2}$次,就像一个直角三角形的两个锐角向直角延伸的样子……<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">//created by missever</div><div class="line"></div><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line">typedef pair&lt;int,int&gt; P;</div><div class="line"></div><div class="line">const int mod = 1e9 + 7;</div><div class="line">const int maxn = 1e5 + 5;</div><div class="line"></div><div class="line">vector&lt;int&gt; l,r;</div><div class="line">int n;</div><div class="line"></div><div class="line">void solvel(int x) &#123;</div><div class="line">    if(l.empty() || l.back() &lt;= x) &#123;</div><div class="line">        l.push_back(x);</div><div class="line">        printf(&quot;%d\n&quot;,(int)l.size());</div><div class="line">    &#125;</div><div class="line">    else &#123;</div><div class="line">        int d = upper_bound(l.begin(),l.end(),x) - l.begin();</div><div class="line">        l[d] = x;</div><div class="line">        printf(&quot;%d\n&quot;,d + 1);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void solver(int x) &#123;</div><div class="line">    if(r.empty() || r.back() &gt;= x) &#123;</div><div class="line">        r.push_back(x);</div><div class="line">        printf(&quot;%d\n&quot;,n - (int)r.size() + 1);</div><div class="line">    &#125;</div><div class="line">    else &#123;</div><div class="line">        int d;</div><div class="line">        for(d = 0;d &lt; r.size(); d++) if(r[d] &lt; x) break;</div><div class="line">        r[d] = x;</div><div class="line">        printf(&quot;%d\n&quot;,n - d);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main()&#123;</div><div class="line">#ifdef CX_TEST</div><div class="line">    //freopen(&quot;E:\\program--GG\\test_in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">#endif</div><div class="line">    int m,c,i,x;</div><div class="line">    scanf(&quot;%d%d%d&quot;,&amp;n,&amp;m,&amp;c);</div><div class="line">    while(1) &#123;</div><div class="line">        scanf(&quot;%d&quot;,&amp;x);</div><div class="line">        if(x * 2 &lt;= c) solvel(x);</div><div class="line">        else solver(x);</div><div class="line">        fflush(stdout);</div><div class="line">        if(l.size() + r.size() == n) break;</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="C-Willem-Chtholly-and-Seniorious"><a href="#C-Willem-Chtholly-and-Seniorious" class="headerlink" title="C.Willem, Chtholly and Seniorious"></a>C.Willem, Chtholly and Seniorious</h1><p>因为操作纯随机,所以2操作不会太少,而得到的区间的期望长度是$\frac{n}{3}$,所以操作一定次数后只有较少的值不同的区间,所以暴力维护就好了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div></pre></td><td class="code"><pre><div class="line">//created by missever</div><div class="line"></div><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line">typedef pair&lt;int,int&gt; P;</div><div class="line">typedef pair&lt;LL,int&gt; PL;</div><div class="line"></div><div class="line">const int mod = 1e9 + 7;</div><div class="line">const int maxn = 1e5 + 5;</div><div class="line"></div><div class="line">int add(int x,int y,int m) &#123;</div><div class="line">    x += y;</div><div class="line">    if(x &gt;= m) x -= m;</div><div class="line">    return x;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int mul(int x,int y,int m) &#123;</div><div class="line">    LL z = 1LL * x * y;</div><div class="line">    return z - z / m * m;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int powt(int a,int b,int m) &#123;</div><div class="line">    int r = 1;</div><div class="line">    while(b) &#123;</div><div class="line">        if(b &amp; 1) r = mul(r,a,m);</div><div class="line">        a = mul(a,a,m);</div><div class="line">        b &gt;&gt;= 1;</div><div class="line">    &#125;</div><div class="line">    return r;</div><div class="line">&#125;</div><div class="line"></div><div class="line">LL a[maxn];</div><div class="line">int seed,vmax;</div><div class="line">set&lt;P&gt; q;</div><div class="line">vector&lt;P&gt; f;</div><div class="line">vector&lt;PL&gt; g;</div><div class="line"></div><div class="line">int rnd() &#123;</div><div class="line">    int u = seed;</div><div class="line">    seed = add(mul(seed,7,mod),13,mod);</div><div class="line">    return u;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">#ifdef CX_TEST</div><div class="line">    freopen(&quot;E:\\program--GG\\test_in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">#endif</div><div class="line">    int n,m,i,j,op,x,y,l,r;</div><div class="line">    scanf(&quot;%d%d%d%d&quot;,&amp;n,&amp;m,&amp;seed,&amp;vmax);</div><div class="line">    for(i = 1; i &lt;= n; i++) a[i] = rnd() % vmax + 1;</div><div class="line">    for(i = j = 1; i &lt;= n; i = j) &#123;</div><div class="line">        while(a[j] ==a[i]) j++;</div><div class="line">        q.insert(P(j - 1,i));</div><div class="line">    &#125;</div><div class="line">    for(i = 1; i &lt;= m; i++) &#123;</div><div class="line">        op = (rnd() &amp; 3) + 1;</div><div class="line">        l = rnd() % n + 1;</div><div class="line">        r = rnd() % n + 1;</div><div class="line">        if(l &gt; r) swap(l,r);</div><div class="line">        auto e = q.lower_bound(P(l,0));</div><div class="line">        if(op == 3) &#123;</div><div class="line">            x = rnd() % (r - l + 1) + 1;</div><div class="line">            g.clear();</div><div class="line">            if(r &lt;= (*e).first) &#123;</div><div class="line">                printf(&quot;%lld\n&quot;,a[(*e).first]);</div><div class="line">                continue;</div><div class="line">            &#125;</div><div class="line">            while(e != q.end() &amp;&amp; (*e).second &lt;= r) &#123;</div><div class="line">                g.push_back(PL(a[(*e).first],min((*e).first,r) - max((*e).second,l) + 1));</div><div class="line">                e++;</div><div class="line">            &#125;</div><div class="line">            sort(g.begin(),g.end());</div><div class="line">            for(auto w:g) &#123;</div><div class="line">                x -= w.second;</div><div class="line">                if(x &lt;= 0) &#123;</div><div class="line">                    printf(&quot;%lld\n&quot;,w.first);</div><div class="line">                    break;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125; else &#123;</div><div class="line">            x = rnd() % vmax + 1;</div><div class="line">            j = 0;</div><div class="line">            if(op == 4) &#123;</div><div class="line">                y = rnd() % vmax + 1;</div><div class="line">                while(e != q.end() &amp;&amp; (*e).second &lt;= r) &#123;</div><div class="line">                    //cout&lt;&lt;a[(*e).first]&lt;&lt;&quot; &quot;&lt;&lt;min((*e).first,r) - max((*e).second,l) + 1&lt;&lt;endl;</div><div class="line">                    j = add(j,mul(powt(a[(*e).first] % y,x,y),min((*e).first,r) - max((*e).second,l) + 1,y),y);</div><div class="line">                    e++;</div><div class="line">                &#125;</div><div class="line">                printf(&quot;%d\n&quot;,j);</div><div class="line">            &#125; else &#123;</div><div class="line">                f.clear();</div><div class="line">                while(e != q.end() &amp;&amp; (*e).second &lt;= r) &#123;</div><div class="line">                    f.push_back(*e);</div><div class="line">                    e++;</div><div class="line">                &#125;</div><div class="line">                if(op == 1) &#123;</div><div class="line">                    for(auto u:f) &#123;</div><div class="line">                        q.erase(u);</div><div class="line">                        if(u.first &gt; r) q.insert(P(u.first,r + 1));</div><div class="line">                        if(u.second &lt; l) &#123;</div><div class="line">                            q.insert(P(l - 1,u.second));</div><div class="line">                            a[l - 1] = a[u.first];</div><div class="line">                        &#125;</div><div class="line">                        q.insert(P(min(u.first,r),max(u.second,l)));</div><div class="line">                        a[min(u.first,r)] = a[u.first] + x;</div><div class="line">                    &#125;</div><div class="line">                &#125; else &#123;</div><div class="line">                    for(auto u:f) &#123;</div><div class="line">                        q.erase(u);</div><div class="line">                        if(u.first &gt; r) q.insert(P(u.first,r + 1));</div><div class="line">                        if(u.second &lt; l) &#123;</div><div class="line">                            q.insert(P(l - 1,u.second));</div><div class="line">                            a[l - 1] = a[u.first];</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                    q.insert(P(r,l));</div><div class="line">                    a[r] = x;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="D-Nephren-Runs-a-Cinema"><a href="#D-Nephren-Runs-a-Cinema" class="headerlink" title="D.Nephren Runs a Cinema"></a>D.Nephren Runs a Cinema</h1><p>固定VIP的人数,剩下的等价于括号匹配方案数,考虑卡特兰数和组合数的那个关系式就好了？<del>似乎以前都没注意过那个式子呀</del><br>因为模数不是质数,所以仿照扩展卢卡斯一样,用CRT合并就可以了</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div></pre></td><td class="code"><pre><div class="line">//created by missever</div><div class="line"></div><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line">typedef pair&lt;LL,LL&gt; P;</div><div class="line">typedef pair&lt;LL,LL&gt; PL;</div><div class="line"></div><div class="line">const LL mod = 1e9 + 7;</div><div class="line">const LL maxn = 1e5 + 5;</div><div class="line"></div><div class="line">LL add(LL x,LL y,LL m) &#123;</div><div class="line">    x += y;</div><div class="line">    if(x &gt;= m) x -= m;</div><div class="line">    return x;</div><div class="line">&#125;</div><div class="line"></div><div class="line">LL mul(LL x,LL y,LL m) &#123;</div><div class="line">    LL z = 1LL * x * y;</div><div class="line">    return z - z / m * m;</div><div class="line">&#125;</div><div class="line"></div><div class="line">LL powt(LL a,LL b,LL m) &#123;</div><div class="line">    LL r = 1;</div><div class="line">    while(b) &#123;</div><div class="line">        if(b &amp; 1) r = mul(r,a,m);</div><div class="line">        a = mul(a,a,m);</div><div class="line">        b &gt;&gt;= 1;</div><div class="line">    &#125;</div><div class="line">    return r;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void extend_Euclid(LL a, LL b, LL &amp;x, LL &amp;y) &#123;</div><div class="line">    if(b == 0) &#123;</div><div class="line">        x = 1;</div><div class="line">        y = 0;</div><div class="line">        return;</div><div class="line">    &#125;</div><div class="line">    extend_Euclid(b, a % b, x, y);</div><div class="line">    LL tmp = x;</div><div class="line">    x = y;</div><div class="line">    y = tmp - (a / b) * y;</div><div class="line">&#125;</div><div class="line"></div><div class="line">LL Inv(LL a,LL b) &#123;</div><div class="line">    LL x,y;</div><div class="line">    extend_Euclid(a,b,x,y);</div><div class="line">    return (x % b + b) % b;</div><div class="line">&#125;</div><div class="line"></div><div class="line">LL CRT(vector&lt;LL&gt; &amp;a,vector&lt;LL&gt; &amp;m,LL M) &#123;</div><div class="line">    LL ans = 0,n = a.size();</div><div class="line">    for(LL i = 0; i &lt; n; i++) &#123;</div><div class="line">        LL x,y;</div><div class="line">        LL Mi = M / m[i];</div><div class="line">        extend_Euclid(Mi, m[i], x, y);</div><div class="line">        x = (x % M + M) % M;</div><div class="line">        ans = add(ans,mul(mul(Mi,x,M),a[i],M),M);</div><div class="line">    &#125;</div><div class="line">    return ans;</div><div class="line">&#125;</div><div class="line"></div><div class="line">map&lt;LL,LL&gt; fac;</div><div class="line">vector&lt;LL&gt; fa,fm;</div><div class="line">struct node &#123;</div><div class="line">    LL u,t,p;</div><div class="line">    LL f[maxn],g[maxn];</div><div class="line">    void init(LL a,LL b) &#123;</div><div class="line">        LL i,x;</div><div class="line">        u = a;</div><div class="line">        t = b;</div><div class="line">        p = powt(a,b,mod * 2);</div><div class="line">        for(i = f[0] = 1;i &lt;= 100000; i++) &#123;</div><div class="line">            for(x = i;x % u == 0; x /= u);</div><div class="line">            f[i] = mul(f[i - 1],x,p);</div><div class="line">        &#125;</div><div class="line">        memset(g,0,sizeof(g));</div><div class="line">        for(i = 1;i * u &lt;= 100000; i++) g[i * u] = g[i] + 1;</div><div class="line">        for(i = 1;i &lt;= 100000; i++) g[i] += g[i - 1];</div><div class="line">    &#125;</div><div class="line">    LL get_mul(LL n,LL m) &#123;</div><div class="line">        if(m &lt; 0 || n &lt; m) return 0;</div><div class="line">        LL tc = g[n] - g[m] - g[n - m];</div><div class="line">        if(tc &gt;= t) return 0;</div><div class="line">        return mul(powt(u,tc,mod * 2),mul(f[n],Inv(mul(f[m],f[n - m],p),p),p),p);</div><div class="line">    &#125;</div><div class="line">&#125; fs[20];</div><div class="line">LL tot = 0;</div><div class="line"></div><div class="line">void init(LL n) &#123;</div><div class="line">    for(LL i = 2; i * i &lt;= n; i++) &#123;</div><div class="line">        while(n % i == 0) &#123;</div><div class="line">            fac[i]++;</div><div class="line">            n /= i;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    if(n &gt; 1) fac[n]++;</div><div class="line">    for(auto e:fac) &#123;</div><div class="line">        fs[tot].init(e.first,e.second);</div><div class="line">        fm.push_back(fs[tot++].p);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">LL cal(LL n,LL m,LL p) &#123;</div><div class="line">    fa.clear();</div><div class="line">    for(LL i = 0;i &lt; tot; i++) fa.push_back(fs[i].get_mul(n,m));</div><div class="line">    return CRT(fa,fm,p);</div><div class="line">&#125;</div><div class="line"></div><div class="line">LL solve(LL n,LL k,LL l,LL r,LL p) &#123;</div><div class="line">    if(k + l &gt; n) return 0;</div><div class="line">    LL ans = cal(n,k,p);</div><div class="line">    n -= k;</div><div class="line">    r = min(r,n);</div><div class="line">    if((n - r) &amp; 1) r--;</div><div class="line">    if((n - l) &amp; 1) l++;</div><div class="line">    r += 2;</div><div class="line">    LL d = cal(n,(n - l) &gt;&gt; 1,p);</div><div class="line">    if(r &lt;= n) d = add(d,p - cal(n,(n - r) &gt;&gt; 1,p),p);</div><div class="line">    return mul(ans,d,p);</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">#ifdef CX_TEST</div><div class="line">    freopen(&quot;E:\\program--GG\\test_in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">#endif</div><div class="line">    int n,p,l,r,ans = 0;</div><div class="line">    scanf(&quot;%d%d%d%d&quot;,&amp;n,&amp;p,&amp;l,&amp;r);</div><div class="line">    init(p);</div><div class="line">    for(LL i = 0;i &lt;= n; i++) ans = add(ans,solve(n,i,l,r,p),p);</div><div class="line">    printf(&quot;%d\n&quot;,ans);</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="E-Welcome-home-Chtholly"><a href="#E-Welcome-home-Chtholly" class="headerlink" title="E.Welcome home, Chtholly"></a>E.Welcome home, Chtholly</h1><p><del>直接暴力一波即可过</del><br>分块,对于整个块的1操作,维护块内的最大最小值$v_{max},v_{min}$,如果$v_{min} + x + x \leq v_{max}$,把小于$x$的数加上$x$然后整个块减$x$即可,否则就把大于$x$的数暴力维护减去$x$的数加上$x$然后整个块减$x$即可<br>因为这样做是一直在缩小区间,并且每个值只会访问一次,所以可以保证对于一个块的总操作次数是$O(n)$的<br>为了实现这样的操作,需要用并查集维护每个数被修改后变成了哪个值,因为每次并查集修改后指向的值都是上述操作未被访问过的值,所以不会存在重叠或循环的问题……</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div></pre></td><td class="code"><pre><div class="line">//created by missever</div><div class="line"></div><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">#define fi first</div><div class="line">#define se second</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line">typedef pair&lt;int, int&gt; P;</div><div class="line"></div><div class="line">const int mod = 1e9 + 7;</div><div class="line">const int maxn = 1e5 + 5;</div><div class="line">const int bsize = 340;</div><div class="line"></div><div class="line">struct block &#123;</div><div class="line">    int d[maxn], p[maxn], l, r;</div><div class="line">    void add(int x) &#123;</div><div class="line">        d[x]++;</div><div class="line">        r = max(x, r);</div><div class="line">    &#125;</div><div class="line">    int ff(int x) &#123;</div><div class="line">        if(p[x] == 0) p[x] = x;</div><div class="line">        if(p[x] != x) p[x] = ff(p[x]);</div><div class="line">        return p[x];</div><div class="line">    &#125;</div><div class="line">    void update(int x) &#123;</div><div class="line">        if(x + l &gt; r) return;</div><div class="line">        if(l + x + x &lt;= r) &#123;</div><div class="line">            for(int i = l + 1; i &lt;= l + x; i++) &#123;</div><div class="line">                if(d[i]) &#123;</div><div class="line">                    d[i + x] += d[i];</div><div class="line">                    d[i] = 0;</div><div class="line">                    p[i] = i + x;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            l += x;</div><div class="line">        &#125; else &#123;</div><div class="line">            for(int i = l + x + 1; i &lt;= r; i++) &#123;</div><div class="line">                if(d[i]) &#123;</div><div class="line">                    d[i - x] += d[i];</div><div class="line">                    d[i] = 0;</div><div class="line">                    p[i] = i - x;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            r = l + x;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    int query(int x) &#123;</div><div class="line">        if(x + l &gt; r) return 0;</div><div class="line">        else return d[x + l];</div><div class="line">    &#125;</div><div class="line">&#125; f[bsize];</div><div class="line">int a[maxn], id[maxn], n;</div><div class="line"></div><div class="line">void rebuild(int k, int l, int r, int x) &#123;</div><div class="line">    for(int i = l; i &lt;= r; i++) &#123;</div><div class="line">        a[i] = f[k].ff(a[i]);</div><div class="line">        if(a[i] &gt; x + f[k].l) &#123;</div><div class="line">            f[k].d[a[i]]--;</div><div class="line">            a[i] -= x;</div><div class="line">            f[k].d[a[i]]++;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int query(int k, int l, int r, int x) &#123;</div><div class="line">    int t = 0;</div><div class="line">    for(int i = l; i &lt;= r; i++) &#123;</div><div class="line">        if(f[k].ff(a[i]) == x + f[k].l) t++;</div><div class="line">    &#125;</div><div class="line">    return t;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">#ifdef CX_TEST</div><div class="line">    freopen(&quot;E:\\program--GG\\test_in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">#endif</div><div class="line">    int m, i, j, k, op, l, r, x;</div><div class="line">    scanf(&quot;%d%d&quot;, &amp;n, &amp;m);</div><div class="line">    for(i = 1, j = k = 0; i &lt;= n; i++) &#123;</div><div class="line">        scanf(&quot;%d&quot;, &amp;a[i]);</div><div class="line">        id[i] = k;</div><div class="line">        f[k].add(a[i]);</div><div class="line">        if(++j == bsize) &#123;</div><div class="line">            j = 0;</div><div class="line">            k++;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    while(m--) &#123;</div><div class="line">        scanf(&quot;%d%d%d%d&quot;, &amp;op, &amp;l, &amp;r, &amp;x);</div><div class="line">        if(op == 1) &#123;</div><div class="line">            if(id[l] == id[r]) rebuild(id[l], l, r, x);</div><div class="line">            else &#123;</div><div class="line">                rebuild(id[l], l, (id[l] + 1) * bsize, x);</div><div class="line">                rebuild(id[r], id[r] * bsize + 1, r, x);</div><div class="line">                for(i = id[l] + 1; i &lt; id[r]; i++) f[i].update(x);</div><div class="line">            &#125;</div><div class="line">        &#125; else &#123;</div><div class="line">            if(id[l] == id[r]) k = query(id[l], l, r, x);</div><div class="line">            else &#123;</div><div class="line">                k = query(id[l], l, (id[l] + 1) * bsize, x);</div><div class="line">                k += query(id[r], id[r] * bsize + 1, r, x);</div><div class="line">                for(i = id[l] + 1; i &lt; id[r]; i++) k += f[i].query(x);</div><div class="line">            &#125;</div><div class="line">            printf(&quot;%d\n&quot;, k);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> ACM </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 分块 </tag>
            
            <tag> CRT </tag>
            
            <tag> 数论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[假如我们能够从头再来]]></title>
      <url>/2017/12/04/20171204/</url>
      <content type="html"><![CDATA[<p>   哈尔滨的寒风……就这么吹进了心里……<br>   <a id="more"></a>  听着熟悉的歌，想到了熟悉的人，一种孤独感突然就那么蔓延了开来想要忆起一些过往，却发现自己似乎没有什么太深刻的过往呢……大学生涯变得越来越单调了，失去的东西好像也越来越多了。之前还能绷紧神经过着充实的训练和补题，现在突然就感觉那是多么的累，亦有一种无可奈何的凄凉感，无论再怎么做，总会有一些东西不会，永远的做不完……永远的学不全……而且，每次盯着屏幕上那昂贵的票价时的望洋兴叹，每次为了寻找一个便宜了几十块钱的辗转多次的线路时的纠结，都让我感觉好烦好累…<br>   当初我选择acm的原因是什么呢?似乎已经记不得了，好像也没有什么特别的原因吧，可能是带着高中的一些遗憾，可能是众多竞赛中只有它我比较熟悉吧（虽然也是在大学才知道的acm）……不管是因为什么，选了就会努力做好它……似乎自己确实做得不太好，总会掉一下链子。每当感觉自己现在这个样子还不错的时候，总是会遇到一些神奇的题，把我打回原形，然后又不停的补题，学习一些新套路……但是，学了这么多，即使会做很多人难题，却总是感觉缺了些什么，似乎只会运用，当自己想构思一个好思路时，却总是想不出什么东西，给自己一种半吊子的感觉。<br>   组队的时候也感觉自己发不出力来……明明感觉自己的能力是可以carry的，却时不时变成划水选手，虽然这里面还有其它的因素，但是总不该是这样的……</p>
<p>以上或许都是无病呻吟吧……反正明天还是会和往常一样，打开熟悉的网页，做着千奇百怪的题……<br>今年又要结束了呀……<br><del>题目是什么，随便取一个吧</del></p>
]]></content>
      
        <categories>
            
            <category> 杂 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 心情 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[无名]]></title>
      <url>/2017/12/02/20171202/</url>
      <content type="html"><![CDATA[<p><a href="http://www.feidieshuo.com/media/play/5099" target="_blank" rel="external">喂，你敢喜欢我吗(飞碟说)</a><br><a id="more"></a><br>你……我……</p>
<p>一梦醒,一梦空……</p>
<p>2017.12.10 +1</p>
]]></content>
      
        <categories>
            
            <category> 杂 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 心情 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Byteland_Trip]]></title>
      <url>/2017/11/30/gym-101611B/</url>
      <content type="html"><![CDATA[<p><a href="http://codeforces.com/gym/101611/problem/B" target="_blank" rel="external">题目传送门</a><br>题意:略……<br><a id="more"></a><br>$l[i][j]$表示从左边开始的前$i$个字符组成$j$个向右的半环的方案数.<br>$r[i][j]$表示从右边开始的前$i$个字符组成$j$个向左的半环的方案数.<br>然后就可以愉快的转移了……<br>然后就可以枚举终点愉快的统计答案了……<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line">//created by missever</div><div class="line"></div><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line">typedef pair&lt;int,int&gt; P;</div><div class="line"></div><div class="line">const int mod = 1e9 + 7;</div><div class="line">const int maxn = 5005;</div><div class="line"></div><div class="line">void add(int &amp;x,int y) &#123;</div><div class="line">    x += y;</div><div class="line">    if(x &gt;= mod) x -= mod;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int mul(int x,int y) &#123;</div><div class="line">    LL z = 1LL * x * y;</div><div class="line">    return z - z / mod * mod;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int p[maxn],l[maxn][maxn],r[maxn][maxn];</div><div class="line">char s[maxn];</div><div class="line"></div><div class="line">int main()&#123;</div><div class="line">#ifdef CX_TEST</div><div class="line">    freopen(&quot;E:\\program--GG\\test_in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">#endif</div><div class="line">    int n,i,j;</div><div class="line">    scanf(&quot;%s&quot;,s);</div><div class="line">    n = strlen(s);</div><div class="line">    for(p[0] = i = 1;i &lt;= n; i++) p[i] = mul(i,p[i - 1]);</div><div class="line">    if(n == 1) return puts(&quot;1&quot;);</div><div class="line">    l[1][1] = (s[0] == &apos;&gt;&apos;);</div><div class="line">    for(i = 1;i &lt; n; i++) &#123;</div><div class="line">        for(j = 1;j &lt;= i; j++) add(l[i + 1][j],mul(l[i][j],j));</div><div class="line">        if(s[i] == &apos;&lt;&apos;) &#123;</div><div class="line">            for(j = 2;j &lt;= i; j++) add(l[i + 1][j - 1],mul(l[i][j],mul(j,j - 1)));</div><div class="line">        &#125; else &#123;</div><div class="line">            for(j = 1;j &lt;= i; j++) add(l[i + 1][j + 1],l[i][j]);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    reverse(s,s + n);</div><div class="line">    r[1][1] = (s[0] == &apos;&lt;&apos;);</div><div class="line">    for(i = 1;i &lt; n; i++) &#123;</div><div class="line">        for(j = 1;j &lt;= i; j++) add(r[i + 1][j],mul(r[i][j],j));</div><div class="line">        if(s[i] == &apos;&gt;&apos;) &#123;</div><div class="line">            for(j = 2;j &lt;= i; j++) add(r[i + 1][j - 1],mul(r[i][j],mul(j,j - 1)));</div><div class="line">        &#125; else &#123;</div><div class="line">            for(j = 1;j &lt;= i; j++) add(r[i + 1][j + 1],r[i][j]);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    for(i = 1;i &lt;= n; i++) &#123;</div><div class="line">        if(i == 1) printf(&quot;%d &quot;,r[n - 1][1]);</div><div class="line">        else if(i == n) printf(&quot;%d &quot;,l[n - 1][1]);</div><div class="line">        else &#123;</div><div class="line">            int ans = 0;</div><div class="line">            for(j = 1;j &lt; i; j++) &#123;</div><div class="line">                add(ans,mul(mul(mul(l[i - 1][j],r[n - i][j]),mul(p[j],p[j])),2));</div><div class="line">                add(ans,mul(mul(l[i - 1][j],r[n - i][j + 1]),mul(p[j],p[j + 1])));</div><div class="line">                add(ans,mul(mul(l[i - 1][j + 1],r[n - i][j]),mul(p[j],p[j + 1])));</div><div class="line">            &#125;</div><div class="line">            printf(&quot;%d &quot;,ans);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    puts(&quot;&quot;);</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> ACM </category>
            
        </categories>
        
        
        <tags>
            
            <tag> DP </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hihocoder1635_Colored_Nodes]]></title>
      <url>/2017/11/30/beijing-icpc-i/</url>
      <content type="html"><![CDATA[<p><a href="https://hihocoder.com/problemset/problem/1635" target="_blank" rel="external">题目传送门</a><br>题意:略……<br><a id="more"></a><br>暴力染色一轮,然后可以得到每个点的颜色是从哪个点转移过来的,类似于等到了一个点的颜色转移矩阵.<br>如果点$i$的前驱是$fa_{i}$,则连边$fa_{i}-&gt;i$,然后可以得到一些基环外向树,可以知道每棵树只有一个环,树上的点的颜色会被环上的点等频率的染色到.然后把每棵树重新定义一种颜色,模拟一轮染色,就可以得到这棵树在一轮染色中占有了的点的个数.一轮染色染$n$次,总共$n^{2}$个点.那么每棵树的答案即是$\frac{sum}{num * n}$,$sum$为占有的点的个数,$num$为环上点的个数.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line">//created by missever</div><div class="line"></div><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line">typedef pair&lt;int,int&gt; P;</div><div class="line"></div><div class="line">const int mod = 1e9 + 7;</div><div class="line">const int maxn = 1e5 + 5;</div><div class="line"></div><div class="line">vector&lt;int&gt; g[maxn];</div><div class="line">vector&lt;double&gt; ans;</div><div class="line">int c[maxn],d[maxn],pre[maxn],cnum[maxn],tot,col;</div><div class="line">LL csum[maxn];</div><div class="line"></div><div class="line">int dfs(int u) &#123;</div><div class="line">    if(d[u] == -1) &#123;</div><div class="line">        d[u] = col++;</div><div class="line">        cnum[d[u]]++;</div><div class="line">        return u;</div><div class="line">    &#125; else if(d[u]) return 0;</div><div class="line">    d[u] = -1;</div><div class="line">    int dx = dfs(c[u]);</div><div class="line">    d[u] = d[c[u]];</div><div class="line">    if(dx == 0 || dx == u) return 0;</div><div class="line">    else &#123;</div><div class="line">        cnum[d[u]]++;</div><div class="line">        return dx;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">#ifdef CX_TEST</div><div class="line">    freopen(&quot;E:\\program--GG\\test_in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">#endif</div><div class="line">    int n,m,i,u,v;</div><div class="line">    while(~scanf(&quot;%d%d&quot;,&amp;n,&amp;m)) &#123;</div><div class="line">        for(i = 1; i &lt;= n; i++) &#123;</div><div class="line">            g[i].clear();</div><div class="line">            c[i] = i;</div><div class="line">        &#125;</div><div class="line">        memset(pre,0,sizeof(pre));</div><div class="line">        memset(d,0,sizeof(d));</div><div class="line">        memset(csum,0,sizeof(csum));</div><div class="line">        memset(cnum,0,sizeof(cnum));</div><div class="line">        ans.clear();</div><div class="line">        for(i = 0; i &lt; m; i++) &#123;</div><div class="line">            scanf(&quot;%d%d&quot;,&amp;u,&amp;v);</div><div class="line">            g[u].push_back(v);</div><div class="line">            g[v].push_back(u);</div><div class="line">        &#125;</div><div class="line">        for(i = 1; i &lt;= n; i++) &#123;</div><div class="line">            for(auto x:g[i]) c[x] = c[i];</div><div class="line">        &#125;</div><div class="line">        for(i = col = 1; i &lt;= n; i++) &#123;</div><div class="line">            if(!d[i]) dfs(i);</div><div class="line">        &#125;</div><div class="line">        for(i = 1; i &lt;= n; i++) &#123;</div><div class="line">            for(auto x:g[i]) &#123;</div><div class="line">                if(d[x] != d[i]) &#123;</div><div class="line">                    csum[d[x]] += i - pre[x];</div><div class="line">                    d[x] = d[i];</div><div class="line">                    pre[x] = i;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        for(i = 1; i &lt;= n; i++) csum[d[i]] += n - pre[i];</div><div class="line">        for(i = 1; i &lt; col; i++) &#123;</div><div class="line">            double fs = 1.0 * csum[i] / n / cnum[i];</div><div class="line">            for(v = 0; v &lt; cnum[i]; v++) ans.push_back(fs);</div><div class="line">        &#125;</div><div class="line">        sort(ans.rbegin(),ans.rend());</div><div class="line">        for(auto x:ans) printf(&quot;%.6f\n&quot;,x);</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> ACM </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 图论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[F.Fygon_2.0]]></title>
      <url>/2017/11/28/2017_NEERC_F/</url>
      <content type="html"><![CDATA[<p>题意: <del>给你一些$for$的嵌套表达式,求渐近复杂度</del><br><a id="more"></a><br>分析: 如果是$for(i:1-&gt;n) for(j:i-&gt;n) for(k:j-&gt;n) \dots$的形式,那么我们可以知道其复杂度是$\frac{n^{m}}{m!}$,然而其它的表达式形式都可以拆成多个这样的形式的和,那么就转化为能有多少组这样的形式,如果把给的$for(a:b-&gt;c)$转换为两条边$b-&gt;a,a-&gt;c$,那么就变成图的拓扑序个数,当然我们可能遇到环,把环缩点掉就好了(因为环表示环上所有点的值都相同)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div></pre></td><td class="code"><pre><div class="line">//created by missever</div><div class="line"></div><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">#define fi first</div><div class="line">#define se second</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line">typedef pair&lt;int,int&gt; P;</div><div class="line"></div><div class="line">map&lt;char,int&gt; q;</div><div class="line">int tot = 0;</div><div class="line">int fa[22],h[22],g[22][22];</div><div class="line">LL f[1 &lt;&lt; 20];</div><div class="line"></div><div class="line">int get_id(char x) &#123;</div><div class="line">    if(x == &apos;1&apos; || x == &apos;n&apos;) return -1;</div><div class="line">    if(!q.count(x)) q[x] = tot++;</div><div class="line">    return q[x];</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">#ifdef CX_TEST</div><div class="line">    freopen(&quot;E:\\program--GG\\test_in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">#endif</div><div class="line">    freopen(&quot;fygon20.in&quot;, &quot;r&quot;, stdin);</div><div class="line">    freopen(&quot;fygon20.out&quot;, &quot;w&quot;, stdout);</div><div class="line">    int n,i,j,k,u,l,r;</div><div class="line">    char s[22];</div><div class="line">    scanf(&quot;%d&quot;,&amp;n);</div><div class="line">    for(i = 1;i &lt; n; i++) &#123;</div><div class="line">        scanf(&quot;%s&quot;,s);</div><div class="line">        scanf(&quot;%s&quot;,s);</div><div class="line">        u = get_id(s[0]);</div><div class="line">        scanf(&quot;%s&quot;,s);</div><div class="line">        scanf(&quot;%s&quot;,s);</div><div class="line">        l = get_id(s[6]);</div><div class="line">        scanf(&quot;%s&quot;,s);</div><div class="line">        r = get_id(s[0]);</div><div class="line">        if(~l) fa[u] |= 1 &lt;&lt; l,g[l][u] = 1;</div><div class="line">        if(~r) fa[r] |= 1 &lt;&lt; u,g[u][r] = 1;</div><div class="line">    &#125;</div><div class="line">    for(i = 0;i &lt; tot; i++) &#123;</div><div class="line">        for(j = 0;j &lt; tot; j++) &#123;</div><div class="line">            for(k = 0;k &lt; tot; k++) g[j][k] |= g[j][i] &amp; g[i][k];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    n--;</div><div class="line">    for(i = 0;i &lt; tot; i++) &#123;</div><div class="line">        if(h[i] == -1) continue;</div><div class="line">        h[i] |= 1 &lt;&lt; i;</div><div class="line">        for(j = i + 1;j &lt; tot; j++) &#123;</div><div class="line">            if(g[i][j] &amp;&amp; g[j][i]) &#123;</div><div class="line">                h[i] |= 1 &lt;&lt; j,h[j] = -1;</div><div class="line">                n--;</div><div class="line">                fa[i] |= fa[j];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        fa[i] ^= fa[i] &amp; h[i];</div><div class="line">    &#125;</div><div class="line">    f[0] = 1;</div><div class="line">    for(i = 0;i &lt; (1 &lt;&lt; tot); i++) &#123;</div><div class="line">        if(f[i]) &#123;</div><div class="line">            for(j = 0;j &lt; tot; j++) &#123;</div><div class="line">                if(!((i &gt;&gt; j) &amp; 1) &amp;&amp; ((i &amp; fa[j]) == fa[j])) f[i | h[j]] += f[i];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    LL a = 1,b = f[(1 &lt;&lt; tot) - 1];</div><div class="line">    for(i = 2;i &lt;= n; i++) a *= i;</div><div class="line">    LL g = __gcd(a,b);</div><div class="line">    printf(&quot;%d %lld/%lld\n&quot;,n,b / g,a / g);</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> ACM </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 图论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hihocoder1629_Graph]]></title>
      <url>/2017/11/23/beijing-icpc-c/</url>
      <content type="html"><![CDATA[<p><a href="http://hihocoder.com/problemset/problem/1629" target="_blank" rel="external">题目传送门</a><br>题意: 给你一个带标号的无向图,有$q$次询问,每次询问区间$[L,R]$内有多少对点联通并且该路径上所有点都在这个区间内.<br><a id="more"></a><br>按端点从小到大的顺序加边,每条边加两次,然后能得到一个边序列,同时能处理出每个点所属的边的区间$[l_{i},r_{i}]$,对于一个询问$[L,R]$,即询问边序列上区间$[l_{L},r_{R}]$内两个端点都在$[L,R]$内的那些边组成的图的答案.<br>然后把这个边序列分块,用类似莫队的思想处理询问,只是把减操作变成了还原操作,用按秩合并的并查集维护联通块个数即可.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div></pre></td><td class="code"><pre><div class="line">//created by missever</div><div class="line"></div><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">#define fi first</div><div class="line">#define se second</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line">typedef pair&lt;int,int&gt; P;</div><div class="line"></div><div class="line">const int mod = 1e9 + 7;</div><div class="line">const int maxn = 1e5 + 5;</div><div class="line">const int b_size = 333;</div><div class="line"></div><div class="line">P p[maxn];</div><div class="line">vector&lt;int&gt; g[maxn];</div><div class="line">int l[maxn],r[maxn],id[maxn],lim[maxn];</div><div class="line">LL ans[maxn];</div><div class="line">struct que &#123;</div><div class="line">    int l,r,id;</div><div class="line">&#125; fq[maxn];</div><div class="line">bool cmp(const que &amp;a,const que &amp;b) &#123;</div><div class="line">    if(id[l[a.l]] == id[l[b.l]]) return r[a.r] &lt; r[b.r];</div><div class="line">    else return id[l[a.l]] &lt; id[l[b.l]];</div><div class="line">&#125;</div><div class="line"></div><div class="line">struct union_find &#123;</div><div class="line">    int f[maxn],rk[maxn],num[maxn],tot;</div><div class="line">    P res[maxn];</div><div class="line">    LL ans;</div><div class="line">    void init(int n) &#123;</div><div class="line">        for(int i = 0; i &lt;= n; i++) f[i] = i,rk[i] = num[i] = 1;</div><div class="line">        ans = tot = 0;</div><div class="line">    &#125;</div><div class="line">    int ff(int x) &#123;</div><div class="line">        while(f[x] != x) x = f[x];</div><div class="line">        return x;</div><div class="line">    &#125;</div><div class="line">    void do_union(int x,int y) &#123;</div><div class="line">        x = ff(x);</div><div class="line">        y = ff(y);</div><div class="line">        if(x == y) return;</div><div class="line">        if(rk[x] &lt; rk[y]) swap(x,y);</div><div class="line">        res[tot++] = P(y,rk[x]);</div><div class="line">        f[y] = x;</div><div class="line">        ans += 1LL * num[x] * num[y];</div><div class="line">        num[x] += num[y];</div><div class="line">        rk[x] = max(rk[x],rk[y] + 1);</div><div class="line">    &#125;</div><div class="line">    void back(int m) &#123;</div><div class="line">        int x,y;</div><div class="line">        while(tot &gt; m) &#123;</div><div class="line">            tot--;</div><div class="line">            y = res[tot].fi;</div><div class="line">            x = f[y];</div><div class="line">            rk[x] = res[tot].se;</div><div class="line">            num[x] -= num[y];</div><div class="line">            ans -= 1LL * num[x] * num[y];</div><div class="line">            f[y] = y;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125; uf;</div><div class="line"></div><div class="line">void solve() &#123;</div><div class="line">    int n,m,q,i,j,pre,k,x,y;</div><div class="line">    scanf(&quot;%d%d%d&quot;,&amp;n,&amp;m,&amp;q);</div><div class="line">    for(i = 1; i &lt;= n; i++) g[i].clear();</div><div class="line">    for(i = 0; i &lt; m; i++) &#123;</div><div class="line">        scanf(&quot;%d%d&quot;,&amp;x,&amp;y);</div><div class="line">        g[x].push_back(y);</div><div class="line">        g[y].push_back(x);</div><div class="line">    &#125;</div><div class="line">    for(i = 1,m = -1;i &lt;= n; i++) &#123;</div><div class="line">        l[i] = m + 1;</div><div class="line">        for(auto v:g[i]) &#123;</div><div class="line">            if(v &gt; i) p[++m] = P(i,v);</div><div class="line">            else p[++m] = P(v,i);</div><div class="line">            lim[m] = i;</div><div class="line">        &#125;</div><div class="line">        r[i] = m;</div><div class="line">    &#125;</div><div class="line">    for(i = j = 0,k = 1;i &lt;= m; i++) &#123;</div><div class="line">        if(++j == b_size) k++,j = 0;</div><div class="line">        id[i] = k;</div><div class="line">    &#125;</div><div class="line">    for(i = 0; i &lt; q; i++) &#123;</div><div class="line">        scanf(&quot;%d%d&quot;,&amp;fq[i].l,&amp;fq[i].r);</div><div class="line">        fq[i].id = i;</div><div class="line">    &#125;</div><div class="line">    sort(fq,fq + q,cmp);</div><div class="line">    i = 0;</div><div class="line">    while(i &lt; q) &#123;</div><div class="line">        k = id[l[fq[i].l]];</div><div class="line">        uf.init(n);</div><div class="line">        pre = 0;</div><div class="line">        x = y = min(k * b_size,m + 1);</div><div class="line">        while(i &lt; q &amp;&amp; id[l[fq[i].l]] == k) &#123;</div><div class="line">            if(id[r[fq[i].r]] &lt;= k) &#123;</div><div class="line">                for(j = l[fq[i].l];j &lt;= r[fq[i].r]; j++) &#123;</div><div class="line">                    if(fq[i].l &lt;= p[j].fi &amp;&amp; p[j].se &lt;= fq[i].r) uf.do_union(p[j].fi,p[j].se);</div><div class="line">                &#125;</div><div class="line">            &#125; else &#123;</div><div class="line">                while(x &lt;= r[fq[i].r]) &#123;</div><div class="line">                    if(lim[y] &lt;= p[x].fi &amp;&amp; p[x].se &lt;= fq[i].r) uf.do_union(p[x].fi,p[x].se);</div><div class="line">                    x++;</div><div class="line">                &#125;</div><div class="line">                pre = uf.tot;</div><div class="line">                for(j = l[fq[i].l];j &lt; y; j++) &#123;</div><div class="line">                    if(fq[i].l &lt;= p[j].fi &amp;&amp; p[j].se &lt;= fq[i].r) uf.do_union(p[j].fi,p[j].se);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            ans[fq[i++].id] = uf.ans;</div><div class="line">            uf.back(pre);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    for(i = 0;i &lt; q; i++) printf(&quot;%lld\n&quot;,ans[i]);</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">#ifdef CX_TEST</div><div class="line">    freopen(&quot;E:\\program--GG\\test_in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">#endif</div><div class="line">    int t;</div><div class="line">    scanf(&quot;%d&quot;,&amp;t);</div><div class="line">    while(t--) solve();</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> ACM </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 莫队 </tag>
            
            <tag> 并查集 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CF_#446(Div. 1)_E]]></title>
      <url>/2017/11/22/CF_446_E/</url>
      <content type="html"><![CDATA[<p><a href="http://codeforces.com/contest/891/problem/E" target="_blank" rel="external">题目传送门</a><br>题意: 给你一个序列并执行$k$次操作,每次选择一个数减一,并给$res$加上其它数的乘积,求最后$res$的期望值<br><a id="more"></a><br>分析: 思考一下就会发现,对于每种操作方案,最后的$res$都是初始序列各数的乘积减去操作完后各数乘积.<br>所以最后的期望答案就是$ans = \prod_{i=1}^{n}a_{i} - k!/ n^{k} \sum_{\sum_{i=1}^{n}x_{i}=k}\prod_{i=1}^{n}(a_{i} - x_{i})/x_{i}!$<br>我们可以发现上述式子中存在一个卷积,并且存在分母为阶乘的分式,那么就可以很自然的想到指数型生成函数.<br>因为$\sum (a_{i} - j)x^{j}/j!=(a_{i} - x)e^{x}$,所以有$ans=\prod_{i=1}^{n}a_{i} - k!/ n^{k}e^{nx}\prod_{i=1}^{n}(a_{i} - x)$,我们只需要求出这个生成函数的第$x^{k}$项的系数即可.<br>通过$n^{2}$暴力求解最右边的连乘,然后枚举连乘部分所占的指数系数大小即可求得答案.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line">//created by missever</div><div class="line"></div><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line">typedef pair&lt;int,int&gt; P;</div><div class="line"></div><div class="line">const int mod = 1e9 + 7;</div><div class="line">const int maxn = 1e5 + 5;</div><div class="line"></div><div class="line">int add(int x,int y) &#123;</div><div class="line">    x += y;</div><div class="line">    if(x &gt;= mod) x -= mod;</div><div class="line">    return x;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int mul(int x,int y) &#123;</div><div class="line">    LL z = 1LL * x * y;</div><div class="line">    return z - z / mod * mod;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int powt(int a,int b) &#123;</div><div class="line">    int r = 1;</div><div class="line">    while(b) &#123;</div><div class="line">        if(b &amp; 1) r = mul(r,a);</div><div class="line">        a = mul(a,a);</div><div class="line">        b &gt;&gt;= 1;</div><div class="line">    &#125;</div><div class="line">    return r;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int a[5005],f[5005];</div><div class="line"></div><div class="line">int main()&#123;</div><div class="line">#ifdef CX_TEST</div><div class="line">    freopen(&quot;E:\\program--GG\\test_in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">#endif</div><div class="line">    int n,k,i,j,u,s,ans = 0;</div><div class="line">    scanf(&quot;%d%d&quot;,&amp;n,&amp;k);</div><div class="line">    for(i = 0,s = f[0] = 1;i &lt; n; i++) &#123;</div><div class="line">        scanf(&quot;%d&quot;,&amp;a[i]);</div><div class="line">        s = mul(s,a[i]);</div><div class="line">        for(j = i;j &gt;= 0; j--) &#123;</div><div class="line">            f[j + 1] = add(f[j + 1],mod - f[j]);</div><div class="line">            f[j] = mul(f[j],a[i]);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    for(i = 0,u = 1;i &lt;= min(k,n); i++) &#123;</div><div class="line">        ans = add(ans,mul(mul(u,f[i]),powt(n,k - i)));</div><div class="line">        u = mul(u,k - i);</div><div class="line">    &#125;</div><div class="line">    ans = add(s,mod - mul(ans,powt(powt(n,k),mod - 2)));</div><div class="line">    printf(&quot;%d\n&quot;,ans);</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> ACM </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数论 </tag>
            
            <tag> 生成函数 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CF_#443(Div. 1)_E]]></title>
      <url>/2017/11/13/CF_443_E/</url>
      <content type="html"><![CDATA[<p><a href="http://codeforces.com/contest/878/problem/E" target="_blank" rel="external">题目传送门</a><br><del>443的D的思路非常的新奇呀,将数的大小关系用二进制位表示了出来</del><br><a id="more"></a><br>题意:给你一个长度为$n$的序列$a$和$q$次询问,每次询问一个区间$[l,r]$,将这个区间提出来,执行以下操作:对于相邻两个数字$x,y$,删除$y$并将$x$替换为$x+2y$,问最后剩下的那个数最大为多少,答案模$1e9+7$<br>分析: $ans = \sum_{i=0}^{m}a_{l+i}2^{k_{i}}$,除了$k_{0}=0$,这个$k$序列是由一些从$1$开始的连续自然数串组成的,例如$1,2,3 \dots 1,2 \dots$,如果我们能找出这些$1$的位置,那么答案就很好求了.<br>我们通过枚举后缀来求$1$的位置,考虑一段区间,如果$\sum_{i=l}^{r}a_{i}2^{l - i}$大于$2e9$,那么不管前面的数是什么,该值都会变大,它的$1$的位置应该为$0$,若这个和小于$0$,那么$1$的位置就是$l-1$.<br>对于一段长度为$m$区间,$1$的个数最多为$m$个,所以我们需要使用倍增来维护向前跳了$2^{k}$个$1$之后的位置.<br><del>感觉自己都不知道自己在讲些什么</del><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div></pre></td><td class="code"><pre><div class="line">//created by missever</div><div class="line"></div><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line">typedef pair&lt;int,int&gt; P;</div><div class="line"></div><div class="line">const int mod = 1e9 + 7;</div><div class="line">const int maxn = 1e5 + 5;</div><div class="line"></div><div class="line">int add(int x,int y) &#123;</div><div class="line">    x += y;</div><div class="line">    if(x &gt;= mod) x -= mod;</div><div class="line">    return x;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int mul(int x,int y) &#123;</div><div class="line">    LL z = 1LL * x * y;</div><div class="line">    return z - z / mod * mod;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int a[maxn],s[maxn],p[maxn],inv[maxn];</div><div class="line">int f[maxn][20],d[maxn][20];</div><div class="line"></div><div class="line">int main()&#123;</div><div class="line">#ifdef CX_TEST</div><div class="line">    freopen(&quot;E:\\program--GG\\test_in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">#endif</div><div class="line">    int n,q,i,j,l,r;</div><div class="line">    scanf(&quot;%d%d&quot;,&amp;n,&amp;q);</div><div class="line">    for(i = p[0] = inv[0] = 1;i &lt;= n; i++) &#123;</div><div class="line">        scanf(&quot;%d&quot;,&amp;a[i]);</div><div class="line">        inv[i] = mul(inv[i - 1],500000004);</div><div class="line">        p[i] = mul(p[i - 1],2);</div><div class="line">        s[i] = add(s[i - 1],mul(mod + a[i],p[i]));</div><div class="line">    &#125;</div><div class="line">    for(i = 1;i &lt;= n; i++) &#123;</div><div class="line">        LL x = 0;</div><div class="line">        for(j = i;j &gt; 0; j--) &#123;</div><div class="line">            x = (x * 2 + a[j]);</div><div class="line">            if(x &lt;= 0) &#123;</div><div class="line">                f[i][0] = j - 1;</div><div class="line">                d[i][0] = add(0,mod + x * 2 % mod);</div><div class="line">                break;</div><div class="line">            &#125;</div><div class="line">            if(x &gt; 2000000000) &#123;</div><div class="line">                f[i][0] = -1;</div><div class="line">                break;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    for(j = 1;j &lt; 18; j++) &#123;</div><div class="line">        for(i = 1;i &lt;= n; i++) &#123;</div><div class="line">            if(f[i][j - 1] == -1) f[i][j] = -1;</div><div class="line">            else &#123;</div><div class="line">                f[i][j] = f[f[i][j - 1]][j - 1];</div><div class="line">                d[i][j] = add(d[i][j - 1],d[f[i][j - 1]][j - 1]);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    while(q--) &#123;</div><div class="line">        scanf(&quot;%d%d&quot;,&amp;l,&amp;r);</div><div class="line">        int ans = 0;</div><div class="line">        for(i = 17;i &gt;= 0; i--) &#123;</div><div class="line">            if(f[r][i] &gt; l) &#123;</div><div class="line">                ans = add(ans,d[r][i]);</div><div class="line">                r = f[r][i];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        if(r &gt;= l) ans = add(ans,mul(add(s[r],mod - s[l - 1]),inv[l]));</div><div class="line">        printf(&quot;%d\n&quot;,ans);</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> ACM </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 倍增 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CF_#445(Div. 1)_E]]></title>
      <url>/2017/11/11/CF_445_E/</url>
      <content type="html"><![CDATA[<p><a href="http://codeforces.com/contest/889/problem/E" target="_blank" rel="external">题目传送门</a><br><del>比赛打到一半CF炸了,感觉非常的累……</del><br><a id="more"></a><br>题意:给你序列$a_{i}$,定义$f(x,n)=x \% a_{n},f(x,i)=x \% a_{i} + f(x \% a_{i},i + 1)$,求函数$f(x,1)$的最大值.<br>分析:$f(x,1)=x \% a_{1} + x \% a_{1} \% a_{2} + \dots + x \% a_{1} \% a_{2} \dots \% a_{n}$,定义$b_{x,i} = x \% a_{1} \% a_{2} \dots \% a_{i}$.<br>定理: 如果$f(m,1)$是最大值,那么一定存在至少一个$i$使得$b_{m,i} = a_{i} - 1$.<br>证明:反证法,如果$f(m,1)$是最大值且不满足上述条件,那么对于$f(m + 1,1)$,我们可以得到$b_{m+1,i} = b_{m,i} + 1$,那么$f(m,1)$就肯定不是最大值,得证.<br>做法: 用$map$维护一个$pair(c,w)$表示当$0 \leq b_{x,i} \leq c$时,前$i$个数的比$c$多的部分的和的最大值.当$a_{i} &gt; c$时$w$不变;当$a_{i} \leq c$时区间由$[0,c]$变成$[0,a_{i}-1],[0,c \% a_{i}]$.答案就是$max(w + c * n)$</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">//created by missever</div><div class="line"></div><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line">typedef pair&lt;LL,LL&gt; P;</div><div class="line"></div><div class="line">const int mod = 1e9 + 7;</div><div class="line">const int maxn = 1e5 + 5;</div><div class="line"></div><div class="line">map&lt;LL,LL&gt; q;</div><div class="line">vector&lt;P&gt; f;</div><div class="line"></div><div class="line">int main()&#123;</div><div class="line">#ifdef CX_TEST</div><div class="line">    freopen(&quot;E:\\program--GG\\test_in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">#endif</div><div class="line">    int n,i;</div><div class="line">    LL x,p;</div><div class="line">    scanf(&quot;%d&quot;,&amp;n);</div><div class="line">    scanf(&quot;%lld&quot;,&amp;p);</div><div class="line">    q[p - 1] = 0;</div><div class="line">    for(i = 1;i &lt; n; i++) &#123;</div><div class="line">        scanf(&quot;%lld&quot;,&amp;x);</div><div class="line">        if(x &gt;= p) continue;</div><div class="line">        f.clear();</div><div class="line">        auto e = q.lower_bound(x);</div><div class="line">        for(auto u = e;u != q.end(); u++) f.push_back(*u);</div><div class="line">        q.erase(e,q.end());</div><div class="line">        for(auto u:f) &#123;</div><div class="line">            q[x - 1] = max(q[x - 1],(u.first - x + 1) / x * x * i + u.second);</div><div class="line">            q[u.first % x] = max(q[u.first % x],u.first / x * x * i + u.second);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    x = 0;</div><div class="line">    for(auto e:q) x = max(x,e.first * n + e.second);</div><div class="line">    printf(&quot;%lld\n&quot;,x);</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> ACM </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[博= =客]]></title>
      <url>/2017/11/09/the-second-article/</url>
      <content type="html"><![CDATA[<h1 id="11-09"><a href="#11-09" class="headerlink" title="11.09"></a>11.09</h1><p>给博客瞎搞了一个评论功能弄了上去……虽然好像兼容性不是特别的好，就这样吧(反正也觉得没人会评论的)<br>搜索功能似乎至少要输入两个字才行……感觉非常的捉急<br><a id="more"></a></p>
<h1 id="11-13"><a href="#11-13" class="headerlink" title="11.13"></a>11.13</h1><p>那个友言似乎登不上去呀……默默的换成畅言试一下</p>
]]></content>
      
        <categories>
            
            <category> 杂 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 心情 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[青花引]]></title>
      <url>/2017/11/02/song-qinghuayin/</url>
      <content type="html"><![CDATA[<p>一壶青花<br>清水细撩蒹葭<br>淋漓飒沓世外尽喧哗<br>烟景细尘<a id="more"></a><br>吹过咿咿呀呀<br>琉璃灯下私语话<br>一点朱砂<br>春来秋去韶华<br>古道遥遥牡丹亭外花<br>风醇柔火<br>千古灼烧不肯罢<br>纹上锦鲤戏软纱<br>慷慨够几话<br>座上天下此番辗转天涯<br>伏笔够几话<br>一笔江枫一笔山隐结发<br>眼过几冬夏 灰烬归家<br>也再无双生花<br>昌南夜雨凉透瓶身骨中化<br>便装下茶的清雅酒的潇洒<br>唐诗宋词浓墨重彩<br>遥遥等春发<br>只劝岁月少几寸浮夸<br>当流光遇流萤染了白月牙<br>宫商广寒鸦一身飒飒无瑕<br>唇齿猎眉峰仕女簪花<br>自逐岸上白马<br>别了烂漫飞花<br>萍踪浪迹谁人踏<br>高山流水未达<br>忽如远行才知<br>江山如画尽归旁人羡煞<br>而相思喑哑如她<br>清平调起偏逢<br>簌簌雪花不问<br>千秋风流真或假<br>春来花发<br>袖中点点新芽<br>浓淡跃然灯火又万家<br>眠我情话<br>鸾凤和鸣碎烟霞<br>更长漏永雁平沙<br>慷慨够几话<br>座上天下此番辗转天涯<br>伏笔够几话<br>一笔江枫一笔山隐结发<br>眼过几冬夏<br>灰烬归家<br>也再无双生花<br>昌南夜雨凉透瓶身骨中化<br>便装下茶的清雅酒的潇洒<br>唐诗宋词浓墨重彩<br>遥遥等春发<br>只劝岁月少几寸浮夸<br>当流光遇流萤染了白月牙<br>宫商广寒鸦一身飒飒无瑕<br>唇齿猎眉峰仕女簪花<br>自逐岸上白马<br>别了烂漫飞花<br>昌南夜雨凉透瓶身骨中化<br>便装下茶的清雅酒的潇洒<br>唐诗宋词浓墨重彩<br>遥遥等春发<br>只劝岁月少几寸浮夸<br>当流光遇流萤染了白月牙<br>宫商广寒鸦一身飒飒无瑕<br>唇齿猎眉峰仕女簪花<br>自逐岸上白马<br>别了烂漫飞花<br>炉火白釉 青瓷花</p>
<h1 id="水墨青花"><a href="#水墨青花" class="headerlink" title="水墨青花"></a>水墨青花</h1><p>徐志摩<br>轻吟一句情话，执笔一副情画。<br>绽放一地情花，覆盖一片青瓦。<br>共饮一杯清茶，同研一碗青砂。<br>挽起一面轻纱，看清天边月牙。<br>爱像水墨青花，何惧刹那芳华。</p>
]]></content>
      
        <categories>
            
            <category> 未 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[葬仙]]></title>
      <url>/2017/10/02/song-zangxian/</url>
      <content type="html"><![CDATA[<p>倾覆八荒血染剑上一寸霜<br>被万灵膜拜白衣世无双<br>鬼面似笑又好似心伤<br>这是宿命在逼迫我反抗<br><a id="more"></a><br>永生执念寻觅相似花绽放<br>那少年惊艳岁月争星芒<br>仙路迢迢 枯骨路成王<br>这是英雄他生来的战场</p>
<p>我曾背负世人谎<br>血衣大杀过四方<br>我曾望着星光伴一人而唱</p>
<p>我曾只手遮天光<br>游走宇宙过洪荒<br>我曾祈求天地与万物 护你<br>佑你无恙</p>
<p>你可无恙？</p>
<p>永生执念寻觅相似花绽放<br>那少年惊艳岁月争星芒<br>仙路迢迢 枯骨路成王<br>这是英雄他生来的战场<br>我曾背负世人谎<br>血衣大杀过四方<br>我曾望着星光伴一人流浪<br>我曾只手遮天光<br>游走宇宙过洪荒<br>我曾傲然天地与万物<br>念你无恙</p>
<p>我曾背负世人妄<br>暮色疲惫过丘芒<br>我曾揽月摘星将一人殡葬</p>
<p>我曾覆手镇魍魉<br>改写生死逆苍穹<br>我曾震慑千古却只为重回<br>昆仑山上</p>
<p>将故人葬</p>
<p><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1506932486799&amp;di=64879694018a31cc86c3b788eb97293e&amp;imgtype=0&amp;src=http%3A%2F%2Fstatic.missevan.com%2Fcoversmini%2F201706%2F30%2F6ff333d9ed3a518e8cda08a1499fba73213841.png" alt="xx"></p>
]]></content>
      
        <categories>
            
            <category> 未 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[佩尔方程]]></title>
      <url>/2017/10/02/Pell/</url>
      <content type="html"><![CDATA[<h1 id="连分数"><a href="#连分数" class="headerlink" title="连分数"></a>连分数</h1><p>$\omega = a_{0} + \frac{1}{a_{1} + \frac{1}{a_{2} + \cdots }}$<br>一个实数 $\omega$ 可以用一个正整数数列$\left[a_{i} \right]$表示，这样的表示方法称为连分数表示.有理数的连分数序列有限，无理数的连分数序列无限.<br>给定$\left[a_{i} \right]$数列，求原数$\frac{p_{n}}{q_{n}}$的递推公式：<br>$p_{n} = a_{n}p_{n-1}+p_{n-2},p_{-1}=1,p_{-2}=0$<br>$q_{n} = a_{n}q_{n-1}+q_{n-2},q_{-1}=0,q_{-2}=1$<br>一个实数的序列长度为$n$连分数表示亦称为一个数的$n$渐近分数.<br><a id="more"></a></p>
<h1 id="佩尔-Pell-方程"><a href="#佩尔-Pell-方程" class="headerlink" title="佩尔(Pell)方程"></a>佩尔(Pell)方程</h1><p>$x^{2}-Ny^{2}=1$<br>佩尔方程有解的充要条件是正整数$N$不是完全平方数<br>定理：若$\sqrt N$的渐近分数为$\frac{p_{k}}{q_{k}}$,则存在$n&gt;0$，使得$p_{n}^{2}-Nq_{n}^{2}=1$<br>递推寻找最小解：<br>初始化：<br>$p_{-1}=1,p_{-2}=0$<br>$q_{-1}=0,q_{-2}=1$<br>$a_{0}=\left \lfloor \sqrt{N} \right \rfloor$<br>$g_{-1}=0,h_{-1}=1$<br>递推寻找：<br>$g_{i}=-g_{i-1}+a_{i}h_{i-1}$<br>$h_{i}=\frac{N-g_{i}^{2}}{h_{i-1}}$<br>$a_{i+1}=\left \lfloor \frac{g_{i}+a_{0}}{h_{i}} \right \rfloor$<br>$p_{i}=a_{i}p_{i-1}+p_{i-2}$<br>$q_{i}=a_{i}q_{i-1}+q_{i-2}$<br>然后check $p_{i},q_{i}$</p>
<p>如果求得了最小解$x_{1},y_{1}$,那么可以递推出第$k$大解：<br>$x_{k}=x_{k-1}x_{1}+Ny_{k-1}y_{1}$<br>$y_{k}=x_{k-1}y_{1}+y_{k-1}x_{1}$<br>并且第$k$大解$(x_{k},y_{k})$满足$x_{k}+\sqrt{N}y_{k}=(x_{1}+\sqrt{N}y_{1})^{k}$<br>所以当$k$比较大时,可以使用二元域的快速幂求解</p>
<h1 id="第二类佩尔方程"><a href="#第二类佩尔方程" class="headerlink" title="第二类佩尔方程"></a>第二类佩尔方程</h1><p>$x^{2}-Ny^{2}=-1$<br>若上式有解,设其最小解为$(x_{0},y_{0})$,那么上式的所有解$(x_{k},y_{k})$满足$x_{k}+y_{k}\sqrt{N}=(x_{0}+y_{0}\sqrt{N})^{2k+1}$<br>设$x^{2}-Ny^{2}=1$的最小解为$(a,b)$,满足$a+b\sqrt{N}=(x_{0}+y_{0}\sqrt{N})^{2}$</p>
]]></content>
      
        <categories>
            
            <category> ACM </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[2017北京网络赛补]]></title>
      <url>/2017/10/02/Beijing2017/</url>
      <content type="html"><![CDATA[<h1 id="D-Agent-Communication"><a href="#D-Agent-Communication" class="headerlink" title="D.Agent Communication"></a>D.Agent Communication</h1><p>题意：给你一棵树,你需要加一条边,使得所有点对的距离的最大值最小.<br>分析：加的边一定在直径上,先处理出所有点到直径的距离,然后仿照<a href="http://acm.hdu.edu.cn/showproblem.php?pid=5699" target="_blank" rel="external">hdu5699</a>即可<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div></pre></td><td class="code"><pre><div class="line">//created by missever</div><div class="line"></div><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line">typedef pair&lt;int,int&gt; P;</div><div class="line"></div><div class="line">const int mod = 1e9 + 7;</div><div class="line">const int maxn = 1005;</div><div class="line">vector&lt;int&gt; g[maxn],f;</div><div class="line">int d[maxn],w[maxn];</div><div class="line">bool inl[maxn];</div><div class="line"></div><div class="line">int dfs(int u,int fa) &#123;</div><div class="line">    int x,k = u;</div><div class="line">    for(auto v:g[u]) &#123;</div><div class="line">        if(v == fa || inl[v]) continue;</div><div class="line">        d[v] = d[u] + 1;</div><div class="line">        x = dfs(v,u);</div><div class="line">        if(d[x] &gt; d[k]) k = x;</div><div class="line">    &#125;</div><div class="line">    return k;</div><div class="line">&#125;</div><div class="line"></div><div class="line">bool dfs(int u,int fa,int w) &#123;</div><div class="line">    f.push_back(u);</div><div class="line">    inl[u] = 1;</div><div class="line">    if(u == w) return true;</div><div class="line">    for(auto v:g[u]) &#123;</div><div class="line">        if(v == fa) continue;</div><div class="line">        if(dfs(v,u,w)) return true;</div><div class="line">    &#125;</div><div class="line">    f.pop_back();</div><div class="line">    inl[u] = 0;</div><div class="line">    return false;</div><div class="line">&#125;</div><div class="line"></div><div class="line">bool check(int k,int m) &#123;</div><div class="line">    int i,j,u,l1,l2,r1,r2;</div><div class="line">    l1 = l2 = -mod;</div><div class="line">    r1 = r2 = mod;</div><div class="line">    for(i = 0;i &lt; m; i++) &#123;</div><div class="line">        for(j = i + 1;j &lt; m; j++) &#123;</div><div class="line">            if(j - i + w[i] +w[j] &lt;= k) continue;</div><div class="line">            u = k - 1 - w[i] - w[j];</div><div class="line">            l1 = max(l1,i + j - u);</div><div class="line">            l2 = max(l2,j - i - u);</div><div class="line">            r1 = min(r1,i + j + u);</div><div class="line">            r2 = min(r2,j - i + u);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    if(l1 &lt;= r1 &amp;&amp; l2 &lt;= r2) &#123;</div><div class="line">        if(l1 == r1 &amp;&amp; l2 == r2) &#123;</div><div class="line">            if((l1 + l2) &amp; 1) return false;</div><div class="line">            else return true;</div><div class="line">        &#125; else return true;</div><div class="line">    &#125; else return false;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void solve() &#123;</div><div class="line">    int n,m,u,v,i,l,r,mid;</div><div class="line">    scanf(&quot;%d&quot;,&amp;n);</div><div class="line">    for(i = 1;i &lt;= n; i++) g[i].clear();</div><div class="line">    memset(inl,0,sizeof(inl));</div><div class="line">    for(i = 1;i &lt; n; i++) &#123;</div><div class="line">        scanf(&quot;%d%d&quot;,&amp;u,&amp;v);</div><div class="line">        g[u].push_back(v);</div><div class="line">        g[v].push_back(u);</div><div class="line">    &#125;</div><div class="line">    d[1] = 1;</div><div class="line">    u = dfs(1,0);</div><div class="line">    d[u] = 1;</div><div class="line">    v = dfs(u,0);</div><div class="line">    f.clear();</div><div class="line">    dfs(u,0,v);</div><div class="line">    m = f.size();</div><div class="line">    for(i = 0;i &lt; m; i++) &#123;</div><div class="line">        d[f[i]] = 0;</div><div class="line">        w[i] = d[dfs(f[i],0)];</div><div class="line">    &#125;</div><div class="line">    l = 0;</div><div class="line">    r = 1005;</div><div class="line">    while(l &lt; r) &#123;</div><div class="line">        mid = (l + r) &gt;&gt; 1;</div><div class="line">        if(check(mid,m)) r = mid;</div><div class="line">        else l = mid + 1;</div><div class="line">    &#125;</div><div class="line">    printf(&quot;%d\n&quot;,r);</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">#ifdef CX_TEST</div><div class="line">    freopen(&quot;E:\\program--GG\\test_in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">#endif</div><div class="line">    int t;</div><div class="line">    scanf(&quot;%d&quot;,&amp;t);</div><div class="line">    while(t--) solve();</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="F-Cake"><a href="#F-Cake" class="headerlink" title="F.Cake"></a>F.Cake</h1><p>题意：有三个人在做$n$个蛋糕,每个蛋糕分三步,每人负责一步,只能做完上一步才能做下一步.每个人做的顺序必须一致,问最小总时间.<br>分析：对于两个蛋糕A和B，定义$A &lt; B$,当且仅当AB相邻时AB比BA要优。然后排序完跑一遍就行了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">//created by missever</div><div class="line"></div><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line">typedef pair&lt;int,int&gt; P;</div><div class="line"></div><div class="line">const int mod = 1e9 + 7;</div><div class="line">const int maxn = 1e5 + 5;</div><div class="line"></div><div class="line">struct node &#123;</div><div class="line">    int a,b,c;</div><div class="line">&#125; f[maxn];</div><div class="line"></div><div class="line">bool cmp(const node &amp;x,const node &amp;y) &#123;</div><div class="line">    int u = max(x.a + x.b,x.a + y.a);</div><div class="line">    u = max(u + y.b,x.a + x.b + x.c) + y.c;</div><div class="line">    int v = max(y.a + y.b,y.a + x.a);</div><div class="line">    v = max(v + x.b,y.a + y.b + y.c) + x.c;</div><div class="line">    return u &lt; v;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">#ifdef CX_TEST</div><div class="line">    freopen(&quot;E:\\program--GG\\test_in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">#endif</div><div class="line">    int n,i;</div><div class="line">    LL da,db,dc;</div><div class="line">    while(~scanf(&quot;%d&quot;,&amp;n) &amp;&amp; n) &#123;</div><div class="line">        for(i = 0;i &lt; n; i++) scanf(&quot;%d%d%d&quot;,&amp;f[i].a,&amp;f[i].b,&amp;f[i].c);</div><div class="line">        sort(f,f + n,cmp);</div><div class="line">        da = db = dc = 0;</div><div class="line">        for(i = 0;i &lt; n; i++) &#123;</div><div class="line">            da += f[i].a;</div><div class="line">            db = max(db,da);</div><div class="line">            db += f[i].b;</div><div class="line">            dc = max(dc,db);</div><div class="line">            dc += f[i].c;</div><div class="line">        &#125;</div><div class="line">        printf(&quot;%lld\n&quot;,dc);</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="H-Polynomial-Product"><a href="#H-Polynomial-Product" class="headerlink" title="H.Polynomial Product"></a>H.Polynomial Product</h1><p>题意：给你两个多项式,定义卷积后的系数$c_{i}= max(a_{j}+b_{i-j})$,问哪些系数大于了$w$<br>分析：排序之后,可以线性处理出对于$a_{i}$有哪些$b_{j}$会使得它们的和大于$w$,然后用$bitset$取一遍或,即可.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line">//created by missever</div><div class="line"></div><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line">typedef pair&lt;int,int&gt; P;</div><div class="line"></div><div class="line">const int mod = 1e9 + 7;</div><div class="line">const int maxn = 1e5 + 5;</div><div class="line"></div><div class="line">vector&lt;P&gt; fa,fb;</div><div class="line">bitset&lt;1005&gt; v1,ans1;</div><div class="line">bitset&lt;maxn&gt; v2,ans2;</div><div class="line"></div><div class="line">void solve(int t) &#123;</div><div class="line">    int n,m,w,x,i,j;</div><div class="line">    scanf(&quot;%d%d%d&quot;,&amp;n,&amp;m,&amp;w);</div><div class="line">    fa.clear();</div><div class="line">    fb.clear();</div><div class="line">    for(i = 0; i &lt; n; i++) &#123;</div><div class="line">        scanf(&quot;%d&quot;,&amp;x);</div><div class="line">        if(x == 0) continue;</div><div class="line">        if(x == 1) x = 0;</div><div class="line">        fa.push_back(P(x,i));</div><div class="line">    &#125;</div><div class="line">    for(i = 0; i &lt; m; i++) &#123;</div><div class="line">        scanf(&quot;%d&quot;,&amp;x);</div><div class="line">        if(x == 0) continue;</div><div class="line">        if(x == 1) x = 0;</div><div class="line">        fb.push_back(P(x,i));</div><div class="line">    &#125;</div><div class="line">    x = n + m - 1;</div><div class="line">    sort(fa.begin(),fa.end());</div><div class="line">    sort(fb.begin(),fb.end());</div><div class="line">    n = fa.size();</div><div class="line">    m = fb.size();</div><div class="line">    if(n &gt; m) &#123;</div><div class="line">        swap(n,m);</div><div class="line">        swap(fa,fb);</div><div class="line">    &#125;</div><div class="line">    if(t &lt; 4) &#123;</div><div class="line">        v2.reset();</div><div class="line">        ans2.reset();</div><div class="line">        for(i = 0,j = m - 1; i &lt; n; i++) &#123;</div><div class="line">            while(j &gt;= 0 &amp;&amp; (LL)fb[j].first + fa[i].first &gt; w) v2[fb[j--].second] = 1;</div><div class="line">            ans2 |= v2 &lt;&lt; fa[i].second;</div><div class="line">        &#125;</div><div class="line">        for(i = 0; i &lt; x; i++) putchar(ans2[i] ? &apos;Y&apos; : &apos;N&apos;);</div><div class="line">        puts(&quot;&quot;);</div><div class="line">    &#125; else &#123;</div><div class="line">        v1.reset();</div><div class="line">        ans1.reset();</div><div class="line">        for(i = 0,j = m - 1; i &lt; n; i++) &#123;</div><div class="line">            while(j &gt;= 0 &amp;&amp; (LL)fb[j].first + fa[i].first &gt; w) v1[fb[j--].second] = 1;</div><div class="line">            ans1 |= v1 &lt;&lt; fa[i].second;</div><div class="line">        &#125;</div><div class="line">        for(i = 0; i &lt; x; i++) putchar(ans1[i] ? &apos;Y&apos; : &apos;N&apos;);</div><div class="line">        puts(&quot;&quot;);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">#ifdef CX_TEST</div><div class="line">    freopen(&quot;E:\\program--GG\\test_in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">#endif</div><div class="line">    int t;</div><div class="line">    scanf(&quot;%d&quot;,&amp;t);</div><div class="line">    while(t--) solve(t);</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> ACM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Dividing_Area]]></title>
      <url>/2017/07/10/gym-101237J/</url>
      <content type="html"><![CDATA[<p><a href="http://codeforces.com/gym/101237" target="_blank" rel="external">题目传送门</a><br>题意：<br>给你$n$个点，有$Q$次操作，操作分别为在两个点之间连一条边和询问在一条边左边的相邻的封闭图形的面积。<br>并且最后$n$个点会形成一个平面图。<br><a id="more"></a><br>我们把操作离线，对最后的平面图进行转对偶图操作，把每条边拆成两条单向边，并且用并查集把有向边左边的空白区域和该边连接起来，树根为空白区域，并记录空白区域面积。<br>然后倒着操作，如果是加边操作，则删除该边，并把两个有向边所相邻的空白区域用并查集合并，查询面积操作即访问树根即可。<br>NOTE：极角排序写挫了、、RE20不能自拔……<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div></pre></td><td class="code"><pre><div class="line">//created by missever</div><div class="line"></div><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">#define MAX 1000000007</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line">typedef pair&lt;int,int&gt; P;</div><div class="line">typedef pair&lt;double,int&gt; PD;</div><div class="line"></div><div class="line">const int maxn = 1e6 + 5;</div><div class="line">const double eps = 1e-10;</div><div class="line">const double pi = acos(-1);</div><div class="line">inline int sgn(double x) &#123;</div><div class="line">    if(x &lt; -eps) return -1;</div><div class="line">    else if(x &gt; eps) return 1;</div><div class="line">    else return 0;</div><div class="line">&#125;</div><div class="line">struct Point &#123;</div><div class="line">    int x,y;</div><div class="line">    Point(int _x = 0,int _y = 0): x(_x),y(_y) &#123;&#125;</div><div class="line">    Point operator + (const Point &amp;b) const &#123;</div><div class="line">        return Point(x + b.x,y + b.y);</div><div class="line">    &#125;</div><div class="line">    Point operator - (const Point &amp;b) const &#123;</div><div class="line">        return Point(x - b.x,y - b.y);</div><div class="line">    &#125;</div><div class="line">    LL operator * (const Point &amp;b) const &#123;</div><div class="line">        return (1LL * x * b.x + 1LL * y * b.y);</div><div class="line">    &#125;</div><div class="line">    LL operator ^ (const Point &amp;b) const &#123;</div><div class="line">        return (1LL * x * b.y - 1LL * y * b.x);</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line">Point p[maxn];</div><div class="line">P f[maxn];</div><div class="line"></div><div class="line">struct que &#123;</div><div class="line">    int op,u,v;</div><div class="line">    que(int _op = 0,int _u = 0,int _v = 0): op(_op),u(_u),v(_v) &#123;&#125;</div><div class="line">&#125; q[maxn];</div><div class="line"></div><div class="line">int n,tot = 0;</div><div class="line">bool vis[maxn * 2];</div><div class="line">map&lt;P,int&gt; mp;</div><div class="line">vector&lt;PD&gt; g[maxn];</div><div class="line">int df[maxn * 4];</div><div class="line">map&lt;int,LL&gt; mpp;</div><div class="line">map&lt;int,int&gt; gg[maxn];</div><div class="line">LL sm = 0;</div><div class="line">int sk;</div><div class="line">LL ans[maxn];</div><div class="line"></div><div class="line">double get_ang(int u,int v) &#123;</div><div class="line">    return atan2(p[v].y - p[u].y,p[v].x - p[u].x);</div><div class="line">&#125;</div><div class="line"></div><div class="line">int fff(int x) &#123;</div><div class="line">    if(df[x] != x) df[x] = fff(df[x]);</div><div class="line">    return df[x];</div><div class="line">&#125;</div><div class="line"></div><div class="line">void work(int u,PD e) &#123;</div><div class="line">    int v1 = u,v2 = e.second,k = 0;</div><div class="line">    f[k++] = P(v1,v2);</div><div class="line">    while(v2 != u) &#123;</div><div class="line">        v1 = gg[v2][v1];</div><div class="line">        if(v1 == 0) v1 = g[v2].back().second;</div><div class="line">        else v1 = g[v2][v1 - 1].second;</div><div class="line">        swap(v1,v2);</div><div class="line">        f[k++] = P(v1,v2);</div><div class="line">    &#125;</div><div class="line">    LL ss = 0;</div><div class="line">    for(int i = 0; i &lt; k; i++) ss += p[f[i].first] ^ p[f[i].second];</div><div class="line">    if(ss &lt;= 0) mpp[tot] = -1;</div><div class="line">    else mpp[tot] = ss;</div><div class="line">    df[tot] = tot;</div><div class="line">    for(int i = 0; i &lt; k; i++) &#123;</div><div class="line">        int j = mp[f[i]];</div><div class="line">        vis[j] = 1;</div><div class="line">        df[j] = tot;</div><div class="line">    &#125;</div><div class="line">    tot++;</div><div class="line">&#125;</div><div class="line"></div><div class="line">bool cmp(const PD &amp;a,const PD &amp;b)&#123;</div><div class="line">    if(sgn(b.first - a.first) == 0) return ((p[b.second] - p[sk]) ^ (p[a.second] - p[sk])) &lt; 0;</div><div class="line">    else return b.first - a.first &gt; eps;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void build() &#123;</div><div class="line">    int i,j;</div><div class="line">    for(i = 1; i &lt;= n; i++)&#123;</div><div class="line">        sk = i;</div><div class="line">        sort(g[i].begin(),g[i].end(),cmp);</div><div class="line">        for(j = 0;j &lt; g[i].size(); j++) gg[i][g[i][j].second] = j;</div><div class="line">    &#125;</div><div class="line">    for(i = 1; i &lt;= n; i++) &#123;</div><div class="line">        for(auto e:g[i]) &#123;</div><div class="line">            j = mp[P(i,e.second)];</div><div class="line">            if(vis[j]) continue;</div><div class="line">            work(i,e);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">    int Q,i,op,u,v;</div><div class="line">    scanf(&quot;%d&quot;,&amp;n);</div><div class="line">    for(i = 1; i &lt;= n; i++) scanf(&quot;%d%d&quot;,&amp;p[i].x,&amp;p[i].y);</div><div class="line">    scanf(&quot;%d&quot;,&amp;Q);</div><div class="line">    for(i = 1; i &lt;= Q; i++) &#123;</div><div class="line">        scanf(&quot;%d%d%d&quot;,&amp;op,&amp;u,&amp;v);</div><div class="line">        u++;</div><div class="line">        v++;</div><div class="line">        q[i] = que(op,u,v);</div><div class="line">        if(op == 1) &#123;</div><div class="line">            g[u].push_back(PD(get_ang(u,v),v));</div><div class="line">            g[v].push_back(PD(get_ang(v,u),u));</div><div class="line">            mp[P(u,v)] = tot++;</div><div class="line">            mp[P(v,u)] = tot++;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    build();</div><div class="line">    int tt = 0;</div><div class="line">    for(i = Q; i &gt; 0; i--) &#123;</div><div class="line">        if(q[i].op == 1) &#123;</div><div class="line">            u = fff(mp[P(q[i].u,q[i].v)]);</div><div class="line">            v = fff(mp[P(q[i].v,q[i].u)]);</div><div class="line">            if(u == v) continue;</div><div class="line">            if(mpp[u] == -1 || mpp[v] == -1) mpp[u] = -1;</div><div class="line">            else mpp[u] += mpp[v];</div><div class="line">            df[v] = u;</div><div class="line">        &#125; else &#123;</div><div class="line">            u = fff(mp[P(q[i].u,q[i].v)]);</div><div class="line">            ans[tt++] = mpp[u];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    for(i = tt - 1; i &gt;= 0; i--) printf(&quot;%lld\n&quot;,ans[i]);</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> ACM </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 并查集 </tag>
            
            <tag> 平面图转对偶图 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CF_#421(Div. 1)_D]]></title>
      <url>/2017/07/05/CF-421_D/</url>
      <content type="html"><![CDATA[<p><a href="http://codeforces.com/contest/819/problem/D" target="_blank" rel="external">题目传送门</a><br>题意：<br>外星球每隔T秒中只有一秒可以被观测到，其它T-1秒无法被观测。n个天文学家（分别编号为1,…,n）轮流观测天空1秒，且第i+1个科学家在第i个天文学家后ai+1秒后才执行观测，而第一个天文学家则在第n个天文学家后a1秒后才执行观测，且第一个天文学家在0秒时执行第一次观测（即第一个天文学家观测的时间是[0,1)，第二个科学家在[a2,a2+1)时观测，而最后一个天文学家在[a2+a3+…+an-1,a2+a3+…+an-1+1)时观测，之后再过a1秒后第一个天文学家继续观测）。<br><a id="more"></a><br>由于外星球具体在首次观测之后的T秒中的哪一秒出现是不确定的，若外星球在[i,i+1)时出现（0&lt;=i&lt;T-1），且天文学家j是首个观测到星球的人，则称j抢占了[i,i+1)时间片段。<br>已知T,n,a1,….,an其中(1&lt;=T&lt;=1e9，1&lt;=n&lt;=1e5，1&lt;=a1,…,an&lt;=1e9)。输出每个天文学家所抢占的时间片段数。</p>
<p>解法：<br>把n个科学家分成多个组，每组的人的观测的时间点集合在模T之后是相同的，那么他们就构成了一个环，我们只需要对每个组排序，然后就可以愉快的算出各个科学家的时间片段数了。如何确定这名科学家在哪一组和组内的排序依靠建立同余方程，并用裴蜀定理和扩展欧几里德求解。<br><del>懒得写了具体实现不如看官方题解233</del><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div></pre></td><td class="code"><pre><div class="line">//created by missever</div><div class="line"></div><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">#define MAX 1000000007</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line">typedef pair&lt;int,int&gt; P;</div><div class="line"></div><div class="line">const int maxn = 2e5 + 5;</div><div class="line">int a[maxn],tot,mm,ans[maxn];</div><div class="line">vector&lt;P&gt; g[maxn];</div><div class="line">unordered_map&lt;int,int&gt; mp;</div><div class="line"></div><div class="line">void extend_Euclid(int a, int b, int &amp;x, int &amp;y)</div><div class="line">&#123;</div><div class="line">    if(b == 0)</div><div class="line">    &#123;</div><div class="line">        x = 1;</div><div class="line">        y = 0;</div><div class="line">        return;</div><div class="line">    &#125;</div><div class="line">    extend_Euclid(b, a % b, x, y);</div><div class="line">    int tmp = x;</div><div class="line">    x = y;</div><div class="line">    y = tmp - (a / b) * y;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int get_modans(int a,int m,int b)</div><div class="line">&#123;</div><div class="line">    if(a == 0) return 0;</div><div class="line">    if(b == 0) return 0;</div><div class="line">    int d = __gcd(a,m);</div><div class="line">    int x,y;</div><div class="line">    extend_Euclid(a / d,m / d,x,y);</div><div class="line">    x = 1LL * x * b / d % m;</div><div class="line">    x = (x % m + m) % m;</div><div class="line">    x %= mm;</div><div class="line">    return x;</div><div class="line">&#125;</div><div class="line"></div><div class="line">bool cmp(const P &amp;a,const P &amp;b)&#123;</div><div class="line">    if(a.first == b.first) return a.second &gt; b.second;</div><div class="line">    else return a.first &lt; b.first;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void solve(vector&lt;P&gt; &amp;f)&#123;</div><div class="line">    int n = f.size();</div><div class="line">    sort(f.begin(),f.end(),cmp);</div><div class="line">    f.push_back(P(mm + f[0].first,0));</div><div class="line">    for(int i = 0;i &lt; n; i++) ans[f[i].second] = f[i + 1].first - f[i].first;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main()&#123;</div><div class="line">    int t,n,i;</div><div class="line">    scanf(&quot;%d%d&quot;,&amp;t,&amp;n);</div><div class="line">    scanf(&quot;%d&quot;,&amp;a[n]);</div><div class="line">    for(i = 1;i &lt; n; i++) scanf(&quot;%d&quot;,&amp;a[i]);</div><div class="line">    for(i = 1;i &lt;= n; i++)&#123;</div><div class="line">        a[i] %= t;</div><div class="line">        a[i] += a[i - 1];</div><div class="line">        if(a[i] &gt;= t) a[i] -= t;</div><div class="line">    &#125;</div><div class="line">    int k = __gcd(a[n] + t,t);</div><div class="line">    mm = t / k;</div><div class="line">    for(i = 0;i &lt; n; i++)&#123;</div><div class="line">        int x = a[i] % k;</div><div class="line">        if(mp[x] == 0) mp[x] = ++tot;</div><div class="line">        g[mp[x]].push_back(P(get_modans(a[n],t,(a[i] - x + t) % t),i));</div><div class="line">    &#125;</div><div class="line">    for(i = 1;i &lt;= tot; i++) solve(g[i]);</div><div class="line">    for(i = 0;i &lt; n; i++) printf(&quot;%d &quot;,ans[i]);</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> ACM </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 线性同余方程 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CF_#415(Div. 1)_E]]></title>
      <url>/2017/06/14/CF-415_E/</url>
      <content type="html"><![CDATA[<p>参考了一下大神的题解、、<br>题解传送门：[<a href="https://blog.sengxian.com/solutions/cf-809e" target="_blank" rel="external">https://blog.sengxian.com/solutions/cf-809e</a>]<br><a id="more"></a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div></pre></td><td class="code"><pre><div class="line">//created by missever</div><div class="line"></div><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">#define MAX 1000000007</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line"></div><div class="line">const int maxn = 2e5 + 5;</div><div class="line">int n,rt;</div><div class="line">vector&lt;int&gt; g[maxn],g2[maxn],fac[maxn],vec[maxn];</div><div class="line">int cnt = 0,bn = 0,b[maxn * 2],a[maxn];</div><div class="line">int f[maxn * 2],dfn[maxn],dis[maxn],st[maxn];</div><div class="line">bool flag[maxn];</div><div class="line">int phi[maxn],pri[maxn],mu[maxn],inv[maxn],cc[maxn],xc[maxn];</div><div class="line">int tot = 0;</div><div class="line"></div><div class="line">void add(int &amp;x,int y) &#123;</div><div class="line">    x += y;</div><div class="line">    while(x &gt;= MAX) x -= MAX;</div><div class="line">    while(x &lt; 0) x += MAX;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int mod(int x,int y) &#123;</div><div class="line">    LL z = 1LL * x * y;</div><div class="line">    return z - z / MAX * MAX;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void dfs(int u,int fa) &#123;</div><div class="line">    int tmp = ++cnt;</div><div class="line">    b[++bn] = tmp;</div><div class="line">    f[tmp] = u;</div><div class="line">    dfn[u] = bn;</div><div class="line">    for(auto v:fac[a[u]]) vec[v].push_back(u);</div><div class="line">    for (auto v:g[u]) &#123;</div><div class="line">        if (v == fa) continue;</div><div class="line">        dis[v] = dis[u] + 1;</div><div class="line">        dfs(v,u);</div><div class="line">        b[++bn] = tmp;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int dp[maxn * 2][20];</div><div class="line">void rmq_init() &#123;</div><div class="line">    int i,j;</div><div class="line">    for (i = 1; i &lt;= bn; i++) dp[i][0] = b[i];</div><div class="line">    int m = floor(log(bn*1.0)/log(2.0));</div><div class="line">    for (j = 1; j &lt;= m; j++)</div><div class="line">        for (i=1; i &lt;= bn-(1&lt;&lt;j)+1 ; i++)</div><div class="line">            dp[i][j] = min(dp[i][j-1],dp[i+(1&lt;&lt;(j-1))][j-1]);</div><div class="line">&#125;</div><div class="line">int rmq(int l,int r) &#123;</div><div class="line">    int k = floor(log((r-l+1)*1.0)/log(2.0));</div><div class="line">    return min(dp[l][k],dp[r-(1&lt;&lt;k)+1][k]);</div><div class="line">&#125;</div><div class="line"></div><div class="line">int lca(int x,int y) &#123;</div><div class="line">    if(x == y) return x;</div><div class="line">    if (dfn[x] &gt; dfn[y]) swap(x,y);</div><div class="line">    int k = rmq(dfn[x],dfn[y]);</div><div class="line">    return f[k];</div><div class="line">&#125;</div><div class="line"></div><div class="line">bool cmp(const int &amp;i, const int &amp;j) &#123;</div><div class="line">    return dfn[i] &lt; dfn[j];</div><div class="line">&#125;</div><div class="line"></div><div class="line">void build_tree(vector&lt;int&gt; &amp;vc) &#123;</div><div class="line">    int sz = 0,k = vc.size();</div><div class="line">    sort(vc.begin(),vc.end(),cmp);</div><div class="line">    st[sz] = 0;</div><div class="line">    g2[0].clear();</div><div class="line">    for (int i = 0; i &lt; k; ++i) &#123;</div><div class="line">        int u = vc[i], ll = lca(u, st[sz]);</div><div class="line">        g2[u].clear();</div><div class="line">        if (ll == st[sz]) st[++sz] = u;</div><div class="line">        else &#123;</div><div class="line">            while (sz &gt;= 1 &amp;&amp; dis[st[sz - 1]] &gt;= dis[ll]) &#123;</div><div class="line">                g2[st[sz - 1]].push_back(st[sz]);</div><div class="line">                sz--;</div><div class="line">            &#125;</div><div class="line">            if (st[sz] != ll) &#123;</div><div class="line">                g2[ll].clear();</div><div class="line">                g2[ll].push_back(st[sz--]);</div><div class="line">                st[++sz] = ll;</div><div class="line">            &#125;</div><div class="line">            st[++sz] = u;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    for (int i = 0; i &lt; sz; ++i) g2[st[i]].push_back(st[i + 1]);</div><div class="line">&#125;</div><div class="line"></div><div class="line">int dfs2(int u,int ff)&#123;</div><div class="line">    int s1,s2;</div><div class="line">    s1 = s2 = 0;</div><div class="line">    xc[u] = (a[u] % ff == 0) ? phi[a[u]] : 0;</div><div class="line">    for(auto v:g2[u])&#123;</div><div class="line">        add(s1,dfs2(v,ff));</div><div class="line">        add(s2,mod(xc[u],xc[v]));</div><div class="line">        add(xc[u],xc[v]);</div><div class="line">    &#125;</div><div class="line">    add(s1,mod(s2,2 * dis[u]));</div><div class="line">    if(a[u] % ff == 0) add(s1,mod(dis[u],mod(phi[a[u]],phi[a[u]])));</div><div class="line">    return s1;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void Get_phi() &#123;</div><div class="line">    mu[1] = phi[1] = 1;</div><div class="line">    for(int i = 2; i &lt;= n; i++) &#123;</div><div class="line">        if(!flag[i]) &#123;</div><div class="line">            pri[tot++] = i;</div><div class="line">            phi[i] = i - 1;</div><div class="line">            mu[i] = -1;</div><div class="line">        &#125;</div><div class="line">        for(int j = 0; j &lt; tot; j++) &#123;</div><div class="line">            if(i * pri[j] &gt; n) break;</div><div class="line">            flag[i * pri[j]] = true;</div><div class="line">            if(i % pri[j] == 0) &#123;</div><div class="line">                mu[i * pri[j]] = 0;</div><div class="line">                phi[i * pri[j]] = pri[j] * phi[i];</div><div class="line">                break;</div><div class="line">            &#125; else &#123;</div><div class="line">                phi[i * pri[j]] = (pri[j] - 1) * phi[i];</div><div class="line">                mu[i * pri[j]] = -mu[i];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int calc(int u) &#123;</div><div class="line">    int s1,s2;</div><div class="line">    s1 = s2 = 0;</div><div class="line">    for(auto v:vec[u]) &#123;</div><div class="line">        add(s1,phi[a[v]]);</div><div class="line">        add(s2,mod(phi[a[v]],dis[v]));</div><div class="line">    &#125;</div><div class="line">    s1 = mod(2,mod(s1,s2));</div><div class="line">    build_tree(vec[u]);</div><div class="line">    add(s1,-2 * dfs2(0,u));</div><div class="line">    return s1;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void solve() &#123;</div><div class="line">    Get_phi();</div><div class="line">    for(int i = 1; i &lt;= n; i++) &#123;</div><div class="line">        for(int j = i; j &lt;= n; j += i) fac[j].push_back(i);</div><div class="line">    &#125;</div><div class="line">    inv[1] = 1;</div><div class="line">    for(int i = 2; i &lt;= n; i++) add(inv[i],MAX - mod(MAX / i,inv[MAX % i]));</div><div class="line">    dis[1] = 1;</div><div class="line">    dfs(1,0);</div><div class="line">    rmq_init();</div><div class="line">    for(int i = 1; i &lt;= n; i++) cc[i] = calc(i);</div><div class="line">    int ans = 0;</div><div class="line">    for(int i = 1; i &lt;= n; i++) &#123;</div><div class="line">        int s = 0;</div><div class="line">        for(int j = 1; i * j &lt;= n; j++) add(s,mu[j] * cc[i * j]);</div><div class="line">        add(ans,mod(mod(s,i),inv[phi[i]]));</div><div class="line">    &#125;</div><div class="line">    ans = mod(ans,mod(inv[n],inv[n - 1]));</div><div class="line">    printf(&quot;%d\n&quot;,ans);</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">    int i,u,v;</div><div class="line">    scanf(&quot;%d&quot;,&amp;n);</div><div class="line">    for(i = 1; i &lt;= n; i++) scanf(&quot;%d&quot;,&amp;a[i]);</div><div class="line">    for(i = 1; i &lt; n; i++) &#123;</div><div class="line">        scanf(&quot;%d%d&quot;,&amp;u,&amp;v);</div><div class="line">        g[u].push_back(v);</div><div class="line">        g[v].push_back(u);</div><div class="line">    &#125;</div><div class="line">    solve();</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> ACM </category>
            
        </categories>
        
        
        <tags>
            
            <tag> DP </tag>
            
            <tag> 莫比乌斯反演 </tag>
            
            <tag> 欧拉函数 </tag>
            
            <tag> 虚树 </tag>
            
            <tag> LCA </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[URAL-1894-Non-Flying-Weather]]></title>
      <url>/2017/06/14/ural1894/</url>
      <content type="html"><![CDATA[<p>题意:给你两个相交的凸包，其中一个可以任意移动，问最少多久能使两个凸包分离<br>前置技能点：闽科夫斯基和:设P和Q是两个凸包，则有闽科夫斯基和 P+Q={a+b|a∈P,b∈Q} ,闽科夫斯基差 P-Q={a-b|a∈P,b∈Q}<br><a id="more"></a><br>性质：P+Q是一个凸包，同时也是P和Q的所有并踵点对的和的集合，P+Q顶点数不超过P和Q的顶点和<br>其差P-Q是一个凸包，同时也是P和Q的所有对踵点对的差的集合，P-Q顶点数不超过P和Q的顶点和，若P和Q相交，则P-Q包含原点<br>那么，本题就是求一个闽科夫斯基差的凸包，找出原点到凸包的最短距离……所以可以用旋转卡壳跑出所有对踵点对，然后求一下点-边的对踵点对中点到直线的距离就好了</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div></pre></td><td class="code"><pre><div class="line">//created by missever</div><div class="line"></div><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">#define MAX 1000000007</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line"></div><div class="line">const double eps = 1e-10;</div><div class="line">const double pi = acos(-1);</div><div class="line">const int maxn = 5e4 + 5;</div><div class="line">inline int sgn(double x) &#123;</div><div class="line">    if(x &lt; -eps) return -1;</div><div class="line">    else if(x &gt; eps) return 1;</div><div class="line">    else return 0;</div><div class="line">&#125;</div><div class="line">struct Point &#123;</div><div class="line">    double x,y;</div><div class="line">    Point(double _x = 0.0,double _y = 0.0): x(_x),y(_y) &#123;&#125;</div><div class="line">    Point operator + (const Point &amp;b) const &#123;</div><div class="line">        return Point(x + b.x,y + b.y);</div><div class="line">    &#125;</div><div class="line">    Point operator - (const Point &amp;b) const &#123;</div><div class="line">        return Point(x - b.x,y - b.y);</div><div class="line">    &#125;</div><div class="line">    double operator * (const Point &amp;b) const &#123; //点乘</div><div class="line">        return (x * b.x + y * b.y);</div><div class="line">    &#125;</div><div class="line">    double operator ^ (const Point &amp;b) const &#123; //叉乘，判断b点的相对于该点位置关系 左正右负</div><div class="line">        return (x * b.y - y * b.x);</div><div class="line">    &#125;</div><div class="line">    Point operator * (double b) &#123;</div><div class="line">        return Point(x * b,y * b);</div><div class="line">    &#125;</div><div class="line">    double norm() &#123; //求模</div><div class="line">        return sqrt(x * x + y * y);</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line">struct Line &#123;</div><div class="line">    Point s,e;</div><div class="line">    Line() &#123;&#125;</div><div class="line">    Line(Point _s,Point _e) &#123;</div><div class="line">        s = _s;</div><div class="line">        e = _e;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line">double dist(Point &amp;a,Point &amp;b) &#123;</div><div class="line">    return (a - b).norm();</div><div class="line">&#125;</div><div class="line">Point Point_to_Line(Point p,Line l)</div><div class="line">&#123;</div><div class="line">    double t = ((p - l.s) * (l.e - l.s)) / ((l.e - l.s) * (l.e - l.s));</div><div class="line">    return Point(l.s.x + (l.e.x - l.s.x) * t,l.s.y + (l.e.y - l.s.y) * t);</div><div class="line">&#125;</div><div class="line"></div><div class="line">//旋转卡壳</div><div class="line">double rot_solve(Point a[],Point b[],int n,int m) &#123;</div><div class="line">    int fa,fb,i;</div><div class="line">    Point u;</div><div class="line">    for(fa = i = 0; i &lt; n; i++) &#123;</div><div class="line">        if(a[i].y &lt; a[fa].y) fa = i;</div><div class="line">    &#125;</div><div class="line">    for(fb = i = 0; i &lt; m; i++) &#123;</div><div class="line">        if(b[i].y &gt; b[fb].y) fb = i;</div><div class="line">    &#125;</div><div class="line">    a[n] = a[0];</div><div class="line">    b[m] = b[0];</div><div class="line">    double ans = 1e18;</div><div class="line">    for(i = 0; i &lt; n; i++) &#123;</div><div class="line">        while(sgn(((a[fa + 1] - a[fa]) ^ (b[fb + 1] - a[fa]))- ((a[fa + 1] - a[fa]) ^ (b[fb] - a[fa]))) == 1) fb = (fb + 1) % m;</div><div class="line">        u = Point_to_Line(b[fb],Line(a[fa],a[fa + 1]));</div><div class="line">        ans = min(ans,(b[fb] - u).norm());</div><div class="line">        fa = (fa + 1) % n;</div><div class="line">    &#125;</div><div class="line">    return ans;</div><div class="line">&#125;</div><div class="line"></div><div class="line">Point a[maxn],b[maxn];</div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">    int n,m,i;</div><div class="line">    double x,y;</div><div class="line">    scanf(&quot;%d%d&quot;,&amp;n,&amp;m);</div><div class="line">    for(i = 0; i &lt; n; i++) &#123;</div><div class="line">        scanf(&quot;%lf%lf&quot;,&amp;x,&amp;y);</div><div class="line">        a[i] = Point(x,y);</div><div class="line">    &#125;</div><div class="line">    for(i = 0; i &lt; m; i++) &#123;</div><div class="line">        scanf(&quot;%lf%lf&quot;,&amp;x,&amp;y);</div><div class="line">        b[i] = Point(x,y);</div><div class="line">    &#125;</div><div class="line">    double ans = min(rot_solve(a,b,n,m),rot_solve(b,a,m,n));</div><div class="line">    ans -= 60.0;</div><div class="line">    if(sgn(ans) &lt;= 0) printf(&quot;0\n&quot;);</div><div class="line">    else printf(&quot;%.12f\n&quot;,ans);</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> ACM </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 旋转卡壳 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CF_#418(Div. 2)_E]]></title>
      <url>/2017/06/08/CF-418(Div.%202)_E/</url>
      <content type="html"><![CDATA[<p>我们按到点1的最短路径长度分层，因为满足$l_{i} \leq l_{i + 1}$，那么每一层的数一定是连续的。因为最短路径唯一，所以除1外的每个点都有且仅有一条边指向上一层，其它边要么指向同一层其它点，要么指向下一层。<br>然后我们可以构造$DP$状态$f[i][j][k][l]$表示处理到第$i$个点，上一层有$j$条边尚未连接，这一层有$k$个点还有1条边位连接和有$l$个点还有2条边未连接。转移即可。<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line">//created by missever</div><div class="line"></div><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">#define MAX 1000000007</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line"></div><div class="line">const int inv2 = 500000004;</div><div class="line">int f[55][55][55][55];</div><div class="line">int d[55],inv[55];</div><div class="line"></div><div class="line">void add(int &amp;x,int y) &#123;</div><div class="line">    x += y;</div><div class="line">    if(x &gt;= MAX) x -= MAX;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int mul(int x,int y) &#123;</div><div class="line">    LL z = 1LL * x * y;</div><div class="line">    return z - z / MAX * MAX;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">    int n,i,j,k,l;</div><div class="line">    scanf(&quot;%d&quot;,&amp;n);</div><div class="line">    for(i = 1; i &lt;= n; i++) scanf(&quot;%d&quot;,&amp;d[i]);</div><div class="line">    inv[0] = 1;</div><div class="line">    for(i = 1; i &lt;= n; i++) inv[i] = mul(inv[i - 1],inv2);</div><div class="line">    if(d[1] == 2) f[2][d[1]][0][0] = inv2;</div><div class="line">    else f[2][d[1]][0][0] = mul(333333336,inv2);</div><div class="line">    for(i = 2; i &lt;= n; i++) &#123;</div><div class="line">        for(j = 0; j &lt; i; j++) &#123;</div><div class="line">            for(k = 0; k + j &lt; i; k++) &#123;</div><div class="line">                if(f[i][0][j][k]) add(f[i][j + k * 2][0][0],mul(f[i][0][j][k],inv[k]));</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        for(j = 1; j &lt;= n - i + 1; j++) &#123;</div><div class="line">            for(k = 0; k &lt; i; k++) &#123;</div><div class="line">                for(l = 0; l + k &lt; i; l++) &#123;</div><div class="line">                    if(f[i][j][k][l]) &#123;</div><div class="line">                        int x = mul(f[i][j][k][l],j);</div><div class="line">                        if(d[i] == 2) &#123;</div><div class="line">                            add(f[i + 1][j - 1][k + 1][l],x);</div><div class="line">                            if(k) add(f[i + 1][j - 1][k - 1][l],mul(x,k));</div><div class="line">                            if(l) add(f[i + 1][j - 1][k + 1][l - 1],mul(x,l));</div><div class="line">                        &#125; else &#123;</div><div class="line">                            add(f[i + 1][j - 1][k][l + 1],x);</div><div class="line">                            add(f[i + 1][j - 1][k][l],mul(x,k));</div><div class="line">                            if(l) add(f[i + 1][j - 1][k + 2][l - 1],mul(x,l));</div><div class="line">                            if(k &gt;= 2) add(f[i + 1][j - 1][k - 2][l],mul(mul(x,inv2),mul(k,k - 1)));</div><div class="line">                            if(l &gt;= 2) add(f[i + 1][j - 1][k + 2][l - 2],mul(mul(x,inv2),mul(l,l - 1)));</div><div class="line">                            if(k &amp;&amp; l) add(f[i + 1][j - 1][k][l - 1],mul(x,mul(k,l)));</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    printf(&quot;%d\n&quot;,f[n + 1][0][0][0]);</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> ACM </category>
            
        </categories>
        
        
        <tags>
            
            <tag> DP </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ZOJ2112]]></title>
      <url>/2017/06/05/zoj2112/</url>
      <content type="html"><![CDATA[<p>这道题就是带修改的求区间第k大<br>非常经典的整体二分的题,因为满足查询的答案具有二分性，修改对答案的贡献相互独立，且可离线<br>具体过程就是通过二分总体的答案，把最后答案小于mid的询问和值小于mid操作扔进一组，把其它的扔进另一组，使总体复杂度为$nlog^{2}n$<br><a id="more"></a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div></pre></td><td class="code"><pre><div class="line">//created by missever</div><div class="line"></div><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">#define MAX 1000000007</div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line"></div><div class="line">const int maxn = 1e5 + 5;</div><div class="line">struct node &#123;</div><div class="line">    int x,y,tp,id,k;</div><div class="line">    node(int _x = 0,int _y = 0,int r = 0,int z = 0,int d = 0): x(_x),y(_y),tp(r),id(z),k(d) &#123;&#125;;</div><div class="line">&#125; f[maxn],q1[maxn],q2[maxn];</div><div class="line">int tot,num,n;</div><div class="line">int ans[maxn],a[maxn],g[maxn];</div><div class="line"></div><div class="line">int lowbit(int x) &#123;</div><div class="line">    return x &amp; (-x);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void add(int x,int d) &#123;</div><div class="line">    while(x &lt;= n) &#123;</div><div class="line">        g[x] += d;</div><div class="line">        x += lowbit(x);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int ff(int x) &#123;</div><div class="line">    int s = 0;</div><div class="line">    while(x &gt; 0) &#123;</div><div class="line">        s += g[x];</div><div class="line">        x -= lowbit(x);</div><div class="line">    &#125;</div><div class="line">    return s;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void solve(int ql,int qr,int l,int r) &#123;</div><div class="line">    if(ql &gt; qr) return;</div><div class="line">    if(l == r) &#123;</div><div class="line">        for(int i = ql; i &lt;= qr; i++) &#123;</div><div class="line">            if(f[i].tp == 3) ans[f[i].id] = l;</div><div class="line">        &#125;</div><div class="line">        return;</div><div class="line">    &#125;</div><div class="line">    int mid = (l + r) &gt;&gt; 1;</div><div class="line">    int t1 = 0,t2 = 0;</div><div class="line">    for(int i = ql; i &lt;= qr; i++) &#123;</div><div class="line">        if(f[i].tp == 1) &#123;</div><div class="line">            if(f[i].x &lt;= mid) &#123;</div><div class="line">                add(f[i].id,1);</div><div class="line">                q1[t1++] = f[i];</div><div class="line">            &#125; else q2[t2++] = f[i];</div><div class="line">        &#125; else if(f[i].tp == 2) &#123;</div><div class="line">            if(f[i].x &lt;= mid) &#123;</div><div class="line">                add(f[i].id,-1);</div><div class="line">                q1[t1++] = f[i];</div><div class="line">            &#125; else q2[t2++] = f[i];</div><div class="line">        &#125; else &#123;</div><div class="line">            int m = ff(f[i].y) - ff(f[i].x - 1);</div><div class="line">            if(m &gt;= f[i].k) q1[t1++] = f[i];</div><div class="line">            else &#123;</div><div class="line">                f[i].k -= m;</div><div class="line">                q2[t2++] = f[i];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    for(int i = ql; i &lt;= qr; i++) &#123;</div><div class="line">        if(f[i].tp == 1) &#123;</div><div class="line">            if(f[i].x &lt;= mid) add(f[i].id,-1);</div><div class="line">        &#125; else if(f[i].tp == 2) &#123;</div><div class="line">            if(f[i].x &lt;= mid) add(f[i].id,1);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    memcpy(f + ql, q1, t1 * sizeof(node));</div><div class="line">    memcpy(f + ql + t1, q2, t2 * sizeof(node));</div><div class="line">    solve(ql,ql + t1 - 1,l,mid);</div><div class="line">    solve(ql + t1,qr,mid + 1,r);</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">    int t,m,i,x,l,r;</div><div class="line">    char e;</div><div class="line">    scanf(&quot;%d&quot;,&amp;t);</div><div class="line">    while(t--) &#123;</div><div class="line">        scanf(&quot;%d%d&quot;,&amp;n,&amp;m);</div><div class="line">        tot = num = 0;</div><div class="line">        for(i = 1; i &lt;= n; i++) &#123;</div><div class="line">            scanf(&quot;%d&quot;,&amp;a[i]);</div><div class="line">            f[++tot] = node(a[i],0,1,i,0);</div><div class="line">        &#125;</div><div class="line">        for(i = 0; i &lt; m; i++) &#123;</div><div class="line">            scanf(&quot; %c&quot;,&amp;e);</div><div class="line">            //cout&lt;&lt;i&lt;&lt;endl;</div><div class="line">            if(e == &apos;Q&apos;) &#123;</div><div class="line">                scanf(&quot;%d%d%d&quot;,&amp;l,&amp;r,&amp;x);</div><div class="line">                f[++tot] = node(l,r,3,++num,x);</div><div class="line">            &#125; else &#123;</div><div class="line">                scanf(&quot;%d%d&quot;,&amp;l,&amp;x);</div><div class="line">                f[++tot] = node(a[l],0,2,l,0);</div><div class="line">                f[++tot] = node(x,0,1,l,0);</div><div class="line">                a[l] = x;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        //cout&lt;&lt;&quot;----&quot;&lt;&lt;endl;</div><div class="line">        solve(1,tot,1,1000000000);</div><div class="line">        for(i = 1; i &lt;= num; i++) printf(&quot;%d\n&quot;,ans[i]);</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> ACM </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 整体二分 </tag>
            
            <tag> 树状数组 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[敲黑板~]]></title>
      <url>/2017/06/04/plan2/</url>
      <content type="html"><![CDATA[<p>需要疯狂刷题了……然后写题解、、</p>
]]></content>
      
        <categories>
            
            <category> ACM </category>
            
        </categories>
        
        
        <tags>
            
            <tag> plan </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ACM知识点]]></title>
      <url>/2017/03/15/plan/</url>
      <content type="html"><![CDATA[<h1 id="啦啦啦"><a href="#啦啦啦" class="headerlink" title="啦啦啦~~"></a>啦啦啦~~</h1><p>2017.06.15更新</p>
<a id="more"></a>
<ul>
<li>[ ] <strong>基础算法</strong><ul>
<li>[x] 模拟</li>
<li>[x] 枚举</li>
<li>[x] 贪心</li>
<li>[x] 高精度</li>
<li>[x] 排序</li>
<li>[x] 递推</li>
<li>[x] 递归</li>
<li>[x] 二分<ul>
<li>[ ] 01分数规划</li>
<li>[ ] 整体二分</li>
</ul>
</li>
<li>[x] 倍增</li>
<li>[x] 位运算</li>
<li>[x] 离散化</li>
<li>[ ] 分块</li>
<li>[x] 前缀和</li>
<li>[x] 启发式合并</li>
<li>[x] 分治</li>
<li>[ ] 随机化</li>
<li>[x] 莫队算法</li>
</ul>
</li>
<li>[ ] <strong>数据结构</strong><ul>
<li>[x] 队列</li>
<li>[x] 栈</li>
<li>[x] 堆</li>
<li>[x] 链表</li>
<li>[x] 哈希表</li>
<li>[x] 树状数组</li>
<li>[x] 线段树</li>
<li>[ ] 平衡树<ul>
<li>[ ] Spaly</li>
<li>[ ] Treap</li>
<li>[ ] SBT</li>
</ul>
</li>
<li>[x] 主席树</li>
<li>[ ] KD树</li>
<li>[ ] 树套树</li>
<li>[x] STL</li>
</ul>
</li>
<li>[ ] <strong>图论</strong>(有待重新学习)<ul>
<li>[ ] 搜索<ul>
<li>[x] DFS</li>
<li>[x] BFS</li>
<li>[x] 记忆化</li>
<li>[ ] A*</li>
<li>[ ] IDA*</li>
<li>[ ] 模拟退火</li>
<li>[ ] 爬山算法</li>
<li>[ ] 蚁群算法？</li>
</ul>
</li>
<li>[x] 并查集</li>
<li>[x] 欧拉图</li>
<li>[x] 拓扑排序</li>
<li>[ ] 最短路<ul>
<li>[x] SPFA</li>
<li>[x] Dijkstra</li>
<li>[x] Floyd</li>
<li>[ ] k短路</li>
<li>[x] 差分约束</li>
</ul>
</li>
<li>[x] Tarjan<ul>
<li>[x] 强连通</li>
<li>[x] 双连通</li>
<li>[x] LCA</li>
<li>[x] 2-SAT</li>
</ul>
</li>
<li>[ ] 二分图<ul>
<li>[ ] 最大匹配</li>
<li>[ ] 最大权匹配</li>
</ul>
</li>
<li>[ ] 网络流<ul>
<li>[ ] 最大流最小割</li>
<li>[ ] 费用流</li>
<li>[ ] 有界流</li>
</ul>
</li>
<li>[ ] 树<ul>
<li>[x] 最小生成树</li>
<li>[x] DFS序</li>
<li>[x] 重心</li>
<li>[x] 直径        </li>
<li>[x] LCA</li>
<li>[x] 树分治</li>
<li>[ ] 树同构</li>
<li>[ ] 树链剖分</li>
<li>[ ] LCT</li>
<li>[ ] 基环树</li>
<li>[ ] 带花树(非二分图最大匹配)</li>
</ul>
</li>
<li>[x] 最小树形图</li>
</ul>
</li>
<li>[ ] <strong>字符串</strong><ul>
<li>[x] KMP</li>
<li>[x] 最小表示法</li>
<li>[x] AC自动机</li>
<li>[x] Trie树</li>
<li>[x] 后缀数组    </li>
<li>[x] 后缀自动机</li>
<li>[x] Manacher</li>
<li>[x] 回文自动机</li>
</ul>
</li>
<li>[ ] <strong>DP</strong><ul>
<li>[x] 背包</li>
<li>[x] 区间DP</li>
<li>[x] 树形DP</li>
<li>[x] 数位DP</li>
<li>[x] 期望DP</li>
<li>[x] 记忆化搜索DP</li>
<li>[x] 状压DP</li>
<li>[ ] 轮廓线DP</li>
<li>[x] 四边形不等式优化</li>
<li>[x] 斜率优化</li>
</ul>
</li>
<li>[ ] <strong>几何</strong><ul>
<li>[x] 叉积和点积</li>
<li>[x] 凸包</li>
<li>[x] 旋转卡壳</li>
<li>[x] 半平面交</li>
<li>[x] Pick定理</li>
<li>[x] 辛普森积分</li>
<li>[x] 三角剖分</li>
<li>[ ] 随机增量</li>
<li>[ ] 反演变换</li>
</ul>
</li>
<li>[ ] <strong>数学</strong><ul>
<li>[ ] 博弈<ul>
<li>[x] SG函数</li>
<li>[ ] A-Beta剪枝</li>
<li>[ ] 极大极小搜索</li>
</ul>
</li>
<li>[x] 线性筛</li>
<li>[x] 素数测试</li>
<li>[x] 欧拉函数</li>
<li>[x] 快速幂</li>
<li>[x] GCD</li>
<li>[x] EXGCD</li>
<li>[x] 乘法逆元</li>
<li>[x] CRT</li>
<li>[x] 容斥</li>
<li>[x] 矩阵</li>
<li>[x] Poyla定理</li>
<li>[x] 组合数</li>
<li>[ ] BSGS</li>
<li>[ ] 单纯形</li>
<li>[x] 拉格朗日插值法</li>
<li>[x] FFT &amp; NTT</li>
<li>[x] 多项式求逆&amp;开方</li>
<li>[x] 反演</li>
</ul>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> ACM </category>
            
        </categories>
        
        
        <tags>
            
            <tag> plan </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[miss and miss]]></title>
      <url>/2017/03/15/you/</url>
      <content type="html"><![CDATA[<blockquote>
<p>和有爱的人在一起，每一段恋情，都能成全一个更好的彼此</p>
</blockquote>
<h1 id="风信子的风"><a href="#风信子的风" class="headerlink" title="风信子的风"></a>风信子的风</h1><blockquote>
<p>春日游，杏花吹满头。陌上谁家年少足风流？<br><a id="more"></a><br>总有一个人，总有一个时刻，会让你望她的着聊天窗口发呆半天，反反复复写下了一句又一句想说的话，最后又一个字一个字的删掉……即使写下了，手指也会停留在发送键上久久不敢按下……<br>那是一道比做高考语文题还需要反复琢磨的题……</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 未 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 心情 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[maybe]]></title>
      <url>/2017/03/04/miss/</url>
      <content type="html"><![CDATA[<blockquote>
<p>和有爱的人在一起，每一段恋情，都能成全一个更好的彼此<br>有些东西，放下了，对大家都好</p>
</blockquote>
<h1 id="我们都要含蓄一点"><a href="#我们都要含蓄一点" class="headerlink" title="我们都要含蓄一点~"></a>我们都要含蓄一点~</h1><a id="more"></a>
<p>002582是好想你<br>今晚月色真美是我爱你<br>ρ=a(1+cosθ)是心形线<br>下图是I LOVE U的函数表达式<br><img src="http://p1.bqimg.com/567571/f5aa7ff6a7c82503.png" alt="I_LOVE_U"></p>
<h1 id="不恨此花飞尽，恨西园，落红难缀、"><a href="#不恨此花飞尽，恨西园，落红难缀、" class="headerlink" title="不恨此花飞尽，恨西园，落红难缀、"></a>不恨此花飞尽，恨西园，落红难缀、</h1><h1 id="去年今日此门中，人面桃花相映红。人面不知何处在，桃花依旧笑春风。"><a href="#去年今日此门中，人面桃花相映红。人面不知何处在，桃花依旧笑春风。" class="headerlink" title="去年今日此门中，人面桃花相映红。人面不知何处在，桃花依旧笑春风。"></a>去年今日此门中，人面桃花相映红。人面不知何处在，桃花依旧笑春风。</h1><blockquote>
<p>山有木兮木有枝,心悦君兮君不知<br>愿岁月可回首，且以深情共白头<br>谁拿流年乱了浮生，又借浮生乱了红尘。此生若能得幸福安稳，谁又愿颠沛流离</p>
</blockquote>
<h1 id="心若没有栖息的地方-到哪里都是流浪"><a href="#心若没有栖息的地方-到哪里都是流浪" class="headerlink" title="心若没有栖息的地方,到哪里都是流浪"></a>心若没有栖息的地方,到哪里都是流浪</h1>]]></content>
      
        <categories>
            
            <category> 未 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 心情 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CF_#388(Div. 2)_E]]></title>
      <url>/2016/12/20/CF-388(Div.%202)_E/</url>
      <content type="html"><![CDATA[<p><a href="http://codeforces.com/contest/749/problem/E" target="_blank" rel="external">题目传送门</a><br>题意略、<br>首先，我们可以发现，每对数对答案的贡献是独立的，于是，我们先考虑第$i$个数和第$j$个数对答案的贡献$P\left ( i,j \right )$(下标从$1$开始)：<br>可以，算出，包含$i$和$j$的区间个数为$i\left ( n - j + 1 \right )$个，对于每个区间，我们可以发现第$i$个数在第$j$个数前面的概率和第$i$个数在第$j$个数后面的概率是相同的，都是$\frac{1}{2}$(原因想想就知道了)。当选择的区间没有同时包含$i$和$j$时，其贡献为$\left[ a_i &gt; a_j \right]$<a id="more"></a><br>所以，我们就能得到<br>$P\left ( i,j \right )= \left ( 1 - \frac{2i\left ( n - j + 1 \right )}{n\left ( n + 1 \right )}\right )\left [ a_{i}&gt; a_{j} \right ] + \frac{i\left ( n - j + 1 \right )}{n\left ( n + 1 \right )}$<br>所以，最后的答案就是<br>$$\sum_{i = 1}^{n -1}\sum_{j = i + 1}^{n}\left ( 1 - \frac{2i\left ( n - j + 1 \right )}{n\left ( n + 1 \right )}\right )\left [ a_{i}&gt; a_{j} \right ] + \frac{i\left ( n - j + 1 \right )}{n\left ( n + 1 \right )}$$<br>当然，我们肯定不能暴力枚举每一对$i$和$j$，但是，我们把上式变形一下，然后化简，就可以得到<br>$$\sum_{i = 1}^{n - 1}\left ( \frac{i\left ( n - i \right )\left ( n - i + 1 \right )}{2n\left ( n + 1 \right )} + \sum_{j = i + 1}^{n}\left [ a_{i} &gt; a_{j} \right ] +  \frac{2i}{n\left ( n + 1 \right )} \sum_{j = i + 1}^{n}\left ( n - j + 1 \right )\left [ a_{i}&gt; a_{j} \right ] \right )$$<br>右边的两个和式一个就是求逆序数个数，另一个就是求逆序数的下标和，显然都可以在$nlogn$的时间维护出来<br>所以……就做出来啦</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//created by missever</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 1000000007</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</div><div class="line"></div><div class="line"><span class="keyword">typedef</span> pair&lt;LL,LL&gt; P;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100005</span>;</div><div class="line">LL sum[maxn * <span class="number">4</span>];</div><div class="line"><span class="keyword">int</span> num[maxn * <span class="number">4</span>];</div><div class="line"><span class="keyword">int</span> a[maxn],n;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> t,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span>(l == r)</div><div class="line">    &#123;</div><div class="line">        num[t]++;</div><div class="line">        sum[t] += n - x + <span class="number">1</span>;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</div><div class="line">    <span class="keyword">if</span>(a[x] &lt;= mid) add(t&lt;&lt;<span class="number">1</span>,l,mid,x);</div><div class="line">    <span class="keyword">else</span> add(t&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid + <span class="number">1</span>,r,x);</div><div class="line">    num[t]++;</div><div class="line">    sum[t] += n - x + <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function">P <span class="title">query</span><span class="params">(<span class="keyword">int</span> t,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span>(r &lt;= a[x]) <span class="keyword">return</span> P(sum[t],num[t]);</div><div class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</div><div class="line">    <span class="keyword">if</span>(a[x] &lt;= mid) <span class="keyword">return</span> query(t&lt;&lt;<span class="number">1</span>,l,mid,x);</div><div class="line">    <span class="keyword">else</span></div><div class="line">    &#123;</div><div class="line">        P u,v;</div><div class="line">        u = query(t&lt;&lt;<span class="number">1</span>,l,mid,x);</div><div class="line">        v = query(t&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid + <span class="number">1</span>,r,x);</div><div class="line">        <span class="keyword">return</span> P(u.first + v.first,u.second + v.second);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> i;</div><div class="line">    P u;</div><div class="line">    LL f = <span class="number">0</span>,e = <span class="number">0</span>;</div><div class="line">    <span class="keyword">long</span> <span class="keyword">double</span> ans;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    <span class="keyword">for</span>(i = <span class="number">1</span>;i &lt;= n; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</div><div class="line">    add(<span class="number">1</span>,<span class="number">1</span>,n,n);</div><div class="line">    <span class="keyword">for</span>(i = n - <span class="number">1</span>;i &gt; <span class="number">0</span>; i--)</div><div class="line">    &#123;</div><div class="line">        e += <span class="number">1L</span>L * (n - i) * (n - i + <span class="number">1</span>) / <span class="number">2</span> * i;</div><div class="line">        u = query(<span class="number">1</span>,<span class="number">1</span>,n,i);</div><div class="line">        e -= u.first * i * <span class="number">2L</span>L;</div><div class="line">        f += u.second;</div><div class="line">        add(<span class="number">1</span>,<span class="number">1</span>,n,i);</div><div class="line">    &#125;</div><div class="line">    ans = <span class="number">1.0</span> * e / (<span class="number">1L</span>L * n * (n + <span class="number">1</span>)) + f;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%.10f\n"</span>,(<span class="keyword">double</span>)ans);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>后记：<br>使用下标要加斜杠，不然显示不出来<br>大括号……也有问题，还是别用了<br><del>结论：GFM并不是标准的markdown</del></p>
]]></content>
      
        <categories>
            
            <category> ACM </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 概率 </tag>
            
            <tag> 线段树 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CF_#384(Div. 2)_E]]></title>
      <url>/2016/12/15/CF-384(Div.%202)_E/</url>
      <content type="html"><![CDATA[<p><a href="http://codeforces.com/contest/743/problem/E" target="_blank" rel="external">题目传送门</a><br>题意就是给你一个只含数字1~8的序列，让你找到一个最长的子序列，这个子序列满足1~8的个数相差不超过1，相同数字必须连续出现。<br>首先，我们假设选择的同一数字最少个数为t，那么最多个数就为t+1，然后我们可以枚举这个t是多少，或者二分这个t。<a id="more"></a><br>然后我们考虑对于一个给定的t，怎么求答案，我们考虑用一个数组f[i][j]表示计算了前i个数状态为j的最大个数，j表示1~8中哪些数字已经选了，因为题目要求相同数字必须连续，所以每种数字只用选一次，所以可以用DP很好的实现。然后我们考虑转移，定义b[k]表示第k个数字从i+1开始的第t次出现的最小位置，b[k]表示第k个数字从i+1开始的第t+1次出现的最小位置，然后就有转移方程<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">updata(f[b[k]][j | (<span class="number">1</span> &lt;&lt; k)],f[i][j] + t);</div><div class="line">updata(f[c[k]][j | (<span class="number">1</span> &lt;&lt; k)],f[i][j] + t + <span class="number">1</span>);</div></pre></td></tr></table></figure></p>
<p>而b[k]和c[k]我们可以在线性时间贪心出来，具体实现看代码、<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//created by missever</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 1000000007</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</div><div class="line"></div><div class="line"><span class="keyword">int</span> a[<span class="number">1205</span>],n,ans = <span class="number">0</span>;</div><div class="line"><span class="keyword">int</span> f[<span class="number">1205</span>][<span class="number">1</span>&lt;&lt;<span class="number">8</span>],b[<span class="number">9</span>],c[<span class="number">9</span>];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata</span><span class="params">(<span class="keyword">int</span> &amp;x,<span class="keyword">int</span> y)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span>(x == <span class="number">-1</span>) x = y;</div><div class="line">    <span class="keyword">else</span> x = max(x,y);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> t)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">memset</span>(f,<span class="number">-1</span>,<span class="keyword">sizeof</span>(f));</div><div class="line">    <span class="keyword">int</span> i,j,k;</div><div class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</div><div class="line">    &#123;</div><div class="line">        j = <span class="number">0</span>;</div><div class="line">        b[i] = <span class="number">0</span>;</div><div class="line">        <span class="keyword">while</span>(j &lt; t &amp;&amp; b[i] &lt;= n)</div><div class="line">        &#123;</div><div class="line">            b[i]++;</div><div class="line">            <span class="keyword">if</span>(a[b[i]] == i) j++;</div><div class="line">        &#125;</div><div class="line">        c[i] = b[i];</div><div class="line">        <span class="keyword">while</span>(j &lt;= t &amp;&amp; c[i] &lt;= n)</div><div class="line">        &#123;</div><div class="line">            c[i]++;</div><div class="line">            <span class="keyword">if</span>(a[c[i]] == i) j++;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(k = <span class="number">0</span>; k &lt; <span class="number">8</span>; k++)</div><div class="line">    &#123;</div><div class="line">        updata(f[b[k]][(<span class="number">1</span> &lt;&lt; k)],t);</div><div class="line">        updata(f[c[k]][(<span class="number">1</span> &lt;&lt; k)],t + <span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">    &#123;</div><div class="line">        j = a[i];</div><div class="line">        b[j] = c[j];</div><div class="line">        c[j]++;</div><div class="line">        <span class="keyword">while</span>(a[c[j]] != j &amp;&amp; c[j] &lt;= n) c[j]++;</div><div class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; (<span class="number">1</span> &lt;&lt; <span class="number">8</span>); j++)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">if</span>(f[i][j] != <span class="number">-1</span>)</div><div class="line">            &#123;</div><div class="line">                <span class="keyword">for</span>(k = <span class="number">0</span>; k &lt; <span class="number">8</span>; k++)</div><div class="line">                &#123;</div><div class="line">                    <span class="keyword">if</span>(!(j &amp; (<span class="number">1</span> &lt;&lt; k)))</div><div class="line">                    &#123;</div><div class="line">                        updata(f[b[k]][j | (<span class="number">1</span> &lt;&lt; k)],f[i][j] + t);</div><div class="line">                        updata(f[c[k]][j | (<span class="number">1</span> &lt;&lt; k)],f[i][j] + t + <span class="number">1</span>);</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    i = <span class="number">-1</span>;</div><div class="line">    <span class="keyword">for</span>(j = <span class="number">1</span>; j &lt;= n; j++) i = max(i,f[j][(<span class="number">1</span> &lt;&lt; <span class="number">8</span>) - <span class="number">1</span>]);</div><div class="line">    ans = max(ans,i);</div><div class="line">    <span class="keyword">return</span> (i &gt;= <span class="number">0</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i,l,r,mid;</div><div class="line">    <span class="keyword">int</span> p[<span class="number">10</span>];</div><div class="line">    <span class="built_in">memset</span>(p,<span class="number">0</span>,<span class="keyword">sizeof</span>(p));</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    <span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">    &#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</div><div class="line">        a[i]--;</div><div class="line">        p[a[i]] = <span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) ans += p[i];</div><div class="line">    l = <span class="number">1</span>;</div><div class="line">    r = n / <span class="number">8</span>;</div><div class="line">    <span class="keyword">while</span>(l &lt;= r)</div><div class="line">    &#123;</div><div class="line">        mid = (l + r) &gt;&gt; <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span>(check(mid)) l = mid + <span class="number">1</span>;</div><div class="line">        <span class="keyword">else</span> r = mid - <span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> ACM </category>
            
        </categories>
        
        
        <tags>
            
            <tag> DP </tag>
            
            <tag> 二分 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[无题]]></title>
      <url>/2016/12/10/luanluande/</url>
      <content type="html"><![CDATA[<h1 id="心似繁星，情如春水"><a href="#心似繁星，情如春水" class="headerlink" title="心似繁星，情如春水"></a>心似繁星，情如春水</h1><p>每天的脑子都是那么的乱，那么，我为什么不把那些碎片化的思绪串接一下呢、<br><a id="more"></a></p>
<h1 id="思"><a href="#思" class="headerlink" title="思"></a>思</h1><p><img src="http://i1.piimg.com/567571/39faa75d8f915750.jpg" alt="图片测试"><br>时间呀时间，你去哪里了呀……虽然才大二，但是感觉实习已经离我不远了……<br>所有害怕面对的，终会去面对，所有不想结束的，终会去结束、</p>
<h1 id="弃"><a href="#弃" class="headerlink" title="弃"></a>弃</h1><p>比赛雪崩，考试忘记……好想好想去睡那么一觉……<br>感觉需要颓废一天了……</p>
]]></content>
      
        <categories>
            
            <category> 未 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 心情 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[临行、前夕]]></title>
      <url>/2016/12/08/who_know/</url>
      <content type="html"><![CDATA[<blockquote>
<p>明天就要去上海参加EC-final了，但是此文与此无关，<del>迷迷迷</del></p>
</blockquote>
<h1 id="昨日，未识"><a href="#昨日，未识" class="headerlink" title="昨日，未识"></a>昨日，未识</h1><p>  成都的天气，在经历了几天的雾霾，现在似乎有了一些些好转。不过温度，似乎越来越冷了呢。<a id="more"></a><br>  不知几时，地上的银杏落叶已经堆满，冬初的凄凉，在那泛黄的世界中被尽数诉说。行走在其间，总有着一种时间的沧桑感。对呀，已经又是一年了，这一学期也快要结束了。时间过得总是那么的快，感觉我都来不及驻足观望一番，就都过去了，只能去匆匆迎接新的时光。<br>  听闻以前的我很高冷，其实仔细想想，现在的我，似乎真的与以前不同了呢。是自我保护意识太强了吗，或是无话可说，或是其它什么的，以前的我话似乎比现在少很多。虽然，我也不认为我现在话就很多了。应该，对熟一点人，我的话才会多那么一些吧。不过，有时候想想，我为什么一定要话多呢，我只需要做那个我自己认为可以的我就好了。<del>酒逢知己千杯少，话不投机半句多</del><br>  有时候，也会想让自己作出改变，于是有时候就会决定自己要把这个改掉，可能结果不尽如人意。有时候，我想让自己去为一个人改变，或许自我感觉这样的成功率要高一些吧。的确，这样确实让我改变了很多，但是，有时候又觉得，那样似乎又不是我想要的我了。<br>  过去的都过去了，现在的我和过去的我并没有什么不好的，以后的我也许和现在的我会有很多巨大的差异，但是又有什么实质的不同吗？</p>
<h1 id="我该做什么"><a href="#我该做什么" class="headerlink" title="我该做什么"></a>我该做什么</h1><p>  我该做什么呢，这个问题感觉我并不清楚吧。<br>  有时候，觉得学习课本是必须的，但是，又不是很想学，总是由于某些客观的因素被动的学习着某些知识，终是考完就忘光的节奏。<br>  有时候呢，觉得我需要学习更多计算机相关的知识，但是又发现食之无味，兴趣大减，倒不如学习ACM相关的一些知识。<br>  也有时候，想去打游戏，但是，打着打着，还是觉得无趣，或许一个人的游戏终不算是游戏吧。<br>  其实呢，现在也还是不错的，每天学一学ACM的知识，也挂一挂游戏，虽然对专业的教的知识已经丧失了以前的兴趣，但是也还是会去看一看。<br>  就这样吧，这样就可以了。<br>  <del>卡题了，码不动了</del></p>
]]></content>
      
        <categories>
            
            <category> 未 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 心情 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CDOJ 811 GCD]]></title>
      <url>/2016/12/08/CDOJ%20811%20GCD/</url>
      <content type="html"><![CDATA[<p>建议先看这篇<a href="http://blog.csdn.net/skywalkert/article/details/50500009" target="_blank" rel="external">文章</a>.<br>很显然，所求的式子可以化为<br>$$\sum_{i=1}^{n}i^{k}\left(2\phi\left(\frac{n}{i}\right)-1\right)$$<br>其中，$\phi\left(\frac{n}{i}\right)$是欧拉函数的前缀和，这个可以用刚刚提到的那篇文章的方法在$o\left ( n^{\frac{2}{3}} \right )$复杂度求解。而左边那个$k$次方前缀和可以直接百度求值，或者暴力插值求解。<br><del>反正就这样搞搞就行了，智障少年写不动题解了</del><br><a id="more"></a></p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//created by missever</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 1000000007</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</div><div class="line"></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e7</span>+<span class="number">5</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> rev = (MAX + <span class="number">1</span>) &gt;&gt; <span class="number">1</span>;</div><div class="line"><span class="keyword">bool</span> flag[maxn];</div><div class="line"><span class="keyword">int</span> phi[maxn],pri[maxn];</div><div class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>,k;</div><div class="line">LL sum[maxn];</div><div class="line">LL a[<span class="number">8</span>],b[<span class="number">8</span>],c[<span class="number">8</span>];</div><div class="line"><span class="built_in">map</span>&lt;LL,LL&gt; p;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">Get_phi</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    phi[<span class="number">1</span>] = <span class="number">1</span>;</div><div class="line">    sum[<span class="number">1</span>] = <span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; maxn; i++)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span>(!flag[i])</div><div class="line">        &#123;</div><div class="line">            pri[cnt++] = i;</div><div class="line">            phi[i] = i - <span class="number">1</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; cnt; j++)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">if</span>(i * pri[j] &gt; maxn) <span class="keyword">break</span>;</div><div class="line">            flag[i * pri[j]] = <span class="literal">true</span>;</div><div class="line">            <span class="keyword">if</span>(i % pri[j] == <span class="number">0</span>)</div><div class="line">            &#123;</div><div class="line">                phi[i * pri[j]] = pri[j] * phi[i];</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> phi[i * pri[j]] = (pri[j] - <span class="number">1</span>) * phi[i];</div><div class="line">        &#125;</div><div class="line">        sum[i] = (sum[i - <span class="number">1</span>] + phi[i]) % MAX;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function">LL <span class="title">Get_sumpri</span><span class="params">(LL n)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span>(n &lt; maxn) <span class="keyword">return</span> sum[n];</div><div class="line">    <span class="keyword">if</span>(p.find(n) != p.end()) <span class="keyword">return</span> p[n];</div><div class="line">    LL i,j;</div><div class="line">    LL s = n % MAX * ((n + <span class="number">1</span>) % MAX) % MAX * rev % MAX;</div><div class="line">    <span class="keyword">for</span>(i = <span class="number">2</span>; i &lt;= n; i = j + <span class="number">1</span>)</div><div class="line">    &#123;</div><div class="line">        j = n / (n / i);</div><div class="line">        s = (s - (j - i + <span class="number">1</span>) % MAX * Get_sumpri(n / i) % MAX) % MAX;</div><div class="line">    &#125;</div><div class="line">    s = (s + MAX) % MAX;</div><div class="line">    p[n] = s;</div><div class="line">    <span class="keyword">return</span> s;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">extend_Euclid</span><span class="params">(LL a, LL b, LL &amp;x, LL &amp;y)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span>(b == <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        x = <span class="number">1</span>;</div><div class="line">        y = <span class="number">0</span>;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    extend_Euclid(b, a % b, x, y);</div><div class="line">    LL tmp = x;</div><div class="line">    x = y;</div><div class="line">    y = tmp - (a / b) * y;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function">LL <span class="title">Inv</span><span class="params">(LL a, LL b)</span></span></div><div class="line">&#123;</div><div class="line">    LL x, y;</div><div class="line">    extend_Euclid(a, b, x, y);</div><div class="line">    <span class="keyword">return</span> (x % b + b) % b;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function">LL <span class="title">Get_kpow</span><span class="params">(LL n)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span>(n &lt;= k + <span class="number">1</span>) <span class="keyword">return</span> a[n];</div><div class="line">    LL i,j;</div><div class="line">    LL s = <span class="number">0</span>,f;</div><div class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt;= k + <span class="number">1</span>; i++)</div><div class="line">    &#123;</div><div class="line">        f = <span class="number">1</span>;</div><div class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>;j &lt;= k + <span class="number">1</span>; j++)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">if</span>(j != i) f = (n - j) % MAX * f % MAX;</div><div class="line">        &#125;</div><div class="line">        s = (s + f * c[i] % MAX) % MAX;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> (s + MAX) % MAX;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function">LL <span class="title">Get_ans</span><span class="params">(LL n)</span></span></div><div class="line">&#123;</div><div class="line">    LL i,j;</div><div class="line">    LL s = <span class="number">0</span>,f = <span class="number">0</span>,g;</div><div class="line">    <span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i = j + <span class="number">1</span>)</div><div class="line">    &#123;</div><div class="line">        j = n / (n / i);</div><div class="line">        g = Get_kpow(j);</div><div class="line">        s = (s + (Get_sumpri(n / i) * <span class="number">2L</span>L - <span class="number">1L</span>L) % MAX * ((g - f + MAX) % MAX) % MAX) % MAX;</div><div class="line">        f = g;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> (s + MAX) % MAX;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    Get_phi();</div><div class="line">    LL n;</div><div class="line">    <span class="keyword">int</span> i,j;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;k);</div><div class="line">    b[<span class="number">0</span>] = <span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span>(i = <span class="number">1</span>;i &lt;= k + <span class="number">1</span>; i++)</div><div class="line">    &#123;</div><div class="line">        a[i] = i;</div><div class="line">        <span class="keyword">for</span>(j = <span class="number">1</span>;j &lt; k; j++) a[i] = a[i] * i % MAX;</div><div class="line">        a[i] = (a[i] + a[i - <span class="number">1</span>]) % MAX;</div><div class="line">        b[i] = b[i - <span class="number">1</span>] * i % MAX;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(i = <span class="number">1</span>;i &lt;= k + <span class="number">1</span>; i++)</div><div class="line">    &#123;</div><div class="line">        c[i] = a[i] * Inv(b[i] * b[k + <span class="number">1</span> - i] % MAX,MAX) % MAX;</div><div class="line">        <span class="keyword">if</span>((k + <span class="number">1</span> - i) &amp; <span class="number">1</span>) c[i] = -c[i];</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,Get_ans(n));</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> ACM </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 积性函数 </tag>
            
            <tag> 插值 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[初记、]]></title>
      <url>/2016/12/07/the-first-article/</url>
      <content type="html"><![CDATA[<p>终于把博客搭起来了，虽然还有很多地方没有完善……先mark一下吧、、</p>
]]></content>
      
        <categories>
            
            <category> 杂 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 心情 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
